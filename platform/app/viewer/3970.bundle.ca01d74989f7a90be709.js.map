{"version":3,"file":"3970.bundle.ca01d74989f7a90be709.js","mappings":"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","sources":["webpack:///../../../node_modules/@cornerstonejs/adapters/dist/esm/_virtual/_rollupPluginBabelHelpers.js","webpack:///../../../node_modules/@cornerstonejs/adapters/dist/esm/adapters/helpers/toArray.js","webpack:///../../../node_modules/@cornerstonejs/adapters/dist/esm/adapters/helpers/codeMeaningEquals.js","webpack:///../../../node_modules/@cornerstonejs/adapters/dist/esm/adapters/helpers/downloadDICOMData.js","webpack:///../../../node_modules/@cornerstonejs/adapters/dist/esm/adapters/Cornerstone/MeasurementReport.js","webpack:///../../../node_modules/@cornerstonejs/adapters/dist/esm/adapters/Cornerstone/cornerstone4Tag.js","webpack:///../../../node_modules/@cornerstonejs/adapters/dist/esm/adapters/Cornerstone/Length.js","webpack:///../../../node_modules/@cornerstonejs/adapters/dist/esm/adapters/Cornerstone/FreehandRoi.js","webpack:///../../../node_modules/@cornerstonejs/adapters/dist/esm/adapters/Cornerstone/Bidirectional.js","webpack:///../../../node_modules/@cornerstonejs/adapters/dist/esm/adapters/Cornerstone/EllipticalRoi.js","webpack:///../../../node_modules/@cornerstonejs/adapters/dist/esm/adapters/Cornerstone/CircleRoi.js","webpack:///../../../node_modules/@cornerstonejs/adapters/dist/esm/adapters/Cornerstone/ArrowAnnotate.js","webpack:///../../../node_modules/@cornerstonejs/adapters/dist/esm/adapters/Cornerstone/CobbAngle.js","webpack:///../../../node_modules/@cornerstonejs/adapters/dist/esm/adapters/Cornerstone/Angle.js","webpack:///../../../node_modules/@cornerstonejs/adapters/dist/esm/adapters/Cornerstone/RectangleRoi.js","webpack:///../../../node_modules/@cornerstonejs/adapters/dist/esm/adapters/helpers/getDatasetsFromImages.js","webpack:///../../../node_modules/@cornerstonejs/adapters/dist/esm/adapters/Cornerstone/Segmentation_3X.js","webpack:///../../../node_modules/@cornerstonejs/adapters/dist/esm/adapters/helpers/compareArrays.js","webpack:///../../../node_modules/@cornerstonejs/adapters/dist/esm/adapters/enums/Events.js","webpack:///../../../node_modules/@cornerstonejs/adapters/dist/esm/adapters/helpers/checkOrientation.js","webpack:///../../../node_modules/@cornerstonejs/adapters/dist/esm/adapters/helpers/checkIfPerpendicular.js","webpack:///../../../node_modules/@cornerstonejs/adapters/dist/esm/adapters/Cornerstone/Segmentation_4X.js","webpack:///../../../node_modules/@cornerstonejs/adapters/dist/esm/adapters/Cornerstone/Segmentation.js","webpack:///../../../node_modules/@cornerstonejs/adapters/dist/esm/adapters/Cornerstone/ParametricMap.js","webpack:///../../../node_modules/@cornerstonejs/adapters/dist/esm/adapters/Cornerstone3D/MeasurementReport.js","webpack:///../../../node_modules/@cornerstonejs/adapters/dist/esm/adapters/Cornerstone/index.js","webpack:///../../../node_modules/@cornerstonejs/adapters/dist/esm/adapters/Cornerstone3D/cornerstone3DTag.js","webpack:///../../../node_modules/@cornerstonejs/adapters/dist/esm/adapters/Cornerstone3D/CodingScheme.js","webpack:///../../../node_modules/@cornerstonejs/adapters/dist/esm/adapters/Cornerstone3D/ArrowAnnotate.js","webpack:///../../../node_modules/@cornerstonejs/adapters/dist/esm/adapters/Cornerstone3D/Bidirectional.js","webpack:///../../../node_modules/@cornerstonejs/adapters/dist/esm/adapters/Cornerstone3D/Angle.js","webpack:///../../../node_modules/@cornerstonejs/adapters/dist/esm/adapters/Cornerstone3D/CobbAngle.js","webpack:///../../../node_modules/@cornerstonejs/adapters/dist/esm/adapters/Cornerstone3D/CircleROI.js","webpack:///../../../node_modules/@cornerstonejs/adapters/dist/esm/adapters/Cornerstone3D/isValidCornerstoneTrackingIdentifier.js","webpack:///../../../node_modules/@cornerstonejs/adapters/dist/esm/adapters/Cornerstone3D/EllipticalROI.js","webpack:///../../../node_modules/@cornerstonejs/adapters/dist/esm/adapters/Cornerstone3D/RectangleROI.js","webpack:///../../../node_modules/@cornerstonejs/adapters/dist/esm/adapters/Cornerstone3D/Length.js","webpack:///../../../node_modules/@cornerstonejs/adapters/dist/esm/adapters/Cornerstone3D/PlanarFreehandROI.js","webpack:///../../../node_modules/@cornerstonejs/adapters/dist/esm/adapters/Cornerstone3D/Probe.js","webpack:///../../../node_modules/@cornerstonejs/adapters/dist/esm/adapters/Cornerstone3D/UltrasoundDirectional.js","webpack:///../../../node_modules/@cornerstonejs/adapters/dist/esm/adapters/Cornerstone3D/Segmentation/generateSegmentation.js","webpack:///../../../node_modules/@cornerstonejs/adapters/dist/esm/adapters/Cornerstone3D/Segmentation/generateLabelMaps2DFrom3D.js","webpack:///../../../node_modules/@cornerstonejs/adapters/dist/esm/adapters/Cornerstone3D/Segmentation/generateToolState.js","webpack:///../../../node_modules/@cornerstonejs/adapters/dist/esm/adapters/Cornerstone3D/ParametricMap/generateToolState.js","webpack:///../../../node_modules/@cornerstonejs/adapters/dist/esm/adapters/Cornerstone3D/RTStruct/utilities/getReferencedFrameOfReferenceSequence.js","webpack:///../../../node_modules/@cornerstonejs/adapters/dist/esm/adapters/Cornerstone3D/RTStruct/utilities/getReferencedSeriesSequence.js","webpack:///../../../node_modules/@cornerstonejs/adapters/dist/esm/adapters/Cornerstone3D/RTStruct/utilities/getStructureSetModule.js","webpack:///../../../node_modules/@cornerstonejs/adapters/dist/esm/adapters/Cornerstone3D/RTStruct/RTSS.js","webpack:///../../../node_modules/@cornerstonejs/adapters/dist/esm/adapters/Cornerstone3D/RTStruct/utilities/getRTROIObservationsSequence.js","webpack:///../../../node_modules/@cornerstonejs/adapters/dist/esm/adapters/Cornerstone3D/RTStruct/utilities/getPatientModule.js","webpack:///../../../node_modules/@cornerstonejs/adapters/dist/esm/adapters/Cornerstone3D/RTStruct/utilities/getRTSeriesModule.js","webpack:///../../../node_modules/@cornerstonejs/adapters/dist/esm/adapters/Cornerstone3D/RTStruct/index.js","webpack:///../../../node_modules/@cornerstonejs/adapters/dist/esm/adapters/Cornerstone3D/index.js","webpack:///../../../node_modules/@cornerstonejs/adapters/dist/esm/adapters/VTKjs/Segmentation.js","webpack:///../../../node_modules/@cornerstonejs/adapters/dist/esm/adapters/index.js","webpack:///../../../node_modules/@cornerstonejs/adapters/dist/esm/adapters/VTKjs/index.js","webpack:///../../../node_modules/iota-array/iota.js","webpack:///../../../node_modules/is-buffer/index.js","webpack:///../../../node_modules/ndarray/ndarray.js"],"sourcesContent":["function _arrayLikeToArray(r, a) {\n  (null == a || a > r.length) && (a = r.length);\n  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];\n  return n;\n}\nfunction _arrayWithHoles(r) {\n  if (Array.isArray(r)) return r;\n}\nfunction _arrayWithoutHoles(r) {\n  if (Array.isArray(r)) return _arrayLikeToArray(r);\n}\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) {\n  try {\n    var i = n[a](c),\n      u = i.value;\n  } catch (n) {\n    return void e(n);\n  }\n  i.done ? t(u) : Promise.resolve(u).then(r, o);\n}\nfunction _asyncToGenerator(n) {\n  return function () {\n    var t = this,\n      e = arguments;\n    return new Promise(function (r, o) {\n      var a = n.apply(t, e);\n      function _next(n) {\n        asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n);\n      }\n      function _throw(n) {\n        asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n);\n      }\n      _next(void 0);\n    });\n  };\n}\nfunction _classCallCheck(a, n) {\n  if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\");\n}\nfunction _defineProperties(e, r) {\n  for (var t = 0; t < r.length; t++) {\n    var o = r[t];\n    o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o);\n  }\n}\nfunction _createClass(e, r, t) {\n  return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", {\n    writable: !1\n  }), e;\n}\nfunction _createForOfIteratorHelper(r, e) {\n  var t = \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (!t) {\n    if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && \"number\" == typeof r.length) {\n      t && (r = t);\n      var n = 0,\n        F = function () {};\n      return {\n        s: F,\n        n: function () {\n          return n >= r.length ? {\n            done: !0\n          } : {\n            done: !1,\n            value: r[n++]\n          };\n        },\n        e: function (r) {\n          throw r;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var o,\n    a = !0,\n    u = !1;\n  return {\n    s: function () {\n      t = t.call(r);\n    },\n    n: function () {\n      var r = t.next();\n      return a = r.done, r;\n    },\n    e: function (r) {\n      u = !0, o = r;\n    },\n    f: function () {\n      try {\n        a || null == t.return || t.return();\n      } finally {\n        if (u) throw o;\n      }\n    }\n  };\n}\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _iterableToArray(r) {\n  if (\"undefined\" != typeof Symbol && null != r[Symbol.iterator] || null != r[\"@@iterator\"]) return Array.from(r);\n}\nfunction _iterableToArrayLimit(r, l) {\n  var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (null != t) {\n    var e,\n      n,\n      i,\n      u,\n      a = [],\n      f = !0,\n      o = !1;\n    try {\n      if (i = (t = t.call(r)).next, 0 === l) {\n        if (Object(t) !== t) return;\n        f = !1;\n      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n    } catch (r) {\n      o = !0, n = r;\n    } finally {\n      try {\n        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;\n      } finally {\n        if (o) throw n;\n      }\n    }\n    return a;\n  }\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nfunction _regeneratorRuntime() {\n  _regeneratorRuntime = function () {\n    return e;\n  };\n  var t,\n    e = {},\n    r = Object.prototype,\n    n = r.hasOwnProperty,\n    o = Object.defineProperty || function (t, e, r) {\n      t[e] = r.value;\n    },\n    i = \"function\" == typeof Symbol ? Symbol : {},\n    a = i.iterator || \"@@iterator\",\n    c = i.asyncIterator || \"@@asyncIterator\",\n    u = i.toStringTag || \"@@toStringTag\";\n  function define(t, e, r) {\n    return Object.defineProperty(t, e, {\n      value: r,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), t[e];\n  }\n  try {\n    define({}, \"\");\n  } catch (t) {\n    define = function (t, e, r) {\n      return t[e] = r;\n    };\n  }\n  function wrap(t, e, r, n) {\n    var i = e && e.prototype instanceof Generator ? e : Generator,\n      a = Object.create(i.prototype),\n      c = new Context(n || []);\n    return o(a, \"_invoke\", {\n      value: makeInvokeMethod(t, r, c)\n    }), a;\n  }\n  function tryCatch(t, e, r) {\n    try {\n      return {\n        type: \"normal\",\n        arg: t.call(e, r)\n      };\n    } catch (t) {\n      return {\n        type: \"throw\",\n        arg: t\n      };\n    }\n  }\n  e.wrap = wrap;\n  var h = \"suspendedStart\",\n    l = \"suspendedYield\",\n    f = \"executing\",\n    s = \"completed\",\n    y = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var p = {};\n  define(p, a, function () {\n    return this;\n  });\n  var d = Object.getPrototypeOf,\n    v = d && d(d(values([])));\n  v && v !== r && n.call(v, a) && (p = v);\n  var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);\n  function defineIteratorMethods(t) {\n    [\"next\", \"throw\", \"return\"].forEach(function (e) {\n      define(t, e, function (t) {\n        return this._invoke(e, t);\n      });\n    });\n  }\n  function AsyncIterator(t, e) {\n    function invoke(r, o, i, a) {\n      var c = tryCatch(t[r], t, o);\n      if (\"throw\" !== c.type) {\n        var u = c.arg,\n          h = u.value;\n        return h && \"object\" == typeof h && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) {\n          invoke(\"next\", t, i, a);\n        }, function (t) {\n          invoke(\"throw\", t, i, a);\n        }) : e.resolve(h).then(function (t) {\n          u.value = t, i(u);\n        }, function (t) {\n          return invoke(\"throw\", t, i, a);\n        });\n      }\n      a(c.arg);\n    }\n    var r;\n    o(this, \"_invoke\", {\n      value: function (t, n) {\n        function callInvokeWithMethodAndArg() {\n          return new e(function (e, r) {\n            invoke(t, n, e, r);\n          });\n        }\n        return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(e, r, n) {\n    var o = h;\n    return function (i, a) {\n      if (o === f) throw Error(\"Generator is already running\");\n      if (o === s) {\n        if (\"throw\" === i) throw a;\n        return {\n          value: t,\n          done: !0\n        };\n      }\n      for (n.method = i, n.arg = a;;) {\n        var c = n.delegate;\n        if (c) {\n          var u = maybeInvokeDelegate(c, n);\n          if (u) {\n            if (u === y) continue;\n            return u;\n          }\n        }\n        if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) {\n          if (o === h) throw o = s, n.arg;\n          n.dispatchException(n.arg);\n        } else \"return\" === n.method && n.abrupt(\"return\", n.arg);\n        o = f;\n        var p = tryCatch(e, r, n);\n        if (\"normal\" === p.type) {\n          if (o = n.done ? s : l, p.arg === y) continue;\n          return {\n            value: p.arg,\n            done: n.done\n          };\n        }\n        \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(e, r) {\n    var n = r.method,\n      o = e.iterator[n];\n    if (o === t) return r.delegate = null, \"throw\" === n && e.iterator.return && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y;\n    var i = tryCatch(o, e.iterator, r.arg);\n    if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y;\n    var a = i.arg;\n    return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y);\n  }\n  function pushTryEntry(t) {\n    var e = {\n      tryLoc: t[0]\n    };\n    1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);\n  }\n  function resetTryEntry(t) {\n    var e = t.completion || {};\n    e.type = \"normal\", delete e.arg, t.completion = e;\n  }\n  function Context(t) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], t.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(e) {\n    if (e || \"\" === e) {\n      var r = e[a];\n      if (r) return r.call(e);\n      if (\"function\" == typeof e.next) return e;\n      if (!isNaN(e.length)) {\n        var o = -1,\n          i = function next() {\n            for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next;\n            return next.value = t, next.done = !0, next;\n          };\n        return i.next = i;\n      }\n    }\n    throw new TypeError(typeof e + \" is not iterable\");\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), o(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) {\n    var e = \"function\" == typeof t && t.constructor;\n    return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name));\n  }, e.mark = function (t) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t;\n  }, e.awrap = function (t) {\n    return {\n      __await: t\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () {\n    return this;\n  }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) {\n    void 0 === i && (i = Promise);\n    var a = new AsyncIterator(wrap(t, r, n, o), i);\n    return e.isGeneratorFunction(r) ? a : a.next().then(function (t) {\n      return t.done ? t.value : a.next();\n    });\n  }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () {\n    return this;\n  }), define(g, \"toString\", function () {\n    return \"[object Generator]\";\n  }), e.keys = function (t) {\n    var e = Object(t),\n      r = [];\n    for (var n in e) r.push(n);\n    return r.reverse(), function next() {\n      for (; r.length;) {\n        var t = r.pop();\n        if (t in e) return next.value = t, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, e.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function (e) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t);\n    },\n    stop: function () {\n      this.done = !0;\n      var t = this.tryEntries[0].completion;\n      if (\"throw\" === t.type) throw t.arg;\n      return this.rval;\n    },\n    dispatchException: function (e) {\n      if (this.done) throw e;\n      var r = this;\n      function handle(n, o) {\n        return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o;\n      }\n      for (var o = this.tryEntries.length - 1; o >= 0; --o) {\n        var i = this.tryEntries[o],\n          a = i.completion;\n        if (\"root\" === i.tryLoc) return handle(\"end\");\n        if (i.tryLoc <= this.prev) {\n          var c = n.call(i, \"catchLoc\"),\n            u = n.call(i, \"finallyLoc\");\n          if (c && u) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          } else if (c) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n          } else {\n            if (!u) throw Error(\"try statement without catch or finally\");\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function (t, e) {\n      for (var r = this.tryEntries.length - 1; r >= 0; --r) {\n        var o = this.tryEntries[r];\n        if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) {\n          var i = o;\n          break;\n        }\n      }\n      i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);\n      var a = i ? i.completion : {};\n      return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a);\n    },\n    complete: function (t, e) {\n      if (\"throw\" === t.type) throw t.arg;\n      return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y;\n    },\n    finish: function (t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y;\n      }\n    },\n    catch: function (t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.tryLoc === t) {\n          var n = r.completion;\n          if (\"throw\" === n.type) {\n            var o = n.arg;\n            resetTryEntry(r);\n          }\n          return o;\n        }\n      }\n      throw Error(\"illegal catch attempt\");\n    },\n    delegateYield: function (e, r, n) {\n      return this.delegate = {\n        iterator: values(e),\n        resultName: r,\n        nextLoc: n\n      }, \"next\" === this.method && (this.arg = t), y;\n    }\n  }, e;\n}\nfunction _slicedToArray(r, e) {\n  return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest();\n}\nfunction _toConsumableArray(r) {\n  return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread();\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _unsupportedIterableToArray(r, a) {\n  if (r) {\n    if (\"string\" == typeof r) return _arrayLikeToArray(r, a);\n    var t = {}.toString.call(r).slice(8, -1);\n    return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;\n  }\n}\n\nexport { _arrayLikeToArray as arrayLikeToArray, _arrayWithHoles as arrayWithHoles, _arrayWithoutHoles as arrayWithoutHoles, _asyncToGenerator as asyncToGenerator, _classCallCheck as classCallCheck, _createClass as createClass, _createForOfIteratorHelper as createForOfIteratorHelper, _defineProperty as defineProperty, _iterableToArray as iterableToArray, _iterableToArrayLimit as iterableToArrayLimit, _nonIterableRest as nonIterableRest, _nonIterableSpread as nonIterableSpread, _objectSpread2 as objectSpread2, _regeneratorRuntime as regeneratorRuntime, _slicedToArray as slicedToArray, _toConsumableArray as toConsumableArray, _toPrimitive as toPrimitive, _toPropertyKey as toPropertyKey, _unsupportedIterableToArray as unsupportedIterableToArray };\n","var toArray = function toArray(x) {\n  return Array.isArray(x) ? x : [x];\n};\n\nexport { toArray };\n","var codeMeaningEquals = function codeMeaningEquals(codeMeaningName) {\n  return function (contentItem) {\n    return contentItem.ConceptNameCodeSequence.CodeMeaning === codeMeaningName;\n  };\n};\n\nexport { codeMeaningEquals };\n","import { data } from 'dcmjs';\nimport { Buffer } from 'buffer';\n\nvar datasetToDict = data.datasetToDict;\nfunction downloadDICOMData(bufferOrDataset, filename) {\n  var blob;\n  if (bufferOrDataset instanceof ArrayBuffer) {\n    blob = new Blob([bufferOrDataset], {\n      type: \"application/dicom\"\n    });\n  } else {\n    if (!bufferOrDataset._meta) {\n      throw new Error(\"Dataset must have a _meta property\");\n    }\n    var buffer = Buffer.from(datasetToDict(bufferOrDataset).write());\n    blob = new Blob([buffer], {\n      type: \"application/dicom\"\n    });\n  }\n  var link = document.createElement(\"a\");\n  link.href = window.URL.createObjectURL(blob);\n  link.download = filename;\n  link.click();\n}\n\nexport { downloadDICOMData };\n","import { createClass as _createClass, classCallCheck as _classCallCheck } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport { utilities, derivations, normalizers, data } from 'dcmjs';\nimport { toArray } from '../helpers/toArray.js';\nimport { codeMeaningEquals } from '../helpers/codeMeaningEquals.js';\nimport '../helpers/downloadDICOMData.js';\n\nvar TID1500 = utilities.TID1500,\n  addAccessors = utilities.addAccessors;\nvar StructuredReport = derivations.StructuredReport;\nvar Normalizer = normalizers.Normalizer;\nvar TID1500MeasurementReport = TID1500.TID1500MeasurementReport,\n  TID1501MeasurementGroup = TID1500.TID1501MeasurementGroup;\nvar DicomMetaDictionary = data.DicomMetaDictionary;\nvar FINDING = {\n  CodingSchemeDesignator: \"DCM\",\n  CodeValue: \"121071\"\n};\nvar FINDING_SITE = {\n  CodingSchemeDesignator: \"SCT\",\n  CodeValue: \"363698007\"\n};\nvar FINDING_SITE_OLD = {\n  CodingSchemeDesignator: \"SRT\",\n  CodeValue: \"G-C0E3\"\n};\nvar codeValueMatch = function codeValueMatch(group, code, oldCode) {\n  var ConceptNameCodeSequence = group.ConceptNameCodeSequence;\n  if (!ConceptNameCodeSequence) {\n    return;\n  }\n  var CodingSchemeDesignator = ConceptNameCodeSequence.CodingSchemeDesignator,\n    CodeValue = ConceptNameCodeSequence.CodeValue;\n  return CodingSchemeDesignator == code.CodingSchemeDesignator && CodeValue == code.CodeValue || oldCode && CodingSchemeDesignator == oldCode.CodingSchemeDesignator && CodeValue == oldCode.CodeValue;\n};\nfunction getTID300ContentItem(tool, toolType, ReferencedSOPSequence, toolClass) {\n  var args = toolClass.getTID300RepresentationArguments(tool);\n  args.ReferencedSOPSequence = ReferencedSOPSequence;\n  var TID300Measurement = new toolClass.TID300Representation(args);\n  return TID300Measurement;\n}\nfunction getMeasurementGroup(toolType, toolData, ReferencedSOPSequence) {\n  var toolTypeData = toolData[toolType];\n  var toolClass = MeasurementReport.CORNERSTONE_TOOL_CLASSES_BY_TOOL_TYPE[toolType];\n  if (!toolTypeData || !toolTypeData.data || !toolTypeData.data.length || !toolClass) {\n    return;\n  }\n\n  // Loop through the array of tool instances\n  // for this tool\n  var Measurements = toolTypeData.data.map(function (tool) {\n    return getTID300ContentItem(tool, toolType, ReferencedSOPSequence, toolClass);\n  });\n  return new TID1501MeasurementGroup(Measurements);\n}\nvar MeasurementReport = /*#__PURE__*/function () {\n  function MeasurementReport() {\n    _classCallCheck(this, MeasurementReport);\n  }\n  return _createClass(MeasurementReport, null, [{\n    key: \"getSetupMeasurementData\",\n    value: function getSetupMeasurementData(MeasurementGroup) {\n      var ContentSequence = MeasurementGroup.ContentSequence;\n      var contentSequenceArr = toArray(ContentSequence);\n      var findingGroup = contentSequenceArr.find(function (group) {\n        return codeValueMatch(group, FINDING);\n      });\n      var findingSiteGroups = contentSequenceArr.filter(function (group) {\n        return codeValueMatch(group, FINDING_SITE, FINDING_SITE_OLD);\n      }) || [];\n      var NUMGroup = contentSequenceArr.find(function (group) {\n        return group.ValueType === \"NUM\";\n      });\n      var SCOORDGroup = toArray(NUMGroup.ContentSequence).find(function (group) {\n        return group.ValueType === \"SCOORD\";\n      });\n      var ReferencedSOPSequence = SCOORDGroup.ContentSequence.ReferencedSOPSequence;\n      var ReferencedSOPInstanceUID = ReferencedSOPSequence.ReferencedSOPInstanceUID,\n        ReferencedFrameNumber = ReferencedSOPSequence.ReferencedFrameNumber;\n      var defaultState = {\n        sopInstanceUid: ReferencedSOPInstanceUID,\n        frameIndex: ReferencedFrameNumber || 1,\n        complete: true,\n        finding: findingGroup ? addAccessors(findingGroup.ConceptCodeSequence) : undefined,\n        findingSites: findingSiteGroups.map(function (fsg) {\n          return addAccessors(fsg.ConceptCodeSequence);\n        })\n      };\n      if (defaultState.finding) {\n        defaultState.description = defaultState.finding.CodeMeaning;\n      }\n      var findingSite = defaultState.findingSites && defaultState.findingSites[0];\n      if (findingSite) {\n        defaultState.location = findingSite[0] && findingSite[0].CodeMeaning || findingSite.CodeMeaning;\n      }\n      return {\n        defaultState: defaultState,\n        findingGroup: findingGroup,\n        findingSiteGroups: findingSiteGroups,\n        NUMGroup: NUMGroup,\n        SCOORDGroup: SCOORDGroup,\n        ReferencedSOPSequence: ReferencedSOPSequence,\n        ReferencedSOPInstanceUID: ReferencedSOPInstanceUID,\n        ReferencedFrameNumber: ReferencedFrameNumber\n      };\n    }\n  }, {\n    key: \"generateReport\",\n    value: function generateReport(toolState, metadataProvider, options) {\n      // ToolState for array of imageIDs to a Report\n      // Assume Cornerstone metadata provider has access to Study / Series / Sop Instance UID\n\n      var allMeasurementGroups = [];\n      var firstImageId = Object.keys(toolState)[0];\n      if (!firstImageId) {\n        throw new Error(\"No measurements provided.\");\n      }\n\n      /* Patient ID\n      Warning - Missing attribute or value that would be needed to build DICOMDIR - Patient ID\n      Warning - Missing attribute or value that would be needed to build DICOMDIR - Study Date\n      Warning - Missing attribute or value that would be needed to build DICOMDIR - Study Time\n      Warning - Missing attribute or value that would be needed to build DICOMDIR - Study ID\n       */\n      var generalSeriesModule = metadataProvider.get(\"generalSeriesModule\", firstImageId);\n\n      //const sopCommonModule = metadataProvider.get('sopCommonModule', firstImageId);\n\n      // NOTE: We are getting the Series and Study UIDs from the first imageId of the toolState\n      // which means that if the toolState is for multiple series, the report will have the incorrect\n      // SeriesInstanceUIDs\n      var studyInstanceUID = generalSeriesModule.studyInstanceUID,\n        seriesInstanceUID = generalSeriesModule.seriesInstanceUID;\n\n      // Loop through each image in the toolData\n      Object.keys(toolState).forEach(function (imageId) {\n        var sopCommonModule = metadataProvider.get(\"sopCommonModule\", imageId);\n        var frameNumber = metadataProvider.get(\"frameNumber\", imageId);\n        var toolData = toolState[imageId];\n        var toolTypes = Object.keys(toolData);\n        var ReferencedSOPSequence = {\n          ReferencedSOPClassUID: sopCommonModule.sopClassUID,\n          ReferencedSOPInstanceUID: sopCommonModule.sopInstanceUID\n        };\n        if (Normalizer.isMultiframeSOPClassUID(sopCommonModule.sopClassUID)) {\n          ReferencedSOPSequence.ReferencedFrameNumber = frameNumber;\n        }\n\n        // Loop through each tool type for the image\n        var measurementGroups = [];\n        toolTypes.forEach(function (toolType) {\n          var group = getMeasurementGroup(toolType, toolData, ReferencedSOPSequence);\n          if (group) {\n            measurementGroups.push(group);\n          }\n        });\n        allMeasurementGroups = allMeasurementGroups.concat(measurementGroups);\n      });\n      var _MeasurementReport = new TID1500MeasurementReport({\n        TID1501MeasurementGroups: allMeasurementGroups\n      }, options);\n\n      // TODO: what is the correct metaheader\n      // http://dicom.nema.org/medical/Dicom/current/output/chtml/part10/chapter_7.html\n      // TODO: move meta creation to happen in derivations.js\n      var fileMetaInformationVersionArray = new Uint8Array(2);\n      fileMetaInformationVersionArray[1] = 1;\n      var derivationSourceDataset = {\n        StudyInstanceUID: studyInstanceUID,\n        SeriesInstanceUID: seriesInstanceUID\n        //SOPInstanceUID: sopInstanceUID, // TODO: Necessary?\n        //SOPClassUID: sopClassUID,\n      };\n      var _meta = {\n        FileMetaInformationVersion: {\n          Value: [fileMetaInformationVersionArray.buffer],\n          vr: \"OB\"\n        },\n        //MediaStorageSOPClassUID\n        //MediaStorageSOPInstanceUID: sopCommonModule.sopInstanceUID,\n        TransferSyntaxUID: {\n          Value: [\"1.2.840.10008.1.2.1\"],\n          vr: \"UI\"\n        },\n        ImplementationClassUID: {\n          Value: [DicomMetaDictionary.uid()],\n          // TODO: could be git hash or other valid id\n          vr: \"UI\"\n        },\n        ImplementationVersionName: {\n          Value: [\"dcmjs\"],\n          vr: \"SH\"\n        }\n      };\n      var _vrMap = {\n        PixelData: \"OW\"\n      };\n      derivationSourceDataset._meta = _meta;\n      derivationSourceDataset._vrMap = _vrMap;\n      var report = new StructuredReport([derivationSourceDataset]);\n      var contentItem = _MeasurementReport.contentItem(derivationSourceDataset);\n\n      // Merge the derived dataset with the content from the Measurement Report\n      report.dataset = Object.assign(report.dataset, contentItem);\n      report.dataset._meta = _meta;\n      report.dataset.SpecificCharacterSet = \"ISO_IR 192\";\n      return report;\n    }\n\n    /**\n     * Generate Cornerstone tool state from dataset\n     * @param {object} dataset dataset\n     * @param {object} hooks\n     * @param {function} hooks.getToolClass Function to map dataset to a tool class\n     * @returns\n     */\n  }, {\n    key: \"generateToolState\",\n    value: function generateToolState(dataset) {\n      var hooks = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      // For now, bail out if the dataset is not a TID1500 SR with length measurements\n      if (dataset.ContentTemplateSequence.TemplateIdentifier !== \"1500\") {\n        throw new Error(\"This package can currently only interpret DICOM SR TID 1500\");\n      }\n      var REPORT = \"Imaging Measurements\";\n      var GROUP = \"Measurement Group\";\n      var TRACKING_IDENTIFIER = \"Tracking Identifier\";\n\n      // Identify the Imaging Measurements\n      var imagingMeasurementContent = toArray(dataset.ContentSequence).find(codeMeaningEquals(REPORT));\n\n      // Retrieve the Measurements themselves\n      var measurementGroups = toArray(imagingMeasurementContent.ContentSequence).filter(codeMeaningEquals(GROUP));\n\n      // For each of the supported measurement types, compute the measurement data\n      var measurementData = {};\n      var cornerstoneToolClasses = MeasurementReport.CORNERSTONE_TOOL_CLASSES_BY_UTILITY_TYPE;\n      var registeredToolClasses = [];\n      Object.keys(cornerstoneToolClasses).forEach(function (key) {\n        registeredToolClasses.push(cornerstoneToolClasses[key]);\n        measurementData[key] = [];\n      });\n      measurementGroups.forEach(function (measurementGroup) {\n        var measurementGroupContentSequence = toArray(measurementGroup.ContentSequence);\n        var TrackingIdentifierGroup = measurementGroupContentSequence.find(function (contentItem) {\n          return contentItem.ConceptNameCodeSequence.CodeMeaning === TRACKING_IDENTIFIER;\n        });\n        var TrackingIdentifierValue = TrackingIdentifierGroup.TextValue;\n        var toolClass = hooks.getToolClass ? hooks.getToolClass(measurementGroup, dataset, registeredToolClasses) : registeredToolClasses.find(function (tc) {\n          return tc.isValidCornerstoneTrackingIdentifier(TrackingIdentifierValue);\n        });\n        if (toolClass) {\n          var measurement = toolClass.getMeasurementData(measurementGroup);\n          console.log(\"=== \".concat(toolClass.toolType, \" ===\"));\n          console.log(measurement);\n          measurementData[toolClass.toolType].push(measurement);\n        }\n      });\n\n      // NOTE: There is no way of knowing the cornerstone imageIds as that could be anything.\n      // That is up to the consumer to derive from the SOPInstanceUIDs.\n      return measurementData;\n    }\n  }, {\n    key: \"registerTool\",\n    value: function registerTool(toolClass) {\n      MeasurementReport.CORNERSTONE_TOOL_CLASSES_BY_UTILITY_TYPE[toolClass.utilityToolType] = toolClass;\n      MeasurementReport.CORNERSTONE_TOOL_CLASSES_BY_TOOL_TYPE[toolClass.toolType] = toolClass;\n      MeasurementReport.MEASUREMENT_BY_TOOLTYPE[toolClass.toolType] = toolClass.utilityToolType;\n    }\n  }]);\n}();\nMeasurementReport.MEASUREMENT_BY_TOOLTYPE = {};\nMeasurementReport.CORNERSTONE_TOOL_CLASSES_BY_UTILITY_TYPE = {};\nMeasurementReport.CORNERSTONE_TOOL_CLASSES_BY_TOOL_TYPE = {};\n\nexport { MeasurementReport as default };\n","var CORNERSTONE_4_TAG = \"cornerstoneTools@^4.0.0\";\n\nexport { CORNERSTONE_4_TAG as default };\n","import { slicedToArray as _slicedToArray, createClass as _createClass, objectSpread2 as _objectSpread2, classCallCheck as _classCallCheck } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport { utilities } from 'dcmjs';\nimport MeasurementReport from './MeasurementReport.js';\nimport CORNERSTONE_4_TAG from './cornerstone4Tag.js';\n\nvar TID300Length = utilities.TID300.Length;\nvar LENGTH = \"Length\";\nvar Length = /*#__PURE__*/function () {\n  function Length() {\n    _classCallCheck(this, Length);\n  }\n  return _createClass(Length, null, [{\n    key: \"getMeasurementData\",\n    value:\n    // TODO: this function is required for all Cornerstone Tool Adapters, since it is called by MeasurementReport.\n    function getMeasurementData(MeasurementGroup) {\n      var _MeasurementReport$ge = MeasurementReport.getSetupMeasurementData(MeasurementGroup),\n        defaultState = _MeasurementReport$ge.defaultState,\n        NUMGroup = _MeasurementReport$ge.NUMGroup,\n        SCOORDGroup = _MeasurementReport$ge.SCOORDGroup;\n      var state = _objectSpread2(_objectSpread2({}, defaultState), {}, {\n        length: NUMGroup.MeasuredValueSequence.NumericValue,\n        toolType: Length.toolType,\n        handles: {\n          start: {},\n          end: {},\n          textBox: {\n            hasMoved: false,\n            movesIndependently: false,\n            drawnIndependently: true,\n            allowedOutsideImage: true,\n            hasBoundingBox: true\n          }\n        }\n      });\n      var _SCOORDGroup$GraphicD = _slicedToArray(SCOORDGroup.GraphicData, 4);\n      state.handles.start.x = _SCOORDGroup$GraphicD[0];\n      state.handles.start.y = _SCOORDGroup$GraphicD[1];\n      state.handles.end.x = _SCOORDGroup$GraphicD[2];\n      state.handles.end.y = _SCOORDGroup$GraphicD[3];\n      return state;\n    }\n  }, {\n    key: \"getTID300RepresentationArguments\",\n    value: function getTID300RepresentationArguments(tool) {\n      var handles = tool.handles,\n        finding = tool.finding,\n        findingSites = tool.findingSites;\n      var point1 = handles.start;\n      var point2 = handles.end;\n      var distance = tool.length;\n      var trackingIdentifierTextValue = \"cornerstoneTools@^4.0.0:Length\";\n      return {\n        point1: point1,\n        point2: point2,\n        distance: distance,\n        trackingIdentifierTextValue: trackingIdentifierTextValue,\n        finding: finding,\n        findingSites: findingSites || []\n      };\n    }\n  }]);\n}();\nLength.toolType = LENGTH;\nLength.utilityToolType = LENGTH;\nLength.TID300Representation = TID300Length;\nLength.isValidCornerstoneTrackingIdentifier = function (TrackingIdentifier) {\n  if (!TrackingIdentifier.includes(\":\")) {\n    return false;\n  }\n  var _TrackingIdentifier$s = TrackingIdentifier.split(\":\"),\n    _TrackingIdentifier$s2 = _slicedToArray(_TrackingIdentifier$s, 2),\n    cornerstone4Tag = _TrackingIdentifier$s2[0],\n    toolType = _TrackingIdentifier$s2[1];\n  if (cornerstone4Tag !== CORNERSTONE_4_TAG) {\n    return false;\n  }\n  return toolType === LENGTH;\n};\nMeasurementReport.registerTool(Length);\n\nexport { Length as default };\n","import { slicedToArray as _slicedToArray, createClass as _createClass, objectSpread2 as _objectSpread2, classCallCheck as _classCallCheck } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport { utilities } from 'dcmjs';\nimport MeasurementReport from './MeasurementReport.js';\nimport CORNERSTONE_4_TAG from './cornerstone4Tag.js';\n\nvar TID300Polyline = utilities.TID300.Polyline;\nvar FreehandRoi = /*#__PURE__*/function () {\n  function FreehandRoi() {\n    _classCallCheck(this, FreehandRoi);\n  }\n  return _createClass(FreehandRoi, null, [{\n    key: \"getMeasurementData\",\n    value: function getMeasurementData(MeasurementGroup) {\n      var _MeasurementReport$ge = MeasurementReport.getSetupMeasurementData(MeasurementGroup),\n        defaultState = _MeasurementReport$ge.defaultState,\n        SCOORDGroup = _MeasurementReport$ge.SCOORDGroup,\n        NUMGroup = _MeasurementReport$ge.NUMGroup;\n      var state = _objectSpread2(_objectSpread2({}, defaultState), {}, {\n        toolType: FreehandRoi.toolType,\n        handles: {\n          points: [],\n          textBox: {\n            active: false,\n            hasMoved: false,\n            movesIndependently: false,\n            drawnIndependently: true,\n            allowedOutsideImage: true,\n            hasBoundingBox: true\n          }\n        },\n        cachedStats: {\n          area: NUMGroup ? NUMGroup.MeasuredValueSequence.NumericValue : 0\n        },\n        color: undefined,\n        invalidated: true\n      });\n      var GraphicData = SCOORDGroup.GraphicData;\n      for (var i = 0; i < GraphicData.length; i += 2) {\n        state.handles.points.push({\n          x: GraphicData[i],\n          y: GraphicData[i + 1]\n        });\n      }\n      return state;\n    }\n  }, {\n    key: \"getTID300RepresentationArguments\",\n    value: function getTID300RepresentationArguments(tool) {\n      var handles = tool.handles,\n        finding = tool.finding,\n        findingSites = tool.findingSites,\n        _tool$cachedStats = tool.cachedStats,\n        cachedStats = _tool$cachedStats === void 0 ? {} : _tool$cachedStats;\n      var points = handles.points;\n      var _cachedStats$area = cachedStats.area,\n        area = _cachedStats$area === void 0 ? 0 : _cachedStats$area,\n        _cachedStats$perimete = cachedStats.perimeter,\n        perimeter = _cachedStats$perimete === void 0 ? 0 : _cachedStats$perimete;\n      var trackingIdentifierTextValue = \"cornerstoneTools@^4.0.0:FreehandRoi\";\n      return {\n        points: points,\n        area: area,\n        perimeter: perimeter,\n        trackingIdentifierTextValue: trackingIdentifierTextValue,\n        finding: finding,\n        findingSites: findingSites || []\n      };\n    }\n  }]);\n}();\nFreehandRoi.toolType = \"FreehandRoi\";\nFreehandRoi.utilityToolType = \"FreehandRoi\";\nFreehandRoi.TID300Representation = TID300Polyline;\nFreehandRoi.isValidCornerstoneTrackingIdentifier = function (TrackingIdentifier) {\n  if (!TrackingIdentifier.includes(\":\")) {\n    return false;\n  }\n  var _TrackingIdentifier$s = TrackingIdentifier.split(\":\"),\n    _TrackingIdentifier$s2 = _slicedToArray(_TrackingIdentifier$s, 2),\n    cornerstone4Tag = _TrackingIdentifier$s2[0],\n    toolType = _TrackingIdentifier$s2[1];\n  if (cornerstone4Tag !== CORNERSTONE_4_TAG) {\n    return false;\n  }\n  return toolType === FreehandRoi.toolType;\n};\nMeasurementReport.registerTool(FreehandRoi);\n\nexport { FreehandRoi as default };\n","import { slicedToArray as _slicedToArray, createClass as _createClass, classCallCheck as _classCallCheck } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport { utilities } from 'dcmjs';\nimport MeasurementReport from './MeasurementReport.js';\nimport CORNERSTONE_4_TAG from './cornerstone4Tag.js';\nimport { toArray } from '../helpers/toArray.js';\nimport '../helpers/downloadDICOMData.js';\n\nvar TID300Bidirectional = utilities.TID300.Bidirectional;\nvar BIDIRECTIONAL = \"Bidirectional\";\nvar LONG_AXIS = \"Long Axis\";\nvar SHORT_AXIS = \"Short Axis\";\nvar FINDING = \"121071\";\nvar FINDING_SITE = \"G-C0E3\";\nvar Bidirectional = /*#__PURE__*/function () {\n  function Bidirectional() {\n    _classCallCheck(this, Bidirectional);\n  }\n  return _createClass(Bidirectional, null, [{\n    key: \"getMeasurementData\",\n    value:\n    // TODO: this function is required for all Cornerstone Tool Adapters, since it is called by MeasurementReport.\n    function getMeasurementData(MeasurementGroup) {\n      var ContentSequence = MeasurementGroup.ContentSequence;\n      var findingGroup = toArray(ContentSequence).find(function (group) {\n        return group.ConceptNameCodeSequence.CodeValue === FINDING;\n      });\n      var findingSiteGroups = toArray(ContentSequence).filter(function (group) {\n        return group.ConceptNameCodeSequence.CodeValue === FINDING_SITE;\n      });\n      var longAxisNUMGroup = toArray(ContentSequence).find(function (group) {\n        return group.ConceptNameCodeSequence.CodeMeaning === LONG_AXIS;\n      });\n      var longAxisSCOORDGroup = toArray(longAxisNUMGroup.ContentSequence).find(function (group) {\n        return group.ValueType === \"SCOORD\";\n      });\n      var shortAxisNUMGroup = toArray(ContentSequence).find(function (group) {\n        return group.ConceptNameCodeSequence.CodeMeaning === SHORT_AXIS;\n      });\n      var shortAxisSCOORDGroup = toArray(shortAxisNUMGroup.ContentSequence).find(function (group) {\n        return group.ValueType === \"SCOORD\";\n      });\n      var ReferencedSOPSequence = longAxisSCOORDGroup.ContentSequence.ReferencedSOPSequence;\n      var ReferencedSOPInstanceUID = ReferencedSOPSequence.ReferencedSOPInstanceUID,\n        ReferencedFrameNumber = ReferencedSOPSequence.ReferencedFrameNumber;\n\n      // Long axis\n\n      var longestDiameter = String(longAxisNUMGroup.MeasuredValueSequence.NumericValue);\n      var shortestDiameter = String(shortAxisNUMGroup.MeasuredValueSequence.NumericValue);\n      var bottomRight = {\n        x: Math.max(longAxisSCOORDGroup.GraphicData[0], longAxisSCOORDGroup.GraphicData[2], shortAxisSCOORDGroup.GraphicData[0], shortAxisSCOORDGroup.GraphicData[2]),\n        y: Math.max(longAxisSCOORDGroup.GraphicData[1], longAxisSCOORDGroup.GraphicData[3], shortAxisSCOORDGroup.GraphicData[1], shortAxisSCOORDGroup.GraphicData[3])\n      };\n      var state = {\n        sopInstanceUid: ReferencedSOPInstanceUID,\n        frameIndex: ReferencedFrameNumber || 1,\n        toolType: Bidirectional.toolType,\n        active: false,\n        handles: {\n          start: {\n            x: longAxisSCOORDGroup.GraphicData[0],\n            y: longAxisSCOORDGroup.GraphicData[1],\n            drawnIndependently: false,\n            allowedOutsideImage: false,\n            active: false,\n            highlight: false,\n            index: 0\n          },\n          end: {\n            x: longAxisSCOORDGroup.GraphicData[2],\n            y: longAxisSCOORDGroup.GraphicData[3],\n            drawnIndependently: false,\n            allowedOutsideImage: false,\n            active: false,\n            highlight: false,\n            index: 1\n          },\n          perpendicularStart: {\n            x: shortAxisSCOORDGroup.GraphicData[0],\n            y: shortAxisSCOORDGroup.GraphicData[1],\n            drawnIndependently: false,\n            allowedOutsideImage: false,\n            active: false,\n            highlight: false,\n            index: 2\n          },\n          perpendicularEnd: {\n            x: shortAxisSCOORDGroup.GraphicData[2],\n            y: shortAxisSCOORDGroup.GraphicData[3],\n            drawnIndependently: false,\n            allowedOutsideImage: false,\n            active: false,\n            highlight: false,\n            index: 3\n          },\n          textBox: {\n            highlight: false,\n            hasMoved: true,\n            active: false,\n            movesIndependently: false,\n            drawnIndependently: true,\n            allowedOutsideImage: true,\n            hasBoundingBox: true,\n            x: bottomRight.x + 10,\n            y: bottomRight.y + 10\n          }\n        },\n        invalidated: false,\n        isCreating: false,\n        longestDiameter: longestDiameter,\n        shortestDiameter: shortestDiameter,\n        toolName: \"Bidirectional\",\n        visible: true,\n        finding: findingGroup ? findingGroup.ConceptCodeSequence : undefined,\n        findingSites: findingSiteGroups.map(function (fsg) {\n          return fsg.ConceptCodeSequence;\n        })\n      };\n      return state;\n    }\n  }, {\n    key: \"getTID300RepresentationArguments\",\n    value: function getTID300RepresentationArguments(tool) {\n      var _tool$handles = tool.handles,\n        start = _tool$handles.start,\n        end = _tool$handles.end,\n        perpendicularStart = _tool$handles.perpendicularStart,\n        perpendicularEnd = _tool$handles.perpendicularEnd;\n      var shortestDiameter = tool.shortestDiameter,\n        longestDiameter = tool.longestDiameter,\n        finding = tool.finding,\n        findingSites = tool.findingSites;\n      var trackingIdentifierTextValue = \"cornerstoneTools@^4.0.0:Bidirectional\";\n      return {\n        longAxis: {\n          point1: start,\n          point2: end\n        },\n        shortAxis: {\n          point1: perpendicularStart,\n          point2: perpendicularEnd\n        },\n        longAxisLength: longestDiameter,\n        shortAxisLength: shortestDiameter,\n        trackingIdentifierTextValue: trackingIdentifierTextValue,\n        finding: finding,\n        findingSites: findingSites || []\n      };\n    }\n  }]);\n}();\nBidirectional.toolType = BIDIRECTIONAL;\nBidirectional.utilityToolType = BIDIRECTIONAL;\nBidirectional.TID300Representation = TID300Bidirectional;\nBidirectional.isValidCornerstoneTrackingIdentifier = function (TrackingIdentifier) {\n  if (!TrackingIdentifier.includes(\":\")) {\n    return false;\n  }\n  var _TrackingIdentifier$s = TrackingIdentifier.split(\":\"),\n    _TrackingIdentifier$s2 = _slicedToArray(_TrackingIdentifier$s, 2),\n    cornerstone4Tag = _TrackingIdentifier$s2[0],\n    toolType = _TrackingIdentifier$s2[1];\n  if (cornerstone4Tag !== CORNERSTONE_4_TAG) {\n    return false;\n  }\n  return toolType === BIDIRECTIONAL;\n};\nMeasurementReport.registerTool(Bidirectional);\n\nexport { Bidirectional as default };\n","import { slicedToArray as _slicedToArray, createClass as _createClass, objectSpread2 as _objectSpread2, classCallCheck as _classCallCheck } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport { utilities } from 'dcmjs';\nimport MeasurementReport from './MeasurementReport.js';\nimport CORNERSTONE_4_TAG from './cornerstone4Tag.js';\n\nvar TID300Ellipse = utilities.TID300.Ellipse;\nvar ELLIPTICALROI = \"EllipticalRoi\";\nvar EllipticalRoi = /*#__PURE__*/function () {\n  function EllipticalRoi() {\n    _classCallCheck(this, EllipticalRoi);\n  }\n  return _createClass(EllipticalRoi, null, [{\n    key: \"getMeasurementData\",\n    value:\n    // TODO: this function is required for all Cornerstone Tool Adapters, since it is called by MeasurementReport.\n    function getMeasurementData(MeasurementGroup) {\n      var _MeasurementReport$ge = MeasurementReport.getSetupMeasurementData(MeasurementGroup),\n        defaultState = _MeasurementReport$ge.defaultState,\n        NUMGroup = _MeasurementReport$ge.NUMGroup,\n        SCOORDGroup = _MeasurementReport$ge.SCOORDGroup;\n      var GraphicData = SCOORDGroup.GraphicData;\n      var majorAxis = [{\n        x: GraphicData[0],\n        y: GraphicData[1]\n      }, {\n        x: GraphicData[2],\n        y: GraphicData[3]\n      }];\n      var minorAxis = [{\n        x: GraphicData[4],\n        y: GraphicData[5]\n      }, {\n        x: GraphicData[6],\n        y: GraphicData[7]\n      }];\n\n      // Calculate two opposite corners of box defined by two axes.\n\n      var minorAxisLength = Math.sqrt(Math.pow(minorAxis[0].x - minorAxis[1].x, 2) + Math.pow(minorAxis[0].y - minorAxis[1].y, 2));\n      var minorAxisDirection = {\n        x: (minorAxis[1].x - minorAxis[0].x) / minorAxisLength,\n        y: (minorAxis[1].y - minorAxis[0].y) / minorAxisLength\n      };\n      var halfMinorAxisLength = minorAxisLength / 2;\n\n      // First end point of major axis + half minor axis vector\n      var corner1 = {\n        x: majorAxis[0].x + minorAxisDirection.x * halfMinorAxisLength,\n        y: majorAxis[0].y + minorAxisDirection.y * halfMinorAxisLength\n      };\n\n      // Second end point of major axis - half of minor axis vector\n      var corner2 = {\n        x: majorAxis[1].x - minorAxisDirection.x * halfMinorAxisLength,\n        y: majorAxis[1].y - minorAxisDirection.y * halfMinorAxisLength\n      };\n      var state = _objectSpread2(_objectSpread2({}, defaultState), {}, {\n        toolType: EllipticalRoi.toolType,\n        active: false,\n        cachedStats: {\n          area: NUMGroup ? NUMGroup.MeasuredValueSequence.NumericValue : 0\n        },\n        handles: {\n          end: {\n            x: corner1.x,\n            y: corner1.y,\n            highlight: false,\n            active: false\n          },\n          initialRotation: 0,\n          start: {\n            x: corner2.x,\n            y: corner2.y,\n            highlight: false,\n            active: false\n          },\n          textBox: {\n            hasMoved: false,\n            movesIndependently: false,\n            drawnIndependently: true,\n            allowedOutsideImage: true,\n            hasBoundingBox: true\n          }\n        },\n        invalidated: true,\n        visible: true\n      });\n      return state;\n    }\n  }, {\n    key: \"getTID300RepresentationArguments\",\n    value: function getTID300RepresentationArguments(tool) {\n      var _tool$cachedStats = tool.cachedStats,\n        cachedStats = _tool$cachedStats === void 0 ? {} : _tool$cachedStats,\n        handles = tool.handles,\n        finding = tool.finding,\n        findingSites = tool.findingSites;\n      var start = handles.start,\n        end = handles.end;\n      var area = cachedStats.area;\n      var halfXLength = Math.abs(start.x - end.x) / 2;\n      var halfYLength = Math.abs(start.y - end.y) / 2;\n      var points = [];\n      var center = {\n        x: (start.x + end.x) / 2,\n        y: (start.y + end.y) / 2\n      };\n      if (halfXLength > halfYLength) {\n        // X-axis major\n        // Major axis\n        points.push({\n          x: center.x - halfXLength,\n          y: center.y\n        });\n        points.push({\n          x: center.x + halfXLength,\n          y: center.y\n        });\n        // Minor axis\n        points.push({\n          x: center.x,\n          y: center.y - halfYLength\n        });\n        points.push({\n          x: center.x,\n          y: center.y + halfYLength\n        });\n      } else {\n        // Y-axis major\n        // Major axis\n        points.push({\n          x: center.x,\n          y: center.y - halfYLength\n        });\n        points.push({\n          x: center.x,\n          y: center.y + halfYLength\n        });\n        // Minor axis\n        points.push({\n          x: center.x - halfXLength,\n          y: center.y\n        });\n        points.push({\n          x: center.x + halfXLength,\n          y: center.y\n        });\n      }\n      var trackingIdentifierTextValue = \"cornerstoneTools@^4.0.0:EllipticalRoi\";\n      return {\n        area: area,\n        points: points,\n        trackingIdentifierTextValue: trackingIdentifierTextValue,\n        finding: finding,\n        findingSites: findingSites || []\n      };\n    }\n  }]);\n}();\nEllipticalRoi.toolType = ELLIPTICALROI;\nEllipticalRoi.utilityToolType = ELLIPTICALROI;\nEllipticalRoi.TID300Representation = TID300Ellipse;\nEllipticalRoi.isValidCornerstoneTrackingIdentifier = function (TrackingIdentifier) {\n  if (!TrackingIdentifier.includes(\":\")) {\n    return false;\n  }\n  var _TrackingIdentifier$s = TrackingIdentifier.split(\":\"),\n    _TrackingIdentifier$s2 = _slicedToArray(_TrackingIdentifier$s, 2),\n    cornerstone4Tag = _TrackingIdentifier$s2[0],\n    toolType = _TrackingIdentifier$s2[1];\n  if (cornerstone4Tag !== CORNERSTONE_4_TAG) {\n    return false;\n  }\n  return toolType === ELLIPTICALROI;\n};\nMeasurementReport.registerTool(EllipticalRoi);\n\nexport { EllipticalRoi as default };\n","import { slicedToArray as _slicedToArray, createClass as _createClass, objectSpread2 as _objectSpread2, classCallCheck as _classCallCheck } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport { utilities } from 'dcmjs';\nimport MeasurementReport from './MeasurementReport.js';\nimport CORNERSTONE_4_TAG from './cornerstone4Tag.js';\n\nvar TID300Circle = utilities.TID300.Circle;\nvar CIRCLEROI = \"CircleRoi\";\nvar CircleRoi = /*#__PURE__*/function () {\n  function CircleRoi() {\n    _classCallCheck(this, CircleRoi);\n  }\n  return _createClass(CircleRoi, null, [{\n    key: \"getMeasurementData\",\n    value: /** Gets the measurement data for cornerstone, given DICOM SR measurement data. */\n    function getMeasurementData(MeasurementGroup) {\n      var _MeasurementReport$ge = MeasurementReport.getSetupMeasurementData(MeasurementGroup),\n        defaultState = _MeasurementReport$ge.defaultState,\n        NUMGroup = _MeasurementReport$ge.NUMGroup,\n        SCOORDGroup = _MeasurementReport$ge.SCOORDGroup;\n      var GraphicData = SCOORDGroup.GraphicData;\n      var center = {\n        x: GraphicData[0],\n        y: GraphicData[1]\n      };\n      var end = {\n        x: GraphicData[2],\n        y: GraphicData[3]\n      };\n      var state = _objectSpread2(_objectSpread2({}, defaultState), {}, {\n        toolType: CircleRoi.toolType,\n        active: false,\n        cachedStats: {\n          area: NUMGroup ? NUMGroup.MeasuredValueSequence.NumericValue : 0,\n          // Dummy values to be updated by cornerstone\n          radius: 0,\n          perimeter: 0\n        },\n        handles: {\n          end: _objectSpread2(_objectSpread2({}, end), {}, {\n            highlight: false,\n            active: false\n          }),\n          initialRotation: 0,\n          start: _objectSpread2(_objectSpread2({}, center), {}, {\n            highlight: false,\n            active: false\n          }),\n          textBox: {\n            hasMoved: false,\n            movesIndependently: false,\n            drawnIndependently: true,\n            allowedOutsideImage: true,\n            hasBoundingBox: true\n          }\n        },\n        invalidated: true,\n        visible: true\n      });\n      return state;\n    }\n\n    /**\n     * Gets the TID 300 representation of a circle, given the cornerstone representation.\n     *\n     * @param {Object} tool\n     * @returns\n     */\n  }, {\n    key: \"getTID300RepresentationArguments\",\n    value: function getTID300RepresentationArguments(tool) {\n      var _tool$cachedStats = tool.cachedStats,\n        cachedStats = _tool$cachedStats === void 0 ? {} : _tool$cachedStats,\n        handles = tool.handles,\n        finding = tool.finding,\n        findingSites = tool.findingSites;\n      var center = handles.start,\n        end = handles.end;\n      var area = cachedStats.area,\n        radius = cachedStats.radius;\n      var perimeter = 2 * Math.PI * radius;\n      var points = [];\n      points.push(center);\n      points.push(end);\n      var trackingIdentifierTextValue = \"cornerstoneTools@^4.0.0:CircleRoi\";\n      return {\n        area: area,\n        perimeter: perimeter,\n        radius: radius,\n        points: points,\n        trackingIdentifierTextValue: trackingIdentifierTextValue,\n        finding: finding,\n        findingSites: findingSites || []\n      };\n    }\n  }]);\n}();\nCircleRoi.toolType = CIRCLEROI;\nCircleRoi.utilityToolType = CIRCLEROI;\nCircleRoi.TID300Representation = TID300Circle;\nCircleRoi.isValidCornerstoneTrackingIdentifier = function (TrackingIdentifier) {\n  if (!TrackingIdentifier.includes(\":\")) {\n    return false;\n  }\n  var _TrackingIdentifier$s = TrackingIdentifier.split(\":\"),\n    _TrackingIdentifier$s2 = _slicedToArray(_TrackingIdentifier$s, 2),\n    cornerstone4Tag = _TrackingIdentifier$s2[0],\n    toolType = _TrackingIdentifier$s2[1];\n  if (cornerstone4Tag !== CORNERSTONE_4_TAG) {\n    return false;\n  }\n  return toolType === CIRCLEROI;\n};\nMeasurementReport.registerTool(CircleRoi);\n\nexport { CircleRoi as default };\n","import { slicedToArray as _slicedToArray, createClass as _createClass, objectSpread2 as _objectSpread2, classCallCheck as _classCallCheck } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport { utilities } from 'dcmjs';\nimport MeasurementReport from './MeasurementReport.js';\nimport CORNERSTONE_4_TAG from './cornerstone4Tag.js';\n\nvar TID300Point = utilities.TID300.Point;\nvar ARROW_ANNOTATE = \"ArrowAnnotate\";\nvar CORNERSTONEFREETEXT = \"CORNERSTONEFREETEXT\";\nvar ArrowAnnotate = /*#__PURE__*/function () {\n  function ArrowAnnotate() {\n    _classCallCheck(this, ArrowAnnotate);\n  }\n  return _createClass(ArrowAnnotate, null, [{\n    key: \"getMeasurementData\",\n    value: function getMeasurementData(MeasurementGroup) {\n      var _MeasurementReport$ge = MeasurementReport.getSetupMeasurementData(MeasurementGroup),\n        defaultState = _MeasurementReport$ge.defaultState,\n        SCOORDGroup = _MeasurementReport$ge.SCOORDGroup,\n        findingGroup = _MeasurementReport$ge.findingGroup;\n      var text = findingGroup.ConceptCodeSequence.CodeMeaning;\n      var GraphicData = SCOORDGroup.GraphicData;\n      var state = _objectSpread2(_objectSpread2({}, defaultState), {}, {\n        toolType: ArrowAnnotate.toolType,\n        active: false,\n        handles: {\n          start: {\n            x: GraphicData[0],\n            y: GraphicData[1],\n            highlight: true,\n            active: false\n          },\n          // Use a generic offset if the stored data doesn't have the endpoint, otherwise\n          // use the actual endpoint.\n          end: {\n            x: GraphicData.length == 4 ? GraphicData[2] : GraphicData[0] + 20,\n            y: GraphicData.length == 4 ? GraphicData[3] : GraphicData[1] + 20,\n            highlight: true,\n            active: false\n          },\n          textBox: {\n            hasMoved: false,\n            movesIndependently: false,\n            drawnIndependently: true,\n            allowedOutsideImage: true,\n            hasBoundingBox: true\n          }\n        },\n        invalidated: true,\n        text: text,\n        visible: true\n      });\n      return state;\n    }\n  }, {\n    key: \"getTID300RepresentationArguments\",\n    value: function getTID300RepresentationArguments(tool) {\n      var points = [tool.handles.start, tool.handles.end];\n      var finding = tool.finding,\n        findingSites = tool.findingSites;\n      var TID300RepresentationArguments = {\n        points: points,\n        trackingIdentifierTextValue: \"cornerstoneTools@^4.0.0:ArrowAnnotate\",\n        findingSites: findingSites || []\n      };\n\n      // If freetext finding isn't present, add it from the tool text.\n      if (!finding || finding.CodeValue !== CORNERSTONEFREETEXT) {\n        finding = {\n          CodeValue: CORNERSTONEFREETEXT,\n          CodingSchemeDesignator: \"CST4\",\n          CodeMeaning: tool.text\n        };\n      }\n      TID300RepresentationArguments.finding = finding;\n      return TID300RepresentationArguments;\n    }\n  }]);\n}();\nArrowAnnotate.toolType = ARROW_ANNOTATE;\nArrowAnnotate.utilityToolType = ARROW_ANNOTATE;\nArrowAnnotate.TID300Representation = TID300Point;\nArrowAnnotate.isValidCornerstoneTrackingIdentifier = function (TrackingIdentifier) {\n  if (!TrackingIdentifier.includes(\":\")) {\n    return false;\n  }\n  var _TrackingIdentifier$s = TrackingIdentifier.split(\":\"),\n    _TrackingIdentifier$s2 = _slicedToArray(_TrackingIdentifier$s, 2),\n    cornerstone4Tag = _TrackingIdentifier$s2[0],\n    toolType = _TrackingIdentifier$s2[1];\n  if (cornerstone4Tag !== CORNERSTONE_4_TAG) {\n    return false;\n  }\n  return toolType === ARROW_ANNOTATE;\n};\nMeasurementReport.registerTool(ArrowAnnotate);\n\nexport { ArrowAnnotate as default };\n","import { slicedToArray as _slicedToArray, createClass as _createClass, objectSpread2 as _objectSpread2, classCallCheck as _classCallCheck } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport { utilities } from 'dcmjs';\nimport MeasurementReport from './MeasurementReport.js';\nimport CORNERSTONE_4_TAG from './cornerstone4Tag.js';\n\nvar TID300CobbAngle = utilities.TID300.CobbAngle;\nvar COBB_ANGLE = \"CobbAngle\";\nvar CobbAngle = /*#__PURE__*/function () {\n  function CobbAngle() {\n    _classCallCheck(this, CobbAngle);\n  }\n  return _createClass(CobbAngle, null, [{\n    key: \"getMeasurementData\",\n    value:\n    // TODO: this function is required for all Cornerstone Tool Adapters, since it is called by MeasurementReport.\n    function getMeasurementData(MeasurementGroup) {\n      var _MeasurementReport$ge = MeasurementReport.getSetupMeasurementData(MeasurementGroup),\n        defaultState = _MeasurementReport$ge.defaultState,\n        NUMGroup = _MeasurementReport$ge.NUMGroup,\n        SCOORDGroup = _MeasurementReport$ge.SCOORDGroup;\n      var state = _objectSpread2(_objectSpread2({}, defaultState), {}, {\n        rAngle: NUMGroup.MeasuredValueSequence.NumericValue,\n        toolType: CobbAngle.toolType,\n        handles: {\n          start: {},\n          end: {},\n          start2: {\n            highlight: true,\n            drawnIndependently: true\n          },\n          end2: {\n            highlight: true,\n            drawnIndependently: true\n          },\n          textBox: {\n            hasMoved: false,\n            movesIndependently: false,\n            drawnIndependently: true,\n            allowedOutsideImage: true,\n            hasBoundingBox: true\n          }\n        }\n      });\n      var _SCOORDGroup$GraphicD = _slicedToArray(SCOORDGroup.GraphicData, 8);\n      state.handles.start.x = _SCOORDGroup$GraphicD[0];\n      state.handles.start.y = _SCOORDGroup$GraphicD[1];\n      state.handles.end.x = _SCOORDGroup$GraphicD[2];\n      state.handles.end.y = _SCOORDGroup$GraphicD[3];\n      state.handles.start2.x = _SCOORDGroup$GraphicD[4];\n      state.handles.start2.y = _SCOORDGroup$GraphicD[5];\n      state.handles.end2.x = _SCOORDGroup$GraphicD[6];\n      state.handles.end2.y = _SCOORDGroup$GraphicD[7];\n      return state;\n    }\n  }, {\n    key: \"getTID300RepresentationArguments\",\n    value: function getTID300RepresentationArguments(tool) {\n      var handles = tool.handles,\n        finding = tool.finding,\n        findingSites = tool.findingSites;\n      var point1 = handles.start;\n      var point2 = handles.end;\n      var point3 = handles.start2;\n      var point4 = handles.end2;\n      var rAngle = tool.rAngle;\n      var trackingIdentifierTextValue = \"cornerstoneTools@^4.0.0:CobbAngle\";\n      return {\n        point1: point1,\n        point2: point2,\n        point3: point3,\n        point4: point4,\n        rAngle: rAngle,\n        trackingIdentifierTextValue: trackingIdentifierTextValue,\n        finding: finding,\n        findingSites: findingSites || []\n      };\n    }\n  }]);\n}();\nCobbAngle.toolType = COBB_ANGLE;\nCobbAngle.utilityToolType = COBB_ANGLE;\nCobbAngle.TID300Representation = TID300CobbAngle;\nCobbAngle.isValidCornerstoneTrackingIdentifier = function (TrackingIdentifier) {\n  if (!TrackingIdentifier.includes(\":\")) {\n    return false;\n  }\n  var _TrackingIdentifier$s = TrackingIdentifier.split(\":\"),\n    _TrackingIdentifier$s2 = _slicedToArray(_TrackingIdentifier$s, 2),\n    cornerstone4Tag = _TrackingIdentifier$s2[0],\n    toolType = _TrackingIdentifier$s2[1];\n  if (cornerstone4Tag !== CORNERSTONE_4_TAG) {\n    return false;\n  }\n  return toolType === COBB_ANGLE;\n};\nMeasurementReport.registerTool(CobbAngle);\n\nexport { CobbAngle as default };\n","import { slicedToArray as _slicedToArray, createClass as _createClass, objectSpread2 as _objectSpread2, classCallCheck as _classCallCheck } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport { utilities } from 'dcmjs';\nimport MeasurementReport from './MeasurementReport.js';\nimport CORNERSTONE_4_TAG from './cornerstone4Tag.js';\n\nvar TID300Angle = utilities.TID300.Angle;\nvar ANGLE = \"Angle\";\nvar Angle = /*#__PURE__*/function () {\n  function Angle() {\n    _classCallCheck(this, Angle);\n  }\n  return _createClass(Angle, null, [{\n    key: \"getMeasurementData\",\n    value:\n    /**\n     * Generate TID300 measurement data for a plane angle measurement - use a Angle, but label it as Angle\n     */\n    function getMeasurementData(MeasurementGroup) {\n      var _MeasurementReport$ge = MeasurementReport.getSetupMeasurementData(MeasurementGroup),\n        defaultState = _MeasurementReport$ge.defaultState,\n        NUMGroup = _MeasurementReport$ge.NUMGroup,\n        SCOORDGroup = _MeasurementReport$ge.SCOORDGroup;\n      var state = _objectSpread2(_objectSpread2({}, defaultState), {}, {\n        rAngle: NUMGroup.MeasuredValueSequence.NumericValue,\n        toolType: Angle.toolType,\n        handles: {\n          start: {},\n          middle: {},\n          end: {},\n          textBox: {\n            hasMoved: false,\n            movesIndependently: false,\n            drawnIndependently: true,\n            allowedOutsideImage: true,\n            hasBoundingBox: true\n          }\n        }\n      });\n      var _SCOORDGroup$GraphicD = _slicedToArray(SCOORDGroup.GraphicData, 8);\n      state.handles.start.x = _SCOORDGroup$GraphicD[0];\n      state.handles.start.y = _SCOORDGroup$GraphicD[1];\n      state.handles.middle.x = _SCOORDGroup$GraphicD[2];\n      state.handles.middle.y = _SCOORDGroup$GraphicD[3];\n      state.handles.middle.x = _SCOORDGroup$GraphicD[4];\n      state.handles.middle.y = _SCOORDGroup$GraphicD[5];\n      state.handles.end.x = _SCOORDGroup$GraphicD[6];\n      state.handles.end.y = _SCOORDGroup$GraphicD[7];\n      return state;\n    }\n  }, {\n    key: \"getTID300RepresentationArguments\",\n    value: function getTID300RepresentationArguments(tool) {\n      var handles = tool.handles,\n        finding = tool.finding,\n        findingSites = tool.findingSites;\n      var point1 = handles.start;\n      var point2 = handles.middle;\n      var point3 = handles.middle;\n      var point4 = handles.end;\n      var rAngle = tool.rAngle;\n      var trackingIdentifierTextValue = \"cornerstoneTools@^4.0.0:Angle\";\n      return {\n        point1: point1,\n        point2: point2,\n        point3: point3,\n        point4: point4,\n        rAngle: rAngle,\n        trackingIdentifierTextValue: trackingIdentifierTextValue,\n        finding: finding,\n        findingSites: findingSites || []\n      };\n    }\n  }]);\n}();\nAngle.toolType = ANGLE;\nAngle.utilityToolType = ANGLE;\nAngle.TID300Representation = TID300Angle;\nAngle.isValidCornerstoneTrackingIdentifier = function (TrackingIdentifier) {\n  if (!TrackingIdentifier.includes(\":\")) {\n    return false;\n  }\n  var _TrackingIdentifier$s = TrackingIdentifier.split(\":\"),\n    _TrackingIdentifier$s2 = _slicedToArray(_TrackingIdentifier$s, 2),\n    cornerstone4Tag = _TrackingIdentifier$s2[0],\n    toolType = _TrackingIdentifier$s2[1];\n  if (cornerstone4Tag !== CORNERSTONE_4_TAG) {\n    return false;\n  }\n  return toolType === ANGLE;\n};\nMeasurementReport.registerTool(Angle);\n\nexport { Angle as default };\n","import { slicedToArray as _slicedToArray, createClass as _createClass, objectSpread2 as _objectSpread2, classCallCheck as _classCallCheck } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport { utilities } from 'dcmjs';\nimport MeasurementReport from './MeasurementReport.js';\nimport CORNERSTONE_4_TAG from './cornerstone4Tag.js';\n\nvar TID300Polyline = utilities.TID300.Polyline;\nvar RectangleRoi = /*#__PURE__*/function () {\n  function RectangleRoi() {\n    _classCallCheck(this, RectangleRoi);\n  }\n  return _createClass(RectangleRoi, null, [{\n    key: \"getMeasurementData\",\n    value: function getMeasurementData(MeasurementGroup) {\n      var _MeasurementReport$ge = MeasurementReport.getSetupMeasurementData(MeasurementGroup),\n        defaultState = _MeasurementReport$ge.defaultState,\n        SCOORDGroup = _MeasurementReport$ge.SCOORDGroup,\n        NUMGroup = _MeasurementReport$ge.NUMGroup;\n      var state = _objectSpread2(_objectSpread2({}, defaultState), {}, {\n        toolType: RectangleRoi.toolType,\n        handles: {\n          start: {},\n          end: {},\n          textBox: {\n            active: false,\n            hasMoved: false,\n            movesIndependently: false,\n            drawnIndependently: true,\n            allowedOutsideImage: true,\n            hasBoundingBox: true\n          },\n          initialRotation: 0\n        },\n        cachedStats: {\n          area: NUMGroup ? NUMGroup.MeasuredValueSequence.NumericValue : 0\n        },\n        color: undefined,\n        invalidated: true\n      });\n      var _SCOORDGroup$GraphicD = _slicedToArray(SCOORDGroup.GraphicData, 6);\n      state.handles.start.x = _SCOORDGroup$GraphicD[0];\n      state.handles.start.y = _SCOORDGroup$GraphicD[1];\n      _SCOORDGroup$GraphicD[2];\n      _SCOORDGroup$GraphicD[3];\n      state.handles.end.x = _SCOORDGroup$GraphicD[4];\n      state.handles.end.y = _SCOORDGroup$GraphicD[5];\n      return state;\n    }\n  }, {\n    key: \"getTID300RepresentationArguments\",\n    value: function getTID300RepresentationArguments(tool) {\n      var finding = tool.finding,\n        findingSites = tool.findingSites,\n        _tool$cachedStats = tool.cachedStats,\n        cachedStats = _tool$cachedStats === void 0 ? {} : _tool$cachedStats,\n        handles = tool.handles;\n      var start = handles.start,\n        end = handles.end;\n      var points = [start, {\n        x: start.x,\n        y: end.y\n      }, end, {\n        x: end.x,\n        y: start.y\n      }];\n      var area = cachedStats.area,\n        perimeter = cachedStats.perimeter;\n      var trackingIdentifierTextValue = \"cornerstoneTools@^4.0.0:RectangleRoi\";\n      return {\n        points: points,\n        area: area,\n        perimeter: perimeter,\n        trackingIdentifierTextValue: trackingIdentifierTextValue,\n        finding: finding,\n        findingSites: findingSites || []\n      };\n    }\n  }]);\n}();\nRectangleRoi.toolType = \"RectangleRoi\";\nRectangleRoi.utilityToolType = \"RectangleRoi\";\nRectangleRoi.TID300Representation = TID300Polyline;\nRectangleRoi.isValidCornerstoneTrackingIdentifier = function (TrackingIdentifier) {\n  if (!TrackingIdentifier.includes(\":\")) {\n    return false;\n  }\n  var _TrackingIdentifier$s = TrackingIdentifier.split(\":\"),\n    _TrackingIdentifier$s2 = _slicedToArray(_TrackingIdentifier$s, 2),\n    cornerstone4Tag = _TrackingIdentifier$s2[0],\n    toolType = _TrackingIdentifier$s2[1];\n  if (cornerstone4Tag !== CORNERSTONE_4_TAG) {\n    return false;\n  }\n  return toolType === RectangleRoi.toolType;\n};\nMeasurementReport.registerTool(RectangleRoi);\n\nexport { RectangleRoi as default };\n","import { data, normalizers } from 'dcmjs';\n\nvar DicomMessage = data.DicomMessage,\n  DicomMetaDictionary = data.DicomMetaDictionary;\nvar Normalizer = normalizers.Normalizer;\nfunction getDatasetsFromImages(images, isMultiframe, options) {\n  var datasets = [];\n  if (isMultiframe) {\n    var image = images[0];\n    var arrayBuffer = image.data.byteArray.buffer;\n    var dicomData = DicomMessage.readFile(arrayBuffer);\n    var dataset = DicomMetaDictionary.naturalizeDataset(dicomData.dict);\n    dataset._meta = DicomMetaDictionary.namifyDataset(dicomData.meta);\n    datasets.push(dataset);\n  } else {\n    for (var i = 0; i < images.length; i++) {\n      var _image = images[i];\n      var _arrayBuffer = _image.data.byteArray.buffer;\n      var _dicomData = DicomMessage.readFile(_arrayBuffer);\n      var _dataset = DicomMetaDictionary.naturalizeDataset(_dicomData.dict);\n      _dataset._meta = DicomMetaDictionary.namifyDataset(_dicomData.meta);\n      datasets.push(_dataset);\n    }\n  }\n  if (options !== null && options !== void 0 && options.SpecificCharacterSet) {\n    datasets.forEach(function (dataset) {\n      return dataset.SpecificCharacterSet = options.SpecificCharacterSet;\n    });\n  }\n  return Normalizer.normalizeToDataset(datasets);\n}\n\nexport { getDatasetsFromImages as default };\n","import { toConsumableArray as _toConsumableArray } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport { utilities, normalizers, derivations, log } from 'dcmjs';\nimport ndarray from 'ndarray';\nimport getDatasetsFromImages from '../helpers/getDatasetsFromImages.js';\n\nvar _utilities$orientatio = utilities.orientation,\n  rotateDirectionCosinesInPlane = _utilities$orientatio.rotateDirectionCosinesInPlane,\n  flipIOP = _utilities$orientatio.flipImageOrientationPatient,\n  flipMatrix2D = _utilities$orientatio.flipMatrix2D,\n  rotateMatrix902D = _utilities$orientatio.rotateMatrix902D;\nvar datasetToBlob = utilities.datasetToBlob,\n  BitArray = utilities.BitArray,\n  DicomMessage = utilities.DicomMessage,\n  DicomMetaDictionary = utilities.DicomMetaDictionary;\nvar Normalizer = normalizers.Normalizer;\nvar SegmentationDerivation = derivations.Segmentation;\nvar Segmentation = {\n  generateSegmentation: generateSegmentation,\n  generateToolState: generateToolState\n};\n\n/**\n *\n * @typedef {Object} BrushData\n * @property {Object} toolState - The cornerstoneTools global toolState.\n * @property {Object[]} segments - The cornerstoneTools segment metadata that corresponds to the\n *                                 seriesInstanceUid.\n */\n\n/**\n * generateSegmentation - Generates cornerstoneTools brush data, given a stack of\n * imageIds, images and the cornerstoneTools brushData.\n *\n * @param  {object[]} images    An array of the cornerstone image objects.\n * @param  {BrushData} brushData and object containing the brushData.\n * @returns {type}           description\n */\nfunction generateSegmentation(images, brushData) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n    includeSliceSpacing: true\n  };\n  var toolState = brushData.toolState,\n    segments = brushData.segments;\n\n  // Calculate the dimensions of the data cube.\n  var image0 = images[0];\n  var dims = {\n    x: image0.columns,\n    y: image0.rows,\n    z: images.length\n  };\n  dims.xy = dims.x * dims.y;\n  var numSegments = _getSegCount(seg, segments);\n  if (!numSegments) {\n    throw new Error(\"No segments to export!\");\n  }\n  var isMultiframe = image0.imageId.includes(\"?frame\");\n  var seg = _createSegFromImages(images, isMultiframe, options);\n  var _getNumberOfFramesPer = _getNumberOfFramesPerSegment(toolState, images, segments),\n    referencedFramesPerSegment = _getNumberOfFramesPer.referencedFramesPerSegment,\n    segmentIndicies = _getNumberOfFramesPer.segmentIndicies;\n  var NumberOfFrames = 0;\n  for (var i = 0; i < referencedFramesPerSegment.length; i++) {\n    NumberOfFrames += referencedFramesPerSegment[i].length;\n  }\n  seg.setNumberOfFrames(NumberOfFrames);\n  for (var _i = 0; _i < segmentIndicies.length; _i++) {\n    var segmentIndex = segmentIndicies[_i];\n    var referencedFrameIndicies = referencedFramesPerSegment[_i];\n\n    // Frame numbers start from 1.\n    var referencedFrameNumbers = referencedFrameIndicies.map(function (element) {\n      return element + 1;\n    });\n    var segment = segments[segmentIndex];\n    seg.addSegment(segment, _extractCornerstoneToolsPixelData(segmentIndex, referencedFrameIndicies, toolState, images, dims), referencedFrameNumbers);\n  }\n  seg.bitPackPixelData();\n  var segBlob = datasetToBlob(seg.dataset);\n  return segBlob;\n}\nfunction _extractCornerstoneToolsPixelData(segmentIndex, referencedFrames, toolState, images, dims) {\n  var pixelData = new Uint8Array(dims.xy * referencedFrames.length);\n  var pixelDataIndex = 0;\n  for (var i = 0; i < referencedFrames.length; i++) {\n    var frame = referencedFrames[i];\n    var imageId = images[frame].imageId;\n    var imageIdSpecificToolState = toolState[imageId];\n    var brushPixelData = imageIdSpecificToolState.brush.data[segmentIndex].pixelData;\n    for (var p = 0; p < brushPixelData.length; p++) {\n      pixelData[pixelDataIndex] = brushPixelData[p];\n      pixelDataIndex++;\n    }\n  }\n  return pixelData;\n}\nfunction _getNumberOfFramesPerSegment(toolState, images, segments) {\n  var segmentIndicies = [];\n  var referencedFramesPerSegment = [];\n  for (var i = 0; i < segments.length; i++) {\n    if (segments[i]) {\n      segmentIndicies.push(i);\n      referencedFramesPerSegment.push([]);\n    }\n  }\n  for (var z = 0; z < images.length; z++) {\n    var imageId = images[z].imageId;\n    var imageIdSpecificToolState = toolState[imageId];\n    for (var _i2 = 0; _i2 < segmentIndicies.length; _i2++) {\n      var segIdx = segmentIndicies[_i2];\n      if (imageIdSpecificToolState && imageIdSpecificToolState.brush && imageIdSpecificToolState.brush.data && imageIdSpecificToolState.brush.data[segIdx] && imageIdSpecificToolState.brush.data[segIdx].pixelData) {\n        referencedFramesPerSegment[_i2].push(z);\n      }\n    }\n  }\n  return {\n    referencedFramesPerSegment: referencedFramesPerSegment,\n    segmentIndicies: segmentIndicies\n  };\n}\nfunction _getSegCount(seg, segments) {\n  var numSegments = 0;\n  for (var i = 0; i < segments.length; i++) {\n    if (segments[i]) {\n      numSegments++;\n    }\n  }\n  return numSegments;\n}\n\n/**\n * _createSegFromImages - description\n *\n * @param  {Object[]} images    An array of the cornerstone image objects.\n * @param  {Boolean} isMultiframe Whether the images are multiframe.\n * @returns {Object}              The Seg derived dataSet.\n */\nfunction _createSegFromImages(images, isMultiframe, options) {\n  var multiframe = getDatasetsFromImages(images, isMultiframe);\n  return new SegmentationDerivation([multiframe], options);\n}\n\n/**\n * generateToolState - Given a set of cornrstoneTools imageIds and a Segmentation buffer,\n * derive cornerstoneTools toolState and brush metadata.\n *\n * @param  {string[]} imageIds    An array of the imageIds.\n * @param  {ArrayBuffer} arrayBuffer The SEG arrayBuffer.\n * @param {*} metadataProvider\n * @returns {Object}  The toolState and an object from which the\n *                    segment metadata can be derived.\n */\nfunction generateToolState(imageIds, arrayBuffer, metadataProvider) {\n  var dicomData = DicomMessage.readFile(arrayBuffer);\n  var dataset = DicomMetaDictionary.naturalizeDataset(dicomData.dict);\n  dataset._meta = DicomMetaDictionary.namifyDataset(dicomData.meta);\n  var multiframe = Normalizer.normalizeToDataset([dataset]);\n  var imagePlaneModule = metadataProvider.get(\"imagePlaneModule\", imageIds[0]);\n  if (!imagePlaneModule) {\n    console.warn(\"Insufficient metadata, imagePlaneModule missing.\");\n  }\n  var ImageOrientationPatient = Array.isArray(imagePlaneModule.rowCosines) ? [].concat(_toConsumableArray(imagePlaneModule.rowCosines), _toConsumableArray(imagePlaneModule.columnCosines)) : [imagePlaneModule.rowCosines.x, imagePlaneModule.rowCosines.y, imagePlaneModule.rowCosines.z, imagePlaneModule.columnCosines.x, imagePlaneModule.columnCosines.y, imagePlaneModule.columnCosines.z];\n\n  // Get IOP from ref series, compute supported orientations:\n  var validOrientations = getValidOrientations(ImageOrientationPatient);\n  var SharedFunctionalGroupsSequence = multiframe.SharedFunctionalGroupsSequence;\n  var sharedImageOrientationPatient = SharedFunctionalGroupsSequence.PlaneOrientationSequence ? SharedFunctionalGroupsSequence.PlaneOrientationSequence.ImageOrientationPatient : undefined;\n  var sliceLength = multiframe.Columns * multiframe.Rows;\n  var segMetadata = getSegmentMetadata(multiframe);\n  var pixelData = unpackPixelData(multiframe);\n  var PerFrameFunctionalGroupsSequence = multiframe.PerFrameFunctionalGroupsSequence;\n  var toolState = {};\n  var inPlane = true;\n  for (var i = 0; i < PerFrameFunctionalGroupsSequence.length; i++) {\n    var PerFrameFunctionalGroups = PerFrameFunctionalGroupsSequence[i];\n    var ImageOrientationPatientI = sharedImageOrientationPatient || PerFrameFunctionalGroups.PlaneOrientationSequence.ImageOrientationPatient;\n    var pixelDataI2D = ndarray(new Uint8Array(pixelData.buffer, i * sliceLength, sliceLength), [multiframe.Rows, multiframe.Columns]);\n    var alignedPixelDataI = alignPixelDataWithSourceData(pixelDataI2D, ImageOrientationPatientI, validOrientations);\n    if (!alignedPixelDataI) {\n      console.warn(\"This segmentation object is not in-plane with the source data. Bailing out of IO. It'd be better to render this with vtkjs. \");\n      inPlane = false;\n      break;\n    }\n    var segmentIndex = PerFrameFunctionalGroups.SegmentIdentificationSequence.ReferencedSegmentNumber - 1;\n    var SourceImageSequence = void 0;\n    if (SharedFunctionalGroupsSequence.DerivationImageSequence && SharedFunctionalGroupsSequence.DerivationImageSequence.SourceImageSequence) {\n      SourceImageSequence = SharedFunctionalGroupsSequence.DerivationImageSequence.SourceImageSequence[i];\n    } else {\n      SourceImageSequence = PerFrameFunctionalGroups.DerivationImageSequence.SourceImageSequence;\n    }\n    var imageId = getImageIdOfSourceImage(SourceImageSequence, imageIds, metadataProvider);\n    addImageIdSpecificBrushToolState(toolState, imageId, segmentIndex, alignedPixelDataI);\n  }\n  if (!inPlane) {\n    return;\n  }\n  return {\n    toolState: toolState,\n    segMetadata: segMetadata\n  };\n}\n\n/**\n * unpackPixelData - Unpacks bitpacked pixelData if the Segmentation is BINARY.\n *\n * @param  {Object} multiframe The multiframe dataset.\n * @return {Uint8Array}      The unpacked pixelData.\n */\nfunction unpackPixelData(multiframe) {\n  var segType = multiframe.SegmentationType;\n  if (segType === \"BINARY\") {\n    return BitArray.unpack(multiframe.PixelData);\n  }\n  var pixelData = new Uint8Array(multiframe.PixelData);\n  var max = multiframe.MaximumFractionalValue;\n  var onlyMaxAndZero = pixelData.find(function (element) {\n    return element !== 0 && element !== max;\n  }) === undefined;\n  if (!onlyMaxAndZero) {\n    log.warn(\"This is a fractional segmentation, which is not currently supported.\");\n    return;\n  }\n  log.warn(\"This segmentation object is actually binary... processing as such.\");\n  return pixelData;\n}\n\n/**\n * addImageIdSpecificBrushToolState - Adds brush pixel data to cornerstoneTools\n * formatted toolState object.\n *\n * @param  {Object} toolState    The toolState object to modify\n * @param  {String} imageId      The imageId of the toolState to add the data.\n * @param  {Number} segmentIndex The index of the segment data being added.\n * @param  {Ndarray} pixelData2D  The pixelData in Ndarry 2D format.\n */\nfunction addImageIdSpecificBrushToolState(toolState, imageId, segmentIndex, pixelData2D) {\n  if (!toolState[imageId]) {\n    toolState[imageId] = {};\n    toolState[imageId].brush = {};\n    toolState[imageId].brush.data = [];\n  } else if (!toolState[imageId].brush) {\n    toolState[imageId].brush = {};\n    toolState[imageId].brush.data = [];\n  } else if (!toolState[imageId].brush.data) {\n    toolState[imageId].brush.data = [];\n  }\n  toolState[imageId].brush.data[segmentIndex] = {};\n  var brushDataI = toolState[imageId].brush.data[segmentIndex];\n  brushDataI.pixelData = new Uint8Array(pixelData2D.data.length);\n  var cToolsPixelData = brushDataI.pixelData;\n  for (var p = 0; p < cToolsPixelData.length; p++) {\n    if (pixelData2D.data[p]) {\n      cToolsPixelData[p] = 1;\n    } else {\n      cToolsPixelData[p] = 0;\n    }\n  }\n}\n\n/**\n * getImageIdOfSourceImage - Returns the Cornerstone imageId of the source image.\n *\n * @param  {Object} SourceImageSequence Sequence describing the source image.\n * @param  {String[]} imageIds          A list of imageIds.\n * @param  {Object} metadataProvider    A Cornerstone metadataProvider to query\n *                                      metadata from imageIds.\n * @return {String}                     The corresponding imageId.\n */\nfunction getImageIdOfSourceImage(SourceImageSequence, imageIds, metadataProvider) {\n  var ReferencedSOPInstanceUID = SourceImageSequence.ReferencedSOPInstanceUID,\n    ReferencedFrameNumber = SourceImageSequence.ReferencedFrameNumber;\n  return ReferencedFrameNumber ? getImageIdOfReferencedFrame(ReferencedSOPInstanceUID, ReferencedFrameNumber, imageIds, metadataProvider) : getImageIdOfReferencedSingleFramedSOPInstance(ReferencedSOPInstanceUID, imageIds, metadataProvider);\n}\n\n/**\n * getImageIdOfReferencedSingleFramedSOPInstance - Returns the imageId\n * corresponding to the specified sopInstanceUid for single-frame images.\n *\n * @param  {String} sopInstanceUid   The sopInstanceUid of the desired image.\n * @param  {String[]} imageIds         The list of imageIds.\n * @param  {Object} metadataProvider The metadataProvider to obtain sopInstanceUids\n *                                 from the cornerstone imageIds.\n * @return {String}                  The imageId that corresponds to the sopInstanceUid.\n */\nfunction getImageIdOfReferencedSingleFramedSOPInstance(sopInstanceUid, imageIds, metadataProvider) {\n  return imageIds.find(function (imageId) {\n    var sopCommonModule = metadataProvider.get(\"sopCommonModule\", imageId);\n    if (!sopCommonModule) {\n      return;\n    }\n    return sopCommonModule.sopInstanceUID === sopInstanceUid;\n  });\n}\n\n/**\n * getImageIdOfReferencedFrame - Returns the imageId corresponding to the\n * specified sopInstanceUid and frameNumber for multi-frame images.\n *\n * @param  {String} sopInstanceUid   The sopInstanceUid of the desired image.\n * @param  {Number} frameNumber      The frame number.\n * @param  {String} imageIds         The list of imageIds.\n * @param  {Object} metadataProvider The metadataProvider to obtain sopInstanceUids\n *                                   from the cornerstone imageIds.\n * @return {String}                  The imageId that corresponds to the sopInstanceUid.\n */\nfunction getImageIdOfReferencedFrame(sopInstanceUid, frameNumber, imageIds, metadataProvider) {\n  var imageId = imageIds.find(function (imageId) {\n    var sopCommonModule = metadataProvider.get(\"sopCommonModule\", imageId);\n    if (!sopCommonModule) {\n      return;\n    }\n    var imageIdFrameNumber = Number(imageId.split(\"frame=\")[1]);\n    return (\n      //frameNumber is zero indexed for cornerstoneDICOMImageLoader image Ids.\n      sopCommonModule.sopInstanceUID === sopInstanceUid && imageIdFrameNumber === frameNumber - 1\n    );\n  });\n  return imageId;\n}\n\n/**\n * getValidOrientations - returns an array of valid orientations.\n *\n * @param  iop - The row (0..2) an column (3..5) direction cosines.\n * @return  An array of valid orientations.\n */\nfunction getValidOrientations(iop) {\n  var orientations = [];\n\n  // [0,  1,  2]: 0,   0hf,   0vf\n  // [3,  4,  5]: 90,  90hf,  90vf\n  // [6, 7]:      180, 270\n\n  orientations[0] = iop;\n  orientations[1] = flipIOP.h(iop);\n  orientations[2] = flipIOP.v(iop);\n  var iop90 = rotateDirectionCosinesInPlane(iop, Math.PI / 2);\n  orientations[3] = iop90;\n  orientations[4] = flipIOP.h(iop90);\n  orientations[5] = flipIOP.v(iop90);\n  orientations[6] = rotateDirectionCosinesInPlane(iop, Math.PI);\n  orientations[7] = rotateDirectionCosinesInPlane(iop, 1.5 * Math.PI);\n  return orientations;\n}\n\n/**\n * alignPixelDataWithSourceData -\n *\n * @param pixelData2D - The data to align.\n * @param iop - The orientation of the image slice.\n * @param orientations - An array of valid imageOrientationPatient values.\n * @return The aligned pixelData.\n */\nfunction alignPixelDataWithSourceData(pixelData2D, iop, orientations) {\n  if (compareIOP(iop, orientations[0])) {\n    //Same orientation.\n    return pixelData2D;\n  } else if (compareIOP(iop, orientations[1])) {\n    //Flipped vertically.\n    return flipMatrix2D.v(pixelData2D);\n  } else if (compareIOP(iop, orientations[2])) {\n    //Flipped horizontally.\n    return flipMatrix2D.h(pixelData2D);\n  } else if (compareIOP(iop, orientations[3])) {\n    //Rotated 90 degrees.\n    return rotateMatrix902D(pixelData2D);\n  } else if (compareIOP(iop, orientations[4])) {\n    //Rotated 90 degrees and fliped horizontally.\n    return flipMatrix2D.h(rotateMatrix902D(pixelData2D));\n  } else if (compareIOP(iop, orientations[5])) {\n    //Rotated 90 degrees and fliped vertically.\n    return flipMatrix2D.v(rotateMatrix902D(pixelData2D));\n  } else if (compareIOP(iop, orientations[6])) {\n    //Rotated 180 degrees. // TODO -> Do this more effeciently, there is a 1:1 mapping like 90 degree rotation.\n    return rotateMatrix902D(rotateMatrix902D(pixelData2D));\n  } else if (compareIOP(iop, orientations[7])) {\n    //Rotated 270 degrees.  // TODO -> Do this more effeciently, there is a 1:1 mapping like 90 degree rotation.\n    return rotateMatrix902D(rotateMatrix902D(rotateMatrix902D(pixelData2D)));\n  }\n}\nvar dx = 1e-5;\n\n/**\n * compareIOP - Returns true if iop1 and iop2 are equal\n * within a tollerance, dx.\n *\n * @param  iop1 - An ImageOrientationPatient array.\n * @param  iop2 - An ImageOrientationPatient array.\n * @return True if iop1 and iop2 are equal.\n */\nfunction compareIOP(iop1, iop2) {\n  return Math.abs(iop1[0] - iop2[0]) < dx && Math.abs(iop1[1] - iop2[1]) < dx && Math.abs(iop1[2] - iop2[2]) < dx && Math.abs(iop1[3] - iop2[3]) < dx && Math.abs(iop1[4] - iop2[4]) < dx && Math.abs(iop1[5] - iop2[5]) < dx;\n}\nfunction getSegmentMetadata(multiframe) {\n  var data = [];\n  var segmentSequence = multiframe.SegmentSequence;\n  if (Array.isArray(segmentSequence)) {\n    for (var segIdx = 0; segIdx < segmentSequence.length; segIdx++) {\n      data.push(segmentSequence[segIdx]);\n    }\n  } else {\n    // Only one segment, will be stored as an object.\n    data.push(segmentSequence);\n  }\n  return {\n    seriesInstanceUid: multiframe.ReferencedSeriesSequence.SeriesInstanceUID,\n    data: data\n  };\n}\n\nexport { Segmentation as default };\n","import { utilities } from 'dcmjs';\n\nvar nearlyEqual = utilities.orientation.nearlyEqual;\nfunction compareArrays(array1, array2, tolerance) {\n  if (array1.length !== array2.length) {\n    return false;\n  }\n  for (var i = 0; i < array1.length; ++i) {\n    if (!nearlyEqual(array1[i], array2[i], tolerance)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport { compareArrays as default };\n","var Events;\n(function (Events) {\n  Events[\"SEGMENTATION_LOAD_PROGRESS\"] = \"CORNERSTONE_ADAPTER_SEGMENTATION_LOAD_PROGRESS\";\n})(Events || (Events = {}));\nvar Events$1 = Events;\n\nexport { Events$1 as default };\n","import checkIfPerpendicular from './checkIfPerpendicular.js';\nimport compareArrays from './compareArrays.js';\n\nfunction checkOrientation(multiframe, validOrientations, sourceDataDimensions, tolerance) {\n  var SharedFunctionalGroupsSequence = multiframe.SharedFunctionalGroupsSequence,\n    PerFrameFunctionalGroupsSequence = multiframe.PerFrameFunctionalGroupsSequence;\n  var sharedImageOrientationPatient = SharedFunctionalGroupsSequence.PlaneOrientationSequence ? SharedFunctionalGroupsSequence.PlaneOrientationSequence.ImageOrientationPatient : undefined;\n  var PerFrameFunctionalGroups = PerFrameFunctionalGroupsSequence[0];\n  var iop = sharedImageOrientationPatient || PerFrameFunctionalGroups.PlaneOrientationSequence.ImageOrientationPatient;\n  var inPlane = validOrientations.some(function (operation) {\n    return compareArrays(iop, operation, tolerance);\n  });\n  if (inPlane) {\n    return \"Planar\";\n  }\n  if (checkIfPerpendicular(iop, validOrientations[0], tolerance) && sourceDataDimensions.includes(multiframe.Rows) && sourceDataDimensions.includes(multiframe.Columns)) {\n    return \"Perpendicular\";\n  }\n  return \"Oblique\";\n}\n\nexport { checkOrientation as default };\n","function checkIfPerpendicular(iop1, iop2, tolerance) {\n  var absDotColumnCosines = Math.abs(iop1[0] * iop2[0] + iop1[1] * iop2[1] + iop1[2] * iop2[2]);\n  var absDotRowCosines = Math.abs(iop1[3] * iop2[3] + iop1[4] * iop2[4] + iop1[5] * iop2[5]);\n  return (absDotColumnCosines < tolerance || Math.abs(absDotColumnCosines - 1) < tolerance) && (absDotRowCosines < tolerance || Math.abs(absDotRowCosines - 1) < tolerance);\n}\n\nexport { checkIfPerpendicular as default };\n","import { asyncToGenerator as _asyncToGenerator, regeneratorRuntime as _regeneratorRuntime, toConsumableArray as _toConsumableArray, createForOfIteratorHelper as _createForOfIteratorHelper, slicedToArray as _slicedToArray } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport { utilities, data, normalizers, derivations, log } from 'dcmjs';\nimport ndarray from 'ndarray';\nimport getDatasetsFromImages from '../helpers/getDatasetsFromImages.js';\nimport checkOrientation from '../helpers/checkOrientation.js';\nimport compareArrays from '../helpers/compareArrays.js';\nimport Events from '../enums/Events.js';\n\nvar _utilities$orientatio = utilities.orientation,\n  rotateDirectionCosinesInPlane = _utilities$orientatio.rotateDirectionCosinesInPlane,\n  flipIOP = _utilities$orientatio.flipImageOrientationPatient,\n  flipMatrix2D = _utilities$orientatio.flipMatrix2D,\n  rotateMatrix902D = _utilities$orientatio.rotateMatrix902D;\nvar BitArray = data.BitArray,\n  DicomMessage = data.DicomMessage,\n  DicomMetaDictionary = data.DicomMetaDictionary;\nvar Normalizer = normalizers.Normalizer;\nvar SegmentationDerivation = derivations.Segmentation;\nvar _utilities$compressio = utilities.compression,\n  encode = _utilities$compressio.encode,\n  decode = _utilities$compressio.decode;\n\n/**\n *\n * @typedef {Object} BrushData\n * @property {Object} toolState - The cornerstoneTools global toolState.\n * @property {Object[]} segments - The cornerstoneTools segment metadata that corresponds to the\n *                                 seriesInstanceUid.\n */\nvar generateSegmentationDefaultOptions = {\n  includeSliceSpacing: true,\n  rleEncode: false\n};\n\n/**\n * generateSegmentation - Generates cornerstoneTools brush data, given a stack of\n * imageIds, images and the cornerstoneTools brushData.\n *\n * @param  {object[]} images An array of cornerstone images that contain the source\n *                           data under `image.data.byteArray.buffer`.\n * @param  {Object|Object[]} inputLabelmaps3D The cornerstone `Labelmap3D` object, or an array of objects.\n * @param  {Object} userOptions Options to pass to the segmentation derivation and `fillSegmentation`.\n * @returns {Blob}\n */\nfunction generateSegmentation(images, inputLabelmaps3D) {\n  var userOptions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var isMultiframe = images[0].imageId.includes(\"?frame\");\n  var segmentation = _createSegFromImages(images, isMultiframe, userOptions);\n  return fillSegmentation(segmentation, inputLabelmaps3D, userOptions);\n}\n\n/**\n * Fills a given segmentation object with data from the input labelmaps3D\n *\n * @param segmentation - The segmentation object to be filled.\n * @param inputLabelmaps3D - An array of 3D labelmaps, or a single 3D labelmap.\n * @param userOptions - Optional configuration settings. Will override the default options.\n *\n * @returns {object} The filled segmentation object.\n */\nfunction fillSegmentation(segmentation, inputLabelmaps3D) {\n  var userOptions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var options = Object.assign({}, generateSegmentationDefaultOptions, userOptions);\n\n  // Use another variable so we don't redefine labelmaps3D.\n  var labelmaps3D = Array.isArray(inputLabelmaps3D) ? inputLabelmaps3D : [inputLabelmaps3D];\n  var numberOfFrames = 0;\n  var referencedFramesPerLabelmap = [];\n  var _loop = function _loop() {\n    var labelmap3D = labelmaps3D[labelmapIndex];\n    var labelmaps2D = labelmap3D.labelmaps2D,\n      metadata = labelmap3D.metadata;\n    var referencedFramesPerSegment = [];\n    for (var i = 1; i < metadata.length; i++) {\n      if (metadata[i]) {\n        referencedFramesPerSegment[i] = [];\n      }\n    }\n    var _loop2 = function _loop2(_i) {\n      var labelmap2D = labelmaps2D[_i];\n      if (labelmaps2D[_i]) {\n        var segmentsOnLabelmap = labelmap2D.segmentsOnLabelmap;\n        segmentsOnLabelmap.forEach(function (segmentIndex) {\n          if (segmentIndex !== 0) {\n            referencedFramesPerSegment[segmentIndex].push(_i);\n            numberOfFrames++;\n          }\n        });\n      }\n    };\n    for (var _i = 0; _i < labelmaps2D.length; _i++) {\n      _loop2(_i);\n    }\n    referencedFramesPerLabelmap[labelmapIndex] = referencedFramesPerSegment;\n  };\n  for (var labelmapIndex = 0; labelmapIndex < labelmaps3D.length; labelmapIndex++) {\n    _loop();\n  }\n  segmentation.setNumberOfFrames(numberOfFrames);\n  for (var _labelmapIndex = 0; _labelmapIndex < labelmaps3D.length; _labelmapIndex++) {\n    var referencedFramesPerSegment = referencedFramesPerLabelmap[_labelmapIndex];\n    var labelmap3D = labelmaps3D[_labelmapIndex];\n    var metadata = labelmap3D.metadata;\n    for (var segmentIndex = 1; segmentIndex < referencedFramesPerSegment.length; segmentIndex++) {\n      var referencedFrameIndicies = referencedFramesPerSegment[segmentIndex];\n      if (referencedFrameIndicies) {\n        // Frame numbers start from 1.\n        var referencedFrameNumbers = referencedFrameIndicies.map(function (element) {\n          return element + 1;\n        });\n        var segmentMetadata = metadata[segmentIndex];\n        var labelmaps = _getLabelmapsFromReferencedFrameIndicies(labelmap3D, referencedFrameIndicies);\n        segmentation.addSegmentFromLabelmap(segmentMetadata, labelmaps, segmentIndex, referencedFrameNumbers);\n      }\n    }\n  }\n  if (options.rleEncode) {\n    var rleEncodedFrames = encode(segmentation.dataset.PixelData, numberOfFrames, segmentation.dataset.Rows, segmentation.dataset.Columns);\n\n    // Must use fractional now to RLE encode, as the DICOM standard only allows BitStored && BitsAllocated\n    // to be 1 for BINARY. This is not ideal and there should be a better format for compression in this manner\n    // added to the standard.\n    segmentation.assignToDataset({\n      BitsAllocated: \"8\",\n      BitsStored: \"8\",\n      HighBit: \"7\",\n      SegmentationType: \"FRACTIONAL\",\n      SegmentationFractionalType: \"PROBABILITY\",\n      MaximumFractionalValue: \"255\"\n    });\n    segmentation.dataset._meta.TransferSyntaxUID = {\n      Value: [\"1.2.840.10008.1.2.5\"],\n      vr: \"UI\"\n    };\n    segmentation.dataset.SpecificCharacterSet = \"ISO_IR 192\";\n    segmentation.dataset._vrMap.PixelData = \"OB\";\n    segmentation.dataset.PixelData = rleEncodedFrames;\n  } else {\n    // If no rleEncoding, at least bitpack the data.\n    segmentation.bitPackPixelData();\n  }\n  return segmentation;\n}\nfunction _getLabelmapsFromReferencedFrameIndicies(labelmap3D, referencedFrameIndicies) {\n  var labelmaps2D = labelmap3D.labelmaps2D;\n  var labelmaps = [];\n  for (var i = 0; i < referencedFrameIndicies.length; i++) {\n    var frame = referencedFrameIndicies[i];\n    labelmaps.push(labelmaps2D[frame].pixelData);\n  }\n  return labelmaps;\n}\n\n/**\n * _createSegFromImages - description\n *\n * @param  {Object[]} images    An array of the cornerstone image objects.\n * @param  {Boolean} isMultiframe Whether the images are multiframe.\n * @returns {Object}              The Seg derived dataSet.\n */\nfunction _createSegFromImages(images, isMultiframe, options) {\n  var multiframe = getDatasetsFromImages(images, isMultiframe);\n  return new SegmentationDerivation([multiframe], options);\n}\n\n/**\n * generateToolState - Given a set of cornerstoneTools imageIds and a Segmentation buffer,\n * derive cornerstoneTools toolState and brush metadata.\n *\n * @param  {string[]} imageIds - An array of the imageIds.\n * @param  {ArrayBuffer} arrayBuffer - The SEG arrayBuffer.\n * @param  {*} metadataProvider.\n * @param  {obj} options - Options object.\n *\n * @return {[]ArrayBuffer}a list of array buffer for each labelMap\n * @return {Object} an object from which the segment metadata can be derived\n * @return {[][][]} 2D list containing the track of segments per frame\n * @return {[][][]} 3D list containing the track of segments per frame for each labelMap\n *                  (available only for the overlapping case).\n */\nfunction generateToolState(_x, _x2, _x3, _x4) {\n  return _generateToolState.apply(this, arguments);\n} // function insertPixelDataPerpendicular(\n//     segmentsOnFrame,\n//     labelmapBuffer,\n//     pixelData,\n//     multiframe,\n//     imageIds,\n//     validOrientations,\n//     metadataProvider\n// ) {\n//     const {\n//         SharedFunctionalGroupsSequence,\n//         PerFrameFunctionalGroupsSequence,\n//         Rows,\n//         Columns\n//     } = multiframe;\n//     const firstImagePlaneModule = metadataProvider.get(\n//         \"imagePlaneModule\",\n//         imageIds[0]\n//     );\n//     const lastImagePlaneModule = metadataProvider.get(\n//         \"imagePlaneModule\",\n//         imageIds[imageIds.length - 1]\n//     );\n//     console.log(firstImagePlaneModule);\n//     console.log(lastImagePlaneModule);\n//     const corners = [\n//         ...getCorners(firstImagePlaneModule),\n//         ...getCorners(lastImagePlaneModule)\n//     ];\n//     console.log(`corners:`);\n//     console.log(corners);\n//     const indexToWorld = mat4.create();\n//     const ippFirstFrame = firstImagePlaneModule.imagePositionPatient;\n//     const rowCosines = Array.isArray(firstImagePlaneModule.rowCosines)\n//         ? [...firstImagePlaneModule.rowCosines]\n//         : [\n//               firstImagePlaneModule.rowCosines.x,\n//               firstImagePlaneModule.rowCosines.y,\n//               firstImagePlaneModule.rowCosines.z\n//           ];\n//     const columnCosines = Array.isArray(firstImagePlaneModule.columnCosines)\n//         ? [...firstImagePlaneModule.columnCosines]\n//         : [\n//               firstImagePlaneModule.columnCosines.x,\n//               firstImagePlaneModule.columnCosines.y,\n//               firstImagePlaneModule.columnCosines.z\n//           ];\n//     const { pixelSpacing } = firstImagePlaneModule;\n//     mat4.set(\n//         indexToWorld,\n//         // Column 1\n//         0,\n//         0,\n//         0,\n//         ippFirstFrame[0],\n//         // Column 2\n//         0,\n//         0,\n//         0,\n//         ippFirstFrame[1],\n//         // Column 3\n//         0,\n//         0,\n//         0,\n//         ippFirstFrame[2],\n//         // Column 4\n//         0,\n//         0,\n//         0,\n//         1\n//     );\n//     // TODO -> Get origin and (x,y,z) increments to build a translation matrix:\n//     // TODO -> Equation C.7.6.2.1-1\n//     // | cx*di rx* Xx 0 |  |x|\n//     // | cy*di ry Xy 0 |  |y|\n//     // | cz*di rz Xz 0 |  |z|\n//     // | tx ty tz 1 |  |1|\n//     // const [\n//     //     0, 0 , 0 , 0,\n//     //     0, 0 , 0 , 0,\n//     //     0, 0 , 0 , 0,\n//     //     ipp[0], ipp[1] , ipp[2] , 1,\n//     // ]\n//     // Each frame:\n//     // Find which corner the first voxel lines up with (one of 8 corners.)\n//     // Find how i,j,k orient with respect to source volume.\n//     // Go through each frame, find location in source to start, and whether to increment +/ix,+/-y,+/-z\n//     //   through each voxel.\n//     // [1,0,0,0,1,0]\n//     // const [\n//     // ]\n//     // Invert transformation matrix to get worldToIndex\n//     // Apply world to index on each point to fill up the matrix.\n//     // const sharedImageOrientationPatient = SharedFunctionalGroupsSequence.PlaneOrientationSequence\n//     //     ? SharedFunctionalGroupsSequence.PlaneOrientationSequence\n//     //           .ImageOrientationPatient\n//     //     : undefined;\n//     // const sliceLength = Columns * Rows;\n// }\n// function getCorners(imagePlaneModule) {\n//     // console.log(imagePlaneModule);\n//     const {\n//         rows,\n//         columns,\n//         rowCosines,\n//         columnCosines,\n//         imagePositionPatient: ipp,\n//         rowPixelSpacing,\n//         columnPixelSpacing\n//     } = imagePlaneModule;\n//     const rowLength = columns * columnPixelSpacing;\n//     const columnLength = rows * rowPixelSpacing;\n//     const entireRowVector = [\n//         rowLength * columnCosines[0],\n//         rowLength * columnCosines[1],\n//         rowLength * columnCosines[2]\n//     ];\n//     const entireColumnVector = [\n//         columnLength * rowCosines[0],\n//         columnLength * rowCosines[1],\n//         columnLength * rowCosines[2]\n//     ];\n//     const topLeft = [ipp[0], ipp[1], ipp[2]];\n//     const topRight = [\n//         topLeft[0] + entireRowVector[0],\n//         topLeft[1] + entireRowVector[1],\n//         topLeft[2] + entireRowVector[2]\n//     ];\n//     const bottomLeft = [\n//         topLeft[0] + entireColumnVector[0],\n//         topLeft[1] + entireColumnVector[1],\n//         topLeft[2] + entireColumnVector[2]\n//     ];\n//     const bottomRight = [\n//         bottomLeft[0] + entireRowVector[0],\n//         bottomLeft[1] + entireRowVector[1],\n//         bottomLeft[2] + entireRowVector[2]\n//     ];\n//     return [topLeft, topRight, bottomLeft, bottomRight];\n// }\n/**\n * Find the reference frame of the segmentation frame in the source data.\n *\n * @param  {Object}      multiframe        dicom metadata\n * @param  {Int}         frameSegment      frame dicom index\n * @param  {String[]}    imageIds          A list of imageIds.\n * @param  {Object}      sopUIDImageIdIndexMap  A map of SOPInstanceUID to imageId\n * @param  {Float}       tolerance         The tolerance parameter\n *\n * @returns {String}     Returns the imageId\n */\nfunction _generateToolState() {\n  _generateToolState = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(imageIds, arrayBuffer, metadataProvider, options) {\n    var _options$skipOverlapp, skipOverlapping, _options$tolerance, tolerance, _options$TypedArrayCo, TypedArrayConstructor, _options$maxBytesPerC, maxBytesPerChunk, eventTarget, triggerEvent, dicomData, dataset, multiframe, imagePlaneModule, generalSeriesModule, SeriesInstanceUID, ImageOrientationPatient, validOrientations, sliceLength, segMetadata, TransferSyntaxUID, pixelData, pixelDataChunks, rleEncodedFrames, orientation, sopUIDImageIdIndexMap, overlapping, insertFunction, segmentsOnFrameArray, segmentsOnFrame, arrayBufferLength, labelmapBufferArray, imageIdMaps, segmentsPixelIndices, overlappingSegments, centroidXYZ;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _options$skipOverlapp = options.skipOverlapping, skipOverlapping = _options$skipOverlapp === void 0 ? false : _options$skipOverlapp, _options$tolerance = options.tolerance, tolerance = _options$tolerance === void 0 ? 1e-3 : _options$tolerance, _options$TypedArrayCo = options.TypedArrayConstructor, TypedArrayConstructor = _options$TypedArrayCo === void 0 ? Uint8Array : _options$TypedArrayCo, _options$maxBytesPerC = options.maxBytesPerChunk, maxBytesPerChunk = _options$maxBytesPerC === void 0 ? 199000000 : _options$maxBytesPerC, eventTarget = options.eventTarget, triggerEvent = options.triggerEvent;\n          dicomData = DicomMessage.readFile(arrayBuffer);\n          dataset = DicomMetaDictionary.naturalizeDataset(dicomData.dict);\n          dataset._meta = DicomMetaDictionary.namifyDataset(dicomData.meta);\n          multiframe = Normalizer.normalizeToDataset([dataset]);\n          imagePlaneModule = metadataProvider.get(\"imagePlaneModule\", imageIds[0]);\n          generalSeriesModule = metadataProvider.get(\"generalSeriesModule\", imageIds[0]);\n          SeriesInstanceUID = generalSeriesModule.seriesInstanceUID;\n          if (!imagePlaneModule) {\n            console.warn(\"Insufficient metadata, imagePlaneModule missing.\");\n          }\n          ImageOrientationPatient = Array.isArray(imagePlaneModule.rowCosines) ? [].concat(_toConsumableArray(imagePlaneModule.rowCosines), _toConsumableArray(imagePlaneModule.columnCosines)) : [imagePlaneModule.rowCosines.x, imagePlaneModule.rowCosines.y, imagePlaneModule.rowCosines.z, imagePlaneModule.columnCosines.x, imagePlaneModule.columnCosines.y, imagePlaneModule.columnCosines.z]; // Get IOP from ref series, compute supported orientations:\n          validOrientations = getValidOrientations(ImageOrientationPatient);\n          sliceLength = multiframe.Columns * multiframe.Rows;\n          segMetadata = getSegmentMetadata(multiframe, SeriesInstanceUID);\n          TransferSyntaxUID = multiframe._meta.TransferSyntaxUID.Value[0];\n          if (!(TransferSyntaxUID === \"1.2.840.10008.1.2.5\")) {\n            _context.next = 23;\n            break;\n          }\n          rleEncodedFrames = Array.isArray(multiframe.PixelData) ? multiframe.PixelData : [multiframe.PixelData];\n          pixelData = decode(rleEncodedFrames, multiframe.Rows, multiframe.Columns);\n          if (!(multiframe.BitsStored === 1)) {\n            _context.next = 20;\n            break;\n          }\n          console.warn(\"No implementation for rle + bitbacking.\");\n          return _context.abrupt(\"return\");\n        case 20:\n          // Todo: need to test this with rle data\n          pixelDataChunks = [pixelData];\n          _context.next = 26;\n          break;\n        case 23:\n          pixelDataChunks = unpackPixelData(multiframe, {\n            maxBytesPerChunk: maxBytesPerChunk\n          });\n          if (pixelDataChunks) {\n            _context.next = 26;\n            break;\n          }\n          throw new Error(\"Fractional segmentations are not yet supported\");\n        case 26:\n          orientation = checkOrientation(multiframe, validOrientations, [imagePlaneModule.rows, imagePlaneModule.columns, imageIds.length], tolerance); // Pre-compute the sop UID to imageId index map so that in the for loop\n          // we don't have to call metadataProvider.get() for each imageId over\n          // and over again.\n          sopUIDImageIdIndexMap = imageIds.reduce(function (acc, imageId) {\n            var _metadataProvider$get = metadataProvider.get(\"generalImageModule\", imageId),\n              sopInstanceUID = _metadataProvider$get.sopInstanceUID;\n            acc[sopInstanceUID] = imageId;\n            return acc;\n          }, {});\n          overlapping = false;\n          if (!skipOverlapping) {\n            overlapping = checkSEGsOverlapping(pixelDataChunks, multiframe, imageIds, validOrientations, metadataProvider, tolerance, TypedArrayConstructor, sopUIDImageIdIndexMap);\n          }\n          _context.t0 = orientation;\n          _context.next = _context.t0 === \"Planar\" ? 33 : _context.t0 === \"Perpendicular\" ? 35 : _context.t0 === \"Oblique\" ? 36 : 37;\n          break;\n        case 33:\n          if (overlapping) {\n            insertFunction = insertOverlappingPixelDataPlanar;\n          } else {\n            insertFunction = insertPixelDataPlanar;\n          }\n          return _context.abrupt(\"break\", 37);\n        case 35:\n          throw new Error(\"Segmentations orthogonal to the acquisition plane of the source data are not yet supported.\");\n        case 36:\n          throw new Error(\"Segmentations oblique to the acquisition plane of the source data are not yet supported.\");\n        case 37:\n          /* if SEGs are overlapping:\n          1) the labelmapBuffer will contain M volumes which have non-overlapping segments;\n          2) segmentsOnFrame will have M * numberOfFrames values to track in which labelMap are the segments;\n          3) insertFunction will return the number of LabelMaps\n          4) generateToolState return is an array*/\n          segmentsOnFrameArray = [];\n          segmentsOnFrameArray[0] = [];\n          segmentsOnFrame = [];\n          arrayBufferLength = sliceLength * imageIds.length * TypedArrayConstructor.BYTES_PER_ELEMENT;\n          labelmapBufferArray = [];\n          labelmapBufferArray[0] = new ArrayBuffer(arrayBufferLength);\n\n          // Pre-compute the indices and metadata so that we don't have to call\n          // a function for each imageId in the for loop.\n          imageIdMaps = imageIds.reduce(function (acc, curr, index) {\n            acc.indices[curr] = index;\n            acc.metadata[curr] = metadataProvider.get(\"instance\", curr);\n            return acc;\n          }, {\n            indices: {},\n            metadata: {}\n          }); // This is the centroid calculation for each segment Index, the data structure\n          // is a Map with key = segmentIndex and value = {imageIdIndex: centroid, ...}\n          // later on we will use this data structure to calculate the centroid of the\n          // segment in the labelmapBuffer\n          segmentsPixelIndices = new Map();\n          _context.next = 47;\n          return insertFunction(segmentsOnFrame, segmentsOnFrameArray, labelmapBufferArray, pixelDataChunks, multiframe, imageIds, validOrientations, metadataProvider, tolerance, TypedArrayConstructor, segmentsPixelIndices, sopUIDImageIdIndexMap, imageIdMaps, eventTarget, triggerEvent);\n        case 47:\n          overlappingSegments = _context.sent;\n          // calculate the centroid of each segment\n          centroidXYZ = new Map();\n          segmentsPixelIndices.forEach(function (imageIdIndexBufferIndex, segmentIndex) {\n            var centroids = calculateCentroid(imageIdIndexBufferIndex, multiframe, metadataProvider, imageIds);\n            centroidXYZ.set(segmentIndex, centroids);\n          });\n          return _context.abrupt(\"return\", {\n            labelmapBufferArray: labelmapBufferArray,\n            segMetadata: segMetadata,\n            segmentsOnFrame: segmentsOnFrame,\n            segmentsOnFrameArray: segmentsOnFrameArray,\n            centroids: centroidXYZ,\n            overlappingSegments: overlappingSegments\n          });\n        case 51:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _generateToolState.apply(this, arguments);\n}\nfunction findReferenceSourceImageId(multiframe, frameSegment, imageIds, metadataProvider, tolerance, sopUIDImageIdIndexMap) {\n  var imageId = undefined;\n  if (!multiframe) {\n    return imageId;\n  }\n  var FrameOfReferenceUID = multiframe.FrameOfReferenceUID,\n    PerFrameFunctionalGroupsSequence = multiframe.PerFrameFunctionalGroupsSequence,\n    SourceImageSequence = multiframe.SourceImageSequence,\n    ReferencedSeriesSequence = multiframe.ReferencedSeriesSequence;\n  if (!PerFrameFunctionalGroupsSequence || PerFrameFunctionalGroupsSequence.length === 0) {\n    return imageId;\n  }\n  var PerFrameFunctionalGroup = PerFrameFunctionalGroupsSequence[frameSegment];\n  if (!PerFrameFunctionalGroup) {\n    return imageId;\n  }\n  var frameSourceImageSequence = undefined;\n  if (PerFrameFunctionalGroup.DerivationImageSequence) {\n    var DerivationImageSequence = PerFrameFunctionalGroup.DerivationImageSequence;\n    if (Array.isArray(DerivationImageSequence)) {\n      if (DerivationImageSequence.length !== 0) {\n        DerivationImageSequence = DerivationImageSequence[0];\n      } else {\n        DerivationImageSequence = undefined;\n      }\n    }\n    if (DerivationImageSequence) {\n      frameSourceImageSequence = DerivationImageSequence.SourceImageSequence;\n      if (Array.isArray(frameSourceImageSequence)) {\n        if (frameSourceImageSequence.length !== 0) {\n          frameSourceImageSequence = frameSourceImageSequence[0];\n        } else {\n          frameSourceImageSequence = undefined;\n        }\n      }\n    }\n  } else if (SourceImageSequence && SourceImageSequence.length !== 0) {\n    console.warn(\"DerivationImageSequence not present, using SourceImageSequence assuming SEG has the same geometry as the source image.\");\n    frameSourceImageSequence = SourceImageSequence[frameSegment];\n  }\n  if (frameSourceImageSequence) {\n    imageId = getImageIdOfSourceImageBySourceImageSequence(frameSourceImageSequence, sopUIDImageIdIndexMap);\n  }\n  if (imageId === undefined && ReferencedSeriesSequence) {\n    var referencedSeriesSequence = Array.isArray(ReferencedSeriesSequence) ? ReferencedSeriesSequence[0] : ReferencedSeriesSequence;\n    var ReferencedSeriesInstanceUID = referencedSeriesSequence.SeriesInstanceUID;\n    imageId = getImageIdOfSourceImagebyGeometry(ReferencedSeriesInstanceUID, FrameOfReferenceUID, PerFrameFunctionalGroup, imageIds, metadataProvider, tolerance);\n  }\n  return imageId;\n}\n\n/**\n * Checks if there is any overlapping segmentations.\n *  @returns {boolean} Returns a flag if segmentations overlapping\n */\n\nfunction checkSEGsOverlapping(pixelData, multiframe, imageIds, validOrientations, metadataProvider, tolerance, TypedArrayConstructor, sopUIDImageIdIndexMap) {\n  var SharedFunctionalGroupsSequence = multiframe.SharedFunctionalGroupsSequence,\n    PerFrameFunctionalGroupsSequence = multiframe.PerFrameFunctionalGroupsSequence,\n    SegmentSequence = multiframe.SegmentSequence,\n    Rows = multiframe.Rows,\n    Columns = multiframe.Columns;\n  var numberOfSegs = SegmentSequence.length;\n  if (numberOfSegs < 2) {\n    return false;\n  }\n  var sharedImageOrientationPatient = SharedFunctionalGroupsSequence.PlaneOrientationSequence ? SharedFunctionalGroupsSequence.PlaneOrientationSequence.ImageOrientationPatient : undefined;\n  var sliceLength = Columns * Rows;\n  var groupsLen = PerFrameFunctionalGroupsSequence.length;\n\n  /** sort groupsLen to have all the segments for each frame in an array\n   * frame 2 : 1, 2\n   * frame 4 : 1, 3\n   * frame 5 : 4\n   */\n\n  var frameSegmentsMapping = new Map();\n  var _loop3 = function _loop3() {\n      var segmentIndex = getSegmentIndex(multiframe, frameSegment);\n      if (segmentIndex === undefined) {\n        console.warn(\"Could not retrieve the segment index for frame segment \" + frameSegment + \", skipping this frame.\");\n        return 0; // continue\n      }\n      var imageId = findReferenceSourceImageId(multiframe, frameSegment, imageIds, metadataProvider, tolerance, sopUIDImageIdIndexMap);\n      if (!imageId) {\n        console.warn(\"Image not present in stack, can't import frame : \" + frameSegment + \".\");\n        return 0; // continue\n      }\n      var imageIdIndex = imageIds.findIndex(function (element) {\n        return element === imageId;\n      });\n      if (frameSegmentsMapping.has(imageIdIndex)) {\n        var segmentArray = frameSegmentsMapping.get(imageIdIndex);\n        if (!segmentArray.includes(frameSegment)) {\n          segmentArray.push(frameSegment);\n          frameSegmentsMapping.set(imageIdIndex, segmentArray);\n        }\n      } else {\n        frameSegmentsMapping.set(imageIdIndex, [frameSegment]);\n      }\n    },\n    _ret;\n  for (var frameSegment = 0; frameSegment < groupsLen; ++frameSegment) {\n    _ret = _loop3();\n    if (_ret === 0) continue;\n  }\n  var _iterator = _createForOfIteratorHelper(frameSegmentsMapping.entries()),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var _step$value = _slicedToArray(_step.value, 2),\n        role = _step$value[1];\n      var temp2DArray = new TypedArrayConstructor(sliceLength).fill(0);\n      for (var i = 0; i < role.length; ++i) {\n        var _frameSegment = role[i];\n        var PerFrameFunctionalGroups = PerFrameFunctionalGroupsSequence[_frameSegment];\n        var ImageOrientationPatientI = sharedImageOrientationPatient || PerFrameFunctionalGroups.PlaneOrientationSequence.ImageOrientationPatient;\n        var view = readFromUnpackedChunks(pixelData, _frameSegment * sliceLength, sliceLength);\n        var pixelDataI2D = ndarray(view, [Rows, Columns]);\n        var alignedPixelDataI = alignPixelDataWithSourceData(pixelDataI2D, ImageOrientationPatientI, validOrientations, tolerance);\n        if (!alignedPixelDataI) {\n          console.warn(\"Individual SEG frames are out of plane with respect to the first SEG frame, this is not yet supported, skipping this frame.\");\n          continue;\n        }\n        var data = alignedPixelDataI.data;\n        for (var j = 0, len = data.length; j < len; ++j) {\n          if (data[j] !== 0) {\n            temp2DArray[j]++;\n            if (temp2DArray[j] > 1) {\n              return true;\n            }\n          }\n        }\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return false;\n}\nfunction insertOverlappingPixelDataPlanar(segmentsOnFrame, segmentsOnFrameArray, labelmapBufferArray, pixelData, multiframe, imageIds, validOrientations, metadataProvider, tolerance, TypedArrayConstructor, segmentsPixelIndices, sopUIDImageIdIndexMap) {\n  var SharedFunctionalGroupsSequence = multiframe.SharedFunctionalGroupsSequence,\n    PerFrameFunctionalGroupsSequence = multiframe.PerFrameFunctionalGroupsSequence,\n    Rows = multiframe.Rows,\n    Columns = multiframe.Columns;\n  var sharedImageOrientationPatient = SharedFunctionalGroupsSequence.PlaneOrientationSequence ? SharedFunctionalGroupsSequence.PlaneOrientationSequence.ImageOrientationPatient : undefined;\n  var sliceLength = Columns * Rows;\n  var arrayBufferLength = sliceLength * imageIds.length * TypedArrayConstructor.BYTES_PER_ELEMENT;\n  // indicate the number of labelMaps\n  var M = 1;\n\n  // indicate the current labelMap array index;\n  var m = 0;\n\n  // temp array for checking overlaps\n  var tempBuffer = labelmapBufferArray[m].slice(0);\n\n  // temp list for checking overlaps\n  var tempSegmentsOnFrame = structuredClone(segmentsOnFrameArray[m]);\n\n  /** split overlapping SEGs algorithm for each segment:\n   *  A) copy the labelmapBuffer in the array with index 0\n   *  B) add the segment pixel per pixel on the copied buffer from (A)\n   *  C) if no overlap, copy the results back on the orignal array from (A)\n   *  D) if overlap, repeat increasing the index m up to M (if out of memory, add new buffer in the array and M++);\n   */\n\n  var numberOfSegs = multiframe.SegmentSequence.length;\n  for (var segmentIndexToProcess = 1; segmentIndexToProcess <= numberOfSegs; ++segmentIndexToProcess) {\n    var _loop4 = function _loop4(_i2) {\n        var PerFrameFunctionalGroups = PerFrameFunctionalGroupsSequence[_i2];\n        var segmentIndex = getSegmentIndex(multiframe, _i2);\n        if (segmentIndex === undefined) {\n          throw new Error(\"Could not retrieve the segment index. Aborting segmentation loading.\");\n        }\n        if (segmentIndex !== segmentIndexToProcess) {\n          i = _i2;\n          return 0; // continue\n        }\n        var ImageOrientationPatientI = sharedImageOrientationPatient || PerFrameFunctionalGroups.PlaneOrientationSequence.ImageOrientationPatient;\n\n        // Since we moved to the chunks approach, we need to read the data\n        // and handle scenarios where the portion of data is in one chunk\n        // and the other portion is in another chunk\n        var view = readFromUnpackedChunks(pixelData, _i2 * sliceLength, sliceLength);\n        var pixelDataI2D = ndarray(view, [Rows, Columns]);\n        var alignedPixelDataI = alignPixelDataWithSourceData(pixelDataI2D, ImageOrientationPatientI, validOrientations, tolerance);\n        if (!alignedPixelDataI) {\n          throw new Error(\"Individual SEG frames are out of plane with respect to the first SEG frame. \" + \"This is not yet supported. Aborting segmentation loading.\");\n        }\n        var imageId = findReferenceSourceImageId(multiframe, _i2, imageIds, metadataProvider, tolerance, sopUIDImageIdIndexMap);\n        if (!imageId) {\n          console.warn(\"Image not present in stack, can't import frame : \" + _i2 + \".\");\n          i = _i2;\n          return 0; // continue\n        }\n        var sourceImageMetadata = metadataProvider.get(\"instance\", imageId);\n        if (Rows !== sourceImageMetadata.Rows || Columns !== sourceImageMetadata.Columns) {\n          throw new Error(\"Individual SEG frames have different geometry dimensions (Rows and Columns) \" + \"respect to the source image reference frame. This is not yet supported. \" + \"Aborting segmentation loading. \");\n        }\n        var imageIdIndex = imageIds.findIndex(function (element) {\n          return element === imageId;\n        });\n        var byteOffset = sliceLength * imageIdIndex * TypedArrayConstructor.BYTES_PER_ELEMENT;\n        var labelmap2DView = new TypedArrayConstructor(tempBuffer, byteOffset, sliceLength);\n        var data = alignedPixelDataI.data;\n        var segmentOnFrame = false;\n        for (var j = 0, len = alignedPixelDataI.data.length; j < len; ++j) {\n          if (data[j]) {\n            if (labelmap2DView[j] !== 0) {\n              m++;\n              if (m >= M) {\n                labelmapBufferArray[m] = new ArrayBuffer(arrayBufferLength);\n                segmentsOnFrameArray[m] = [];\n                M++;\n              }\n              tempBuffer = labelmapBufferArray[m].slice(0);\n              tempSegmentsOnFrame = structuredClone(segmentsOnFrameArray[m]);\n              _i2 = 0;\n              break;\n            } else {\n              labelmap2DView[j] = segmentIndex;\n              segmentOnFrame = true;\n            }\n          }\n        }\n        if (segmentOnFrame) {\n          if (!tempSegmentsOnFrame[imageIdIndex]) {\n            tempSegmentsOnFrame[imageIdIndex] = [];\n          }\n          tempSegmentsOnFrame[imageIdIndex].push(segmentIndex);\n          if (!segmentsOnFrame[imageIdIndex]) {\n            segmentsOnFrame[imageIdIndex] = [];\n          }\n          segmentsOnFrame[imageIdIndex].push(segmentIndex);\n        }\n        i = _i2;\n      },\n      _ret2;\n    for (var i = 0, groupsLen = PerFrameFunctionalGroupsSequence.length; i < groupsLen; ++i) {\n      _ret2 = _loop4(i);\n      if (_ret2 === 0) continue;\n    }\n    labelmapBufferArray[m] = tempBuffer.slice(0);\n    segmentsOnFrameArray[m] = structuredClone(tempSegmentsOnFrame);\n\n    // reset temp variables/buffers for new segment\n    m = 0;\n    tempBuffer = labelmapBufferArray[m].slice(0);\n    tempSegmentsOnFrame = structuredClone(segmentsOnFrameArray[m]);\n  }\n}\nvar getSegmentIndex = function getSegmentIndex(multiframe, frame) {\n  var PerFrameFunctionalGroupsSequence = multiframe.PerFrameFunctionalGroupsSequence,\n    SharedFunctionalGroupsSequence = multiframe.SharedFunctionalGroupsSequence;\n  var PerFrameFunctionalGroups = PerFrameFunctionalGroupsSequence[frame];\n  return PerFrameFunctionalGroups && PerFrameFunctionalGroups.SegmentIdentificationSequence ? PerFrameFunctionalGroups.SegmentIdentificationSequence.ReferencedSegmentNumber : SharedFunctionalGroupsSequence.SegmentIdentificationSequence ? SharedFunctionalGroupsSequence.SegmentIdentificationSequence.ReferencedSegmentNumber : undefined;\n};\nfunction insertPixelDataPlanar(segmentsOnFrame, segmentsOnFrameArray, labelmapBufferArray, pixelData, multiframe, imageIds, validOrientations, metadataProvider, tolerance, TypedArrayConstructor, segmentsPixelIndices, sopUIDImageIdIndexMap, imageIdMaps, eventTarget, triggerEvent) {\n  var SharedFunctionalGroupsSequence = multiframe.SharedFunctionalGroupsSequence,\n    PerFrameFunctionalGroupsSequence = multiframe.PerFrameFunctionalGroupsSequence,\n    Rows = multiframe.Rows,\n    Columns = multiframe.Columns;\n  var sharedImageOrientationPatient = SharedFunctionalGroupsSequence.PlaneOrientationSequence ? SharedFunctionalGroupsSequence.PlaneOrientationSequence.ImageOrientationPatient : undefined;\n  var sliceLength = Columns * Rows;\n  var i = 0;\n  var groupsLen = PerFrameFunctionalGroupsSequence.length;\n  var chunkSize = Math.ceil(groupsLen / 10); // 10% of total length\n\n  var shouldTriggerEvent = triggerEvent && eventTarget;\n  var overlapping = false;\n  // Below, we chunk the processing of the frames to avoid blocking the main thread\n  // if the segmentation is large. We also use a promise to allow the caller to\n  // wait for the processing to finish.\n  return new Promise(function (resolve) {\n    function processInChunks() {\n      // process one chunk\n      for (var end = Math.min(i + chunkSize, groupsLen); i < end; ++i) {\n        var PerFrameFunctionalGroups = PerFrameFunctionalGroupsSequence[i];\n        var ImageOrientationPatientI = sharedImageOrientationPatient || PerFrameFunctionalGroups.PlaneOrientationSequence.ImageOrientationPatient;\n        var view = readFromUnpackedChunks(pixelData, i * sliceLength, sliceLength);\n        var pixelDataI2D = ndarray(view, [Rows, Columns]);\n        var alignedPixelDataI = alignPixelDataWithSourceData(pixelDataI2D, ImageOrientationPatientI, validOrientations, tolerance);\n        if (!alignedPixelDataI) {\n          throw new Error(\"Individual SEG frames are out of plane with respect to the first SEG frame. \" + \"This is not yet supported. Aborting segmentation loading.\");\n        }\n        var segmentIndex = getSegmentIndex(multiframe, i);\n        if (segmentIndex === undefined) {\n          throw new Error(\"Could not retrieve the segment index. Aborting segmentation loading.\");\n        }\n        if (!segmentsPixelIndices.has(segmentIndex)) {\n          segmentsPixelIndices.set(segmentIndex, {});\n        }\n        var imageId = findReferenceSourceImageId(multiframe, i, imageIds, metadataProvider, tolerance, sopUIDImageIdIndexMap);\n        if (!imageId) {\n          console.warn(\"Image not present in stack, can't import frame : \" + i + \".\");\n          continue;\n        }\n        var sourceImageMetadata = imageIdMaps.metadata[imageId];\n        if (Rows !== sourceImageMetadata.Rows || Columns !== sourceImageMetadata.Columns) {\n          throw new Error(\"Individual SEG frames have different geometry dimensions (Rows and Columns) \" + \"respect to the source image reference frame. This is not yet supported. \" + \"Aborting segmentation loading. \");\n        }\n        var imageIdIndex = imageIdMaps.indices[imageId];\n        var byteOffset = sliceLength * imageIdIndex * TypedArrayConstructor.BYTES_PER_ELEMENT;\n        var labelmap2DView = new TypedArrayConstructor(labelmapBufferArray[0], byteOffset, sliceLength);\n        var data = alignedPixelDataI.data;\n        var indexCache = [];\n        for (var j = 0, len = alignedPixelDataI.data.length; j < len; ++j) {\n          if (data[j]) {\n            for (var x = j; x < len; ++x) {\n              if (data[x]) {\n                if (!overlapping && labelmap2DView[x] !== 0) {\n                  overlapping = true;\n                }\n                labelmap2DView[x] = segmentIndex;\n                indexCache.push(x);\n              }\n            }\n            if (!segmentsOnFrame[imageIdIndex]) {\n              segmentsOnFrame[imageIdIndex] = [];\n            }\n            segmentsOnFrame[imageIdIndex].push(segmentIndex);\n            break;\n          }\n        }\n        var segmentIndexObject = segmentsPixelIndices.get(segmentIndex);\n        segmentIndexObject[imageIdIndex] = indexCache;\n        segmentsPixelIndices.set(segmentIndex, segmentIndexObject);\n      }\n\n      // trigger an event after each chunk\n      if (shouldTriggerEvent) {\n        var percentComplete = Math.round(i / groupsLen * 100);\n        triggerEvent(eventTarget, Events.SEGMENTATION_LOAD_PROGRESS, {\n          percentComplete: percentComplete\n        });\n      }\n\n      // schedule next chunk\n      if (i < groupsLen) {\n        setTimeout(processInChunks, 0);\n      } else {\n        // resolve the Promise when all chunks have been processed\n        resolve(overlapping);\n      }\n    }\n    processInChunks();\n  });\n}\n\n/**\n * unpackPixelData - Unpacks bit packed pixelData if the Segmentation is BINARY.\n *\n * @param  {Object} multiframe The multiframe dataset.\n * @param  {Object} options    Options for the unpacking.\n * @return {Uint8Array}      The unpacked pixelData.\n */\nfunction unpackPixelData(multiframe, options) {\n  var segType = multiframe.SegmentationType;\n  var data;\n  if (Array.isArray(multiframe.PixelData)) {\n    data = multiframe.PixelData[0];\n  } else {\n    data = multiframe.PixelData;\n  }\n  if (data === undefined) {\n    log.error(\"This segmentation pixelData is undefined.\");\n  }\n  if (segType === \"BINARY\") {\n    // For extreme big data, we can't unpack the data at once and we need to\n    // chunk it and unpack each chunk separately.\n    // MAX 2GB is the limit right now to allocate a buffer\n    return getUnpackedChunks(data, options.maxBytesPerChunk);\n  }\n  var pixelData = new Uint8Array(data);\n  var max = multiframe.MaximumFractionalValue;\n  var onlyMaxAndZero = pixelData.find(function (element) {\n    return element !== 0 && element !== max;\n  }) === undefined;\n  if (!onlyMaxAndZero) {\n    // This is a fractional segmentation, which is not currently supported.\n    return;\n  }\n  log.warn(\"This segmentation object is actually binary... processing as such.\");\n  return pixelData;\n}\nfunction getUnpackedChunks(data, maxBytesPerChunk) {\n  var bitArray = new Uint8Array(data);\n  var chunks = [];\n  var maxBitsPerChunk = maxBytesPerChunk * 8;\n  var numberOfChunks = Math.ceil(bitArray.length * 8 / maxBitsPerChunk);\n  for (var i = 0; i < numberOfChunks; i++) {\n    var startBit = i * maxBitsPerChunk;\n    var endBit = Math.min(startBit + maxBitsPerChunk, bitArray.length * 8);\n    var startByte = Math.floor(startBit / 8);\n    var endByte = Math.ceil(endBit / 8);\n    var chunk = bitArray.slice(startByte, endByte);\n    var unpackedChunk = BitArray.unpack(chunk);\n    chunks.push(unpackedChunk);\n  }\n  return chunks;\n}\n\n/**\n * getImageIdOfSourceImageBySourceImageSequence - Returns the Cornerstone imageId of the source image.\n *\n * @param  {Object}   SourceImageSequence  Sequence describing the source image.\n * @param  {String[]} imageIds             A list of imageIds.\n * @param  {Object}   sopUIDImageIdIndexMap A map of SOPInstanceUIDs to imageIds.\n * @return {String}                        The corresponding imageId.\n */\nfunction getImageIdOfSourceImageBySourceImageSequence(SourceImageSequence, sopUIDImageIdIndexMap) {\n  var ReferencedSOPInstanceUID = SourceImageSequence.ReferencedSOPInstanceUID,\n    ReferencedFrameNumber = SourceImageSequence.ReferencedFrameNumber;\n  return ReferencedFrameNumber ? getImageIdOfReferencedFrame(ReferencedSOPInstanceUID, ReferencedFrameNumber, sopUIDImageIdIndexMap) : sopUIDImageIdIndexMap[ReferencedSOPInstanceUID];\n}\n\n/**\n * getImageIdOfSourceImagebyGeometry - Returns the Cornerstone imageId of the source image.\n *\n * @param  {String}    ReferencedSeriesInstanceUID    Referenced series of the source image.\n * @param  {String}    FrameOfReferenceUID            Frame of reference.\n * @param  {Object}    PerFrameFunctionalGroup        Sequence describing segmentation reference attributes per frame.\n * @param  {String[]}  imageIds                       A list of imageIds.\n * @param  {Object}    sopUIDImageIdIndexMap          A map of SOPInstanceUIDs to imageIds.\n * @param  {Float}     tolerance                      The tolerance parameter\n *\n * @return {String}                                   The corresponding imageId.\n */\nfunction getImageIdOfSourceImagebyGeometry(ReferencedSeriesInstanceUID, FrameOfReferenceUID, PerFrameFunctionalGroup, imageIds, metadataProvider, tolerance) {\n  if (ReferencedSeriesInstanceUID === undefined || PerFrameFunctionalGroup.PlanePositionSequence === undefined || PerFrameFunctionalGroup.PlanePositionSequence[0] === undefined || PerFrameFunctionalGroup.PlanePositionSequence[0].ImagePositionPatient === undefined) {\n    return undefined;\n  }\n  for (var imageIdsIndexc = 0; imageIdsIndexc < imageIds.length; ++imageIdsIndexc) {\n    var sourceImageMetadata = metadataProvider.get(\"instance\", imageIds[imageIdsIndexc]);\n    if (sourceImageMetadata === undefined || sourceImageMetadata.ImagePositionPatient === undefined || sourceImageMetadata.FrameOfReferenceUID !== FrameOfReferenceUID || sourceImageMetadata.SeriesInstanceUID !== ReferencedSeriesInstanceUID) {\n      continue;\n    }\n    if (compareArrays(PerFrameFunctionalGroup.PlanePositionSequence[0].ImagePositionPatient, sourceImageMetadata.ImagePositionPatient, tolerance)) {\n      return imageIds[imageIdsIndexc];\n    }\n  }\n}\n\n/**\n * getImageIdOfReferencedFrame - Returns the imageId corresponding to the\n * specified sopInstanceUid and frameNumber for multi-frame images.\n *\n * @param  {String} sopInstanceUid   The sopInstanceUid of the desired image.\n * @param  {Number} frameNumber      The frame number.\n * @param  {String} imageIds         The list of imageIds.\n * @param  {Object} sopUIDImageIdIndexMap A map of SOPInstanceUIDs to imageIds.\n * @return {String}                  The imageId that corresponds to the sopInstanceUid.\n */\nfunction getImageIdOfReferencedFrame(sopInstanceUid, frameNumber, sopUIDImageIdIndexMap) {\n  var imageId = sopUIDImageIdIndexMap[sopInstanceUid];\n  if (!imageId) {\n    return;\n  }\n  var imageIdFrameNumber = Number(imageId.split(\"frame=\")[1]);\n  return imageIdFrameNumber === frameNumber - 1 ? imageId : undefined;\n}\n\n/**\n * getValidOrientations - returns an array of valid orientations.\n *\n * @param  {Number[6]} iop The row (0..2) an column (3..5) direction cosines.\n * @return {Number[8][6]} An array of valid orientations.\n */\nfunction getValidOrientations(iop) {\n  var orientations = [];\n\n  // [0,  1,  2]: 0,   0hf,   0vf\n  // [3,  4,  5]: 90,  90hf,  90vf\n  // [6, 7]:      180, 270\n\n  orientations[0] = iop;\n  orientations[1] = flipIOP.h(iop);\n  orientations[2] = flipIOP.v(iop);\n  var iop90 = rotateDirectionCosinesInPlane(iop, Math.PI / 2);\n  orientations[3] = iop90;\n  orientations[4] = flipIOP.h(iop90);\n  orientations[5] = flipIOP.v(iop90);\n  orientations[6] = rotateDirectionCosinesInPlane(iop, Math.PI);\n  orientations[7] = rotateDirectionCosinesInPlane(iop, 1.5 * Math.PI);\n  return orientations;\n}\n\n/**\n * alignPixelDataWithSourceData -\n *\n * @param {Ndarray} pixelData2D - The data to align.\n * @param {Number[6]} iop - The orientation of the image slice.\n * @param {Number[8][6]} orientations - An array of valid imageOrientationPatient values.\n * @param {Number} tolerance.\n * @return {Ndarray} The aligned pixelData.\n */\nfunction alignPixelDataWithSourceData(pixelData2D, iop, orientations, tolerance) {\n  if (compareArrays(iop, orientations[0], tolerance)) {\n    return pixelData2D;\n  } else if (compareArrays(iop, orientations[1], tolerance)) {\n    // Flipped vertically.\n\n    // Undo Flip\n    return flipMatrix2D.v(pixelData2D);\n  } else if (compareArrays(iop, orientations[2], tolerance)) {\n    // Flipped horizontally.\n\n    // Unfo flip\n    return flipMatrix2D.h(pixelData2D);\n  } else if (compareArrays(iop, orientations[3], tolerance)) {\n    //Rotated 90 degrees\n\n    // Rotate back\n    return rotateMatrix902D(pixelData2D);\n  } else if (compareArrays(iop, orientations[4], tolerance)) {\n    //Rotated 90 degrees and fliped horizontally.\n\n    // Undo flip and rotate back.\n    return rotateMatrix902D(flipMatrix2D.h(pixelData2D));\n  } else if (compareArrays(iop, orientations[5], tolerance)) {\n    // Rotated 90 degrees and fliped vertically\n\n    // Unfo flip and rotate back.\n    return rotateMatrix902D(flipMatrix2D.v(pixelData2D));\n  } else if (compareArrays(iop, orientations[6], tolerance)) {\n    // Rotated 180 degrees. // TODO -> Do this more effeciently, there is a 1:1 mapping like 90 degree rotation.\n\n    return rotateMatrix902D(rotateMatrix902D(pixelData2D));\n  } else if (compareArrays(iop, orientations[7], tolerance)) {\n    // Rotated 270 degrees\n\n    // Rotate back.\n    return rotateMatrix902D(rotateMatrix902D(rotateMatrix902D(pixelData2D)));\n  }\n}\nfunction getSegmentMetadata(multiframe, seriesInstanceUid) {\n  var segmentSequence = multiframe.SegmentSequence;\n  var data = [];\n  if (Array.isArray(segmentSequence)) {\n    data = [undefined].concat(_toConsumableArray(segmentSequence));\n  } else {\n    // Only one segment, will be stored as an object.\n    data = [undefined, segmentSequence];\n  }\n  return {\n    seriesInstanceUid: seriesInstanceUid,\n    data: data\n  };\n}\n\n/**\n * Reads a range of bytes from an array of ArrayBuffer chunks and\n * aggregate them into a new Uint8Array.\n *\n * @param {ArrayBuffer[]} chunks - An array of ArrayBuffer chunks.\n * @param {number} offset - The offset of the first byte to read.\n * @param {number} length - The number of bytes to read.\n * @returns {Uint8Array} A new Uint8Array containing the requested bytes.\n */\nfunction readFromUnpackedChunks(chunks, offset, length) {\n  var mapping = getUnpackedOffsetAndLength(chunks, offset, length);\n\n  // If all the data is in one chunk, we can just slice that chunk\n  if (mapping.start.chunkIndex === mapping.end.chunkIndex) {\n    return new Uint8Array(chunks[mapping.start.chunkIndex].buffer, mapping.start.offset, length);\n  } else {\n    // If the data spans multiple chunks, we need to create a new Uint8Array and copy the data from each chunk\n    var result = new Uint8Array(length);\n    var resultOffset = 0;\n    for (var i = mapping.start.chunkIndex; i <= mapping.end.chunkIndex; i++) {\n      var start = i === mapping.start.chunkIndex ? mapping.start.offset : 0;\n      var end = i === mapping.end.chunkIndex ? mapping.end.offset : chunks[i].length;\n      result.set(new Uint8Array(chunks[i].buffer, start, end - start), resultOffset);\n      resultOffset += end - start;\n    }\n    return result;\n  }\n}\nfunction getUnpackedOffsetAndLength(chunks, offset, length) {\n  var totalBytes = chunks.reduce(function (total, chunk) {\n    return total + chunk.length;\n  }, 0);\n  if (offset < 0 || offset + length > totalBytes) {\n    throw new Error(\"Offset and length out of bounds\");\n  }\n  var startChunkIndex = 0;\n  var startOffsetInChunk = offset;\n  while (startOffsetInChunk >= chunks[startChunkIndex].length) {\n    startOffsetInChunk -= chunks[startChunkIndex].length;\n    startChunkIndex++;\n  }\n  var endChunkIndex = startChunkIndex;\n  var endOffsetInChunk = startOffsetInChunk + length;\n  while (endOffsetInChunk > chunks[endChunkIndex].length) {\n    endOffsetInChunk -= chunks[endChunkIndex].length;\n    endChunkIndex++;\n  }\n  return {\n    start: {\n      chunkIndex: startChunkIndex,\n      offset: startOffsetInChunk\n    },\n    end: {\n      chunkIndex: endChunkIndex,\n      offset: endOffsetInChunk\n    }\n  };\n}\nfunction calculateCentroid(imageIdIndexBufferIndex, multiframe, metadataProvider, imageIds) {\n  var xAcc = 0;\n  var yAcc = 0;\n  var zAcc = 0;\n  var worldXAcc = 0;\n  var worldYAcc = 0;\n  var worldZAcc = 0;\n  var count = 0;\n  for (var _i3 = 0, _Object$entries = Object.entries(imageIdIndexBufferIndex); _i3 < _Object$entries.length; _i3++) {\n    var _Object$entries$_i = _slicedToArray(_Object$entries[_i3], 2),\n      imageIdIndex = _Object$entries$_i[0],\n      bufferIndices = _Object$entries$_i[1];\n    var z = Number(imageIdIndex);\n    if (!bufferIndices || bufferIndices.length === 0) {\n      continue;\n    }\n\n    // Get metadata for this slice\n    var imageId = imageIds[z];\n    var imagePlaneModule = metadataProvider.get(\"imagePlaneModule\", imageId);\n    if (!imagePlaneModule) {\n      console.debug(\"Missing imagePlaneModule metadata for centroid calculation\");\n      continue;\n    }\n    var imagePositionPatient = imagePlaneModule.imagePositionPatient,\n      rowCosines = imagePlaneModule.rowCosines,\n      columnCosines = imagePlaneModule.columnCosines,\n      rowPixelSpacing = imagePlaneModule.rowPixelSpacing,\n      columnPixelSpacing = imagePlaneModule.columnPixelSpacing;\n    var _iterator2 = _createForOfIteratorHelper(bufferIndices),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var bufferIndex = _step2.value;\n        var y = Math.floor(bufferIndex / multiframe.Rows);\n        var x = bufferIndex % multiframe.Rows;\n\n        // Image coordinates\n        xAcc += x;\n        yAcc += y;\n        zAcc += z;\n\n        // Calculate world coordinates\n        // P(world) = P(image) * IOP * spacing + IPP\n        var worldX = imagePositionPatient[0] + x * rowCosines[0] * columnPixelSpacing + y * columnCosines[0] * rowPixelSpacing;\n        var worldY = imagePositionPatient[1] + x * rowCosines[1] * columnPixelSpacing + y * columnCosines[1] * rowPixelSpacing;\n        var worldZ = imagePositionPatient[2] + x * rowCosines[2] * columnPixelSpacing + y * columnCosines[2] * rowPixelSpacing;\n        worldXAcc += worldX;\n        worldYAcc += worldY;\n        worldZAcc += worldZ;\n        count++;\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n  }\n  return {\n    image: {\n      x: Math.floor(xAcc / count),\n      y: Math.floor(yAcc / count),\n      z: Math.floor(zAcc / count)\n    },\n    world: {\n      x: worldXAcc / count,\n      y: worldYAcc / count,\n      z: worldZAcc / count\n    },\n    count: count\n  };\n}\nvar Segmentation = {\n  generateSegmentation: generateSegmentation,\n  generateToolState: generateToolState,\n  fillSegmentation: fillSegmentation\n};\n\nexport { Segmentation as default, fillSegmentation, generateSegmentation, generateToolState };\n","import Segmentation$1 from './Segmentation_3X.js';\nimport Segmentation from './Segmentation_4X.js';\n\n/**\n * generateSegmentation - Generates a DICOM Segmentation object given cornerstoneTools data.\n *\n * @param  {object[]} images    An array of the cornerstone image objects.\n * @param  {Object|Object[]} labelmaps3DorBrushData For 4.X: The cornerstone `Labelmap3D` object, or an array of objects.\n *                                                  For 3.X: the BrushData.\n * @param  {number} cornerstoneToolsVersion The cornerstoneTools major version to map against.\n * @returns {Object}\n */\nfunction generateSegmentation(images, labelmaps3DorBrushData) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n    includeSliceSpacing: true\n  };\n  var cornerstoneToolsVersion = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 4;\n  if (cornerstoneToolsVersion === 4) {\n    return Segmentation.generateSegmentation(images, labelmaps3DorBrushData, options);\n  }\n  if (cornerstoneToolsVersion === 3) {\n    return Segmentation$1.generateSegmentation(images, labelmaps3DorBrushData, options);\n  }\n  console.warn(\"No generateSegmentation adapter for cornerstone version \".concat(cornerstoneToolsVersion, \", exiting.\"));\n}\n\n/**\n * generateToolState - Given a set of cornerstoneTools imageIds and a Segmentation buffer,\n * derive cornerstoneTools toolState and brush metadata.\n *\n * @param  {string[]} imageIds    An array of the imageIds.\n * @param  {ArrayBuffer} arrayBuffer The SEG arrayBuffer.\n * @param {*} metadataProvider\n * @param  {boolean} skipOverlapping - skip checks for overlapping segs, default value false.\n * @param  {number} tolerance - default value 1.e-3.\n * @param  {number} cornerstoneToolsVersion - default value 4.\n *\n * @returns {Object}  The toolState and an object from which the\n *                    segment metadata can be derived.\n */\nfunction generateToolState(imageIds, arrayBuffer, metadataProvider) {\n  var skipOverlapping = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var tolerance = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1e-3;\n  var cornerstoneToolsVersion = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 4;\n  if (cornerstoneToolsVersion === 4) {\n    return Segmentation.generateToolState(imageIds, arrayBuffer, metadataProvider, skipOverlapping, tolerance);\n  }\n  if (cornerstoneToolsVersion === 3) {\n    return Segmentation$1.generateToolState(imageIds, arrayBuffer, metadataProvider);\n  }\n  console.warn(\"No generateToolState adapter for cornerstone version \".concat(cornerstoneToolsVersion, \", exiting.\"));\n}\n\n/**\n * fillSegmentation - Fills a derived segmentation dataset with cornerstoneTools `LabelMap3D` data.\n *\n * @param  {object[]} segmentation An empty segmentation derived dataset.\n * @param  {Object|Object[]} inputLabelmaps3D The cornerstone `Labelmap3D` object, or an array of objects.\n * @param  {Object} userOptions Options object to override default options.\n * @returns {Blob}           description\n */\nfunction fillSegmentation(segmentation, inputLabelmaps3D) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n    includeSliceSpacing: true\n  };\n  var cornerstoneToolsVersion = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 4;\n  if (cornerstoneToolsVersion === 4) {\n    return Segmentation.fillSegmentation(segmentation, inputLabelmaps3D, options);\n  }\n  console.warn(\"No generateSegmentation adapter for cornerstone version \".concat(cornerstoneToolsVersion, \", exiting.\"));\n}\n\nexport { fillSegmentation, generateSegmentation, generateToolState };\n","import { asyncToGenerator as _asyncToGenerator, regeneratorRuntime as _regeneratorRuntime, toConsumableArray as _toConsumableArray } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport { data, normalizers, log } from 'dcmjs';\nimport checkOrientation from '../helpers/checkOrientation.js';\nimport compareArrays from '../helpers/compareArrays.js';\n\nvar DicomMessage = data.DicomMessage,\n  DicomMetaDictionary = data.DicomMetaDictionary;\nvar Normalizer = normalizers.Normalizer;\nfunction generateToolState(_x, _x2, _x3) {\n  return _generateToolState.apply(this, arguments);\n}\nfunction _generateToolState() {\n  _generateToolState = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(imageIds, arrayBuffer, metadataProvider) {\n    var tolerance,\n      dicomData,\n      dataset,\n      multiframe,\n      imagePlaneModule,\n      ImageOrientationPatient,\n      validOrientations,\n      pixelData,\n      orientation,\n      sopUIDImageIdIndexMap,\n      orientationText,\n      imageIdMaps,\n      _args = arguments;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          tolerance = _args.length > 3 && _args[3] !== undefined ? _args[3] : 1e-3;\n          dicomData = DicomMessage.readFile(arrayBuffer);\n          dataset = DicomMetaDictionary.naturalizeDataset(dicomData.dict);\n          dataset._meta = DicomMetaDictionary.namifyDataset(dicomData.meta);\n          multiframe = Normalizer.normalizeToDataset([dataset]);\n          imagePlaneModule = metadataProvider.get(\"imagePlaneModule\", imageIds[0]);\n          if (!imagePlaneModule) {\n            console.warn(\"Insufficient metadata, imagePlaneModule missing.\");\n          }\n          ImageOrientationPatient = Array.isArray(imagePlaneModule.rowCosines) ? [].concat(_toConsumableArray(imagePlaneModule.rowCosines), _toConsumableArray(imagePlaneModule.columnCosines)) : [imagePlaneModule.rowCosines.x, imagePlaneModule.rowCosines.y, imagePlaneModule.rowCosines.z, imagePlaneModule.columnCosines.x, imagePlaneModule.columnCosines.y, imagePlaneModule.columnCosines.z];\n          validOrientations = [ImageOrientationPatient];\n          pixelData = getPixelData(multiframe);\n          orientation = checkOrientation(multiframe, validOrientations, [imagePlaneModule.rows, imagePlaneModule.columns, imageIds.length], tolerance);\n          sopUIDImageIdIndexMap = imageIds.reduce(function (acc, imageId) {\n            var _metadataProvider$get = metadataProvider.get(\"generalImageModule\", imageId),\n              sopInstanceUID = _metadataProvider$get.sopInstanceUID;\n            acc[sopInstanceUID] = imageId;\n            return acc;\n          }, {});\n          if (!(orientation !== \"Planar\")) {\n            _context.next = 15;\n            break;\n          }\n          orientationText = {\n            Perpendicular: \"orthogonal\",\n            Oblique: \"oblique\"\n          };\n          throw new Error(\"Parametric maps \".concat(orientationText[orientation], \" to the acquisition plane of the source data are not yet supported.\"));\n        case 15:\n          imageIdMaps = imageIds.reduce(function (acc, curr, index) {\n            acc.indices[curr] = index;\n            acc.metadata[curr] = metadataProvider.get(\"instance\", curr);\n            return acc;\n          }, {\n            indices: {},\n            metadata: {}\n          });\n          _context.next = 18;\n          return insertPixelDataPlanar(pixelData, multiframe, imageIds, metadataProvider, tolerance, sopUIDImageIdIndexMap, imageIdMaps);\n        case 18:\n          return _context.abrupt(\"return\", {\n            pixelData: pixelData\n          });\n        case 19:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _generateToolState.apply(this, arguments);\n}\nfunction insertPixelDataPlanar(sourcePixelData, multiframe, imageIds, metadataProvider, tolerance, sopUIDImageIdIndexMap, imageIdMaps) {\n  var targetPixelData = new sourcePixelData.constructor(sourcePixelData.length);\n  var PerFrameFunctionalGroupsSequence = multiframe.PerFrameFunctionalGroupsSequence,\n    Rows = multiframe.Rows,\n    Columns = multiframe.Columns;\n  var sliceLength = Columns * Rows;\n  var numSlices = PerFrameFunctionalGroupsSequence.length;\n  for (var i = 0; i < numSlices; i++) {\n    var sourceSliceDataView = new sourcePixelData.constructor(sourcePixelData.buffer, i * sliceLength, sliceLength);\n    var imageId = findReferenceSourceImageId(multiframe, i, imageIds, metadataProvider, tolerance, sopUIDImageIdIndexMap);\n    if (!imageId) {\n      console.warn(\"Image not present in stack, can't import frame : \" + i + \".\");\n      continue;\n    }\n    var sourceImageMetadata = imageIdMaps.metadata[imageId];\n    if (Rows !== sourceImageMetadata.Rows || Columns !== sourceImageMetadata.Columns) {\n      throw new Error(\"Parametric map have different geometry dimensions (Rows and Columns) \" + \"respect to the source image reference frame. This is not yet supported.\");\n    }\n    var imageIdIndex = imageIdMaps.indices[imageId];\n    var byteOffset = sliceLength * imageIdIndex * targetPixelData.BYTES_PER_ELEMENT;\n    var targetSliceDataView = new targetPixelData.constructor(targetPixelData.buffer, byteOffset, sliceLength);\n    targetSliceDataView.set(sourceSliceDataView);\n  }\n  return targetPixelData;\n}\nfunction getPixelData(multiframe) {\n  var TypedArrayClass;\n  var data;\n  if (multiframe.PixelData) {\n    var _multiframe$PixelRepr;\n    var validTypedArrays = multiframe.BitsAllocated === 16 ? [Uint16Array, Int16Array] : [Uint32Array, Int32Array];\n    TypedArrayClass = validTypedArrays[(_multiframe$PixelRepr = multiframe.PixelRepresentation) !== null && _multiframe$PixelRepr !== void 0 ? _multiframe$PixelRepr : 0];\n    data = multiframe.PixelData;\n  } else if (multiframe.FloatPixelData) {\n    TypedArrayClass = Float32Array;\n    data = multiframe.FloatPixelData;\n  } else if (multiframe.DoubleFloatPixelData) {\n    TypedArrayClass = Float64Array;\n    data = multiframe.DoubleFloatPixelData;\n  }\n  if (data === undefined) {\n    log.error(\"This parametric map pixel data is undefined.\");\n  }\n  if (Array.isArray(data)) {\n    data = data[0];\n  }\n  return new TypedArrayClass(data);\n}\nfunction findReferenceSourceImageId(multiframe, frameSegment, imageIds, metadataProvider, tolerance, sopUIDImageIdIndexMap) {\n  var imageId = undefined;\n  if (!multiframe) {\n    return imageId;\n  }\n  var FrameOfReferenceUID = multiframe.FrameOfReferenceUID,\n    PerFrameFunctionalGroupsSequence = multiframe.PerFrameFunctionalGroupsSequence,\n    SourceImageSequence = multiframe.SourceImageSequence,\n    ReferencedSeriesSequence = multiframe.ReferencedSeriesSequence;\n  if (!PerFrameFunctionalGroupsSequence || PerFrameFunctionalGroupsSequence.length === 0) {\n    return imageId;\n  }\n  var PerFrameFunctionalGroup = PerFrameFunctionalGroupsSequence[frameSegment];\n  if (!PerFrameFunctionalGroup) {\n    return imageId;\n  }\n  var frameSourceImageSequence = undefined;\n  if (PerFrameFunctionalGroup.DerivationImageSequence) {\n    var DerivationImageSequence = PerFrameFunctionalGroup.DerivationImageSequence;\n    if (Array.isArray(DerivationImageSequence)) {\n      if (DerivationImageSequence.length !== 0) {\n        DerivationImageSequence = DerivationImageSequence[0];\n      } else {\n        DerivationImageSequence = undefined;\n      }\n    }\n    if (DerivationImageSequence) {\n      frameSourceImageSequence = DerivationImageSequence.SourceImageSequence;\n      if (Array.isArray(frameSourceImageSequence)) {\n        if (frameSourceImageSequence.length !== 0) {\n          frameSourceImageSequence = frameSourceImageSequence[0];\n        } else {\n          frameSourceImageSequence = undefined;\n        }\n      }\n    }\n  } else if (SourceImageSequence && SourceImageSequence.length !== 0) {\n    console.warn(\"DerivationImageSequence not present, using SourceImageSequence assuming SEG has the same geometry as the source image.\");\n    frameSourceImageSequence = SourceImageSequence[frameSegment];\n  }\n  if (frameSourceImageSequence) {\n    imageId = getImageIdOfSourceImageBySourceImageSequence(frameSourceImageSequence, sopUIDImageIdIndexMap);\n  }\n  if (imageId === undefined && ReferencedSeriesSequence) {\n    var referencedSeriesSequence = Array.isArray(ReferencedSeriesSequence) ? ReferencedSeriesSequence[0] : ReferencedSeriesSequence;\n    var ReferencedSeriesInstanceUID = referencedSeriesSequence.SeriesInstanceUID;\n    imageId = getImageIdOfSourceImagebyGeometry(ReferencedSeriesInstanceUID, FrameOfReferenceUID, PerFrameFunctionalGroup, imageIds, metadataProvider, tolerance);\n  }\n  return imageId;\n}\nfunction getImageIdOfSourceImageBySourceImageSequence(SourceImageSequence, sopUIDImageIdIndexMap) {\n  var ReferencedSOPInstanceUID = SourceImageSequence.ReferencedSOPInstanceUID,\n    ReferencedFrameNumber = SourceImageSequence.ReferencedFrameNumber;\n  return ReferencedFrameNumber ? getImageIdOfReferencedFrame(ReferencedSOPInstanceUID, ReferencedFrameNumber, sopUIDImageIdIndexMap) : sopUIDImageIdIndexMap[ReferencedSOPInstanceUID];\n}\nfunction getImageIdOfSourceImagebyGeometry(ReferencedSeriesInstanceUID, FrameOfReferenceUID, PerFrameFunctionalGroup, imageIds, metadataProvider, tolerance) {\n  if (ReferencedSeriesInstanceUID === undefined || PerFrameFunctionalGroup.PlanePositionSequence === undefined || PerFrameFunctionalGroup.PlanePositionSequence[0] === undefined || PerFrameFunctionalGroup.PlanePositionSequence[0].ImagePositionPatient === undefined) {\n    return undefined;\n  }\n  for (var imageIdsIndex = 0; imageIdsIndex < imageIds.length; ++imageIdsIndex) {\n    var sourceImageMetadata = metadataProvider.get(\"instance\", imageIds[imageIdsIndex]);\n    if (sourceImageMetadata === undefined || sourceImageMetadata.ImagePositionPatient === undefined || sourceImageMetadata.FrameOfReferenceUID !== FrameOfReferenceUID || sourceImageMetadata.SeriesInstanceUID !== ReferencedSeriesInstanceUID) {\n      continue;\n    }\n    if (compareArrays(PerFrameFunctionalGroup.PlanePositionSequence[0].ImagePositionPatient, sourceImageMetadata.ImagePositionPatient, tolerance)) {\n      return imageIds[imageIdsIndex];\n    }\n  }\n}\nfunction getImageIdOfReferencedFrame(sopInstanceUid, frameNumber, sopUIDImageIdIndexMap) {\n  var imageId = sopUIDImageIdIndexMap[sopInstanceUid];\n  if (!imageId) {\n    return;\n  }\n  var imageIdFrameNumber = Number(imageId.split(\"frame=\")[1]);\n  return imageIdFrameNumber === frameNumber - 1 ? imageId : undefined;\n}\nvar ParametricMapObj = {\n  generateToolState: generateToolState\n};\n\nexport { ParametricMapObj as ParametricMap, ParametricMapObj as default };\n","import { objectSpread2 as _objectSpread2, createClass as _createClass, classCallCheck as _classCallCheck } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport { utilities, derivations, normalizers, data } from 'dcmjs';\nimport CORNERSTONE_3D_TAG from './cornerstone3DTag.js';\nimport { toArray } from '../helpers/toArray.js';\nimport { codeMeaningEquals } from '../helpers/codeMeaningEquals.js';\nimport '../helpers/downloadDICOMData.js';\nimport CodingScheme from './CodingScheme.js';\n\nvar _MeasurementReport;\nvar TID1500 = utilities.TID1500,\n  addAccessors = utilities.addAccessors;\nvar StructuredReport = derivations.StructuredReport;\nvar Normalizer = normalizers.Normalizer;\nvar TID1500MeasurementReport = TID1500.TID1500MeasurementReport,\n  TID1501MeasurementGroup = TID1500.TID1501MeasurementGroup;\nvar DicomMetaDictionary = data.DicomMetaDictionary;\nvar FINDING = {\n  CodingSchemeDesignator: \"DCM\",\n  CodeValue: \"121071\"\n};\nvar FINDING_SITE = {\n  CodingSchemeDesignator: \"SCT\",\n  CodeValue: \"363698007\"\n};\nvar FINDING_SITE_OLD = {\n  CodingSchemeDesignator: \"SRT\",\n  CodeValue: \"G-C0E3\"\n};\nvar codeValueMatch = function codeValueMatch(group, code, oldCode) {\n  var ConceptNameCodeSequence = group.ConceptNameCodeSequence;\n  if (!ConceptNameCodeSequence) {\n    return;\n  }\n  var CodingSchemeDesignator = ConceptNameCodeSequence.CodingSchemeDesignator,\n    CodeValue = ConceptNameCodeSequence.CodeValue;\n  return CodingSchemeDesignator == code.CodingSchemeDesignator && CodeValue == code.CodeValue || oldCode && CodingSchemeDesignator == oldCode.CodingSchemeDesignator && CodeValue == oldCode.CodeValue;\n};\nfunction getTID300ContentItem(tool, toolType, ReferencedSOPSequence, toolClass, worldToImageCoords) {\n  var args = toolClass.getTID300RepresentationArguments(tool, worldToImageCoords);\n  args.ReferencedSOPSequence = ReferencedSOPSequence;\n  var TID300Measurement = new toolClass.TID300Representation(args);\n  return TID300Measurement;\n}\nfunction getMeasurementGroup(toolType, toolData, ReferencedSOPSequence, worldToImageCoords) {\n  var toolTypeData = toolData[toolType];\n  var toolClass = MeasurementReport.CORNERSTONE_TOOL_CLASSES_BY_TOOL_TYPE[toolType];\n  if (!toolTypeData || !toolTypeData.data || !toolTypeData.data.length || !toolClass) {\n    return;\n  }\n  var Measurements = toolTypeData.data.map(function (tool) {\n    return getTID300ContentItem(tool, toolType, ReferencedSOPSequence, toolClass, worldToImageCoords);\n  });\n  return new TID1501MeasurementGroup(Measurements);\n}\nvar MeasurementReport = /*#__PURE__*/function () {\n  function MeasurementReport() {\n    _classCallCheck(this, MeasurementReport);\n  }\n  return _createClass(MeasurementReport, null, [{\n    key: \"getCornerstoneLabelFromDefaultState\",\n    value: function getCornerstoneLabelFromDefaultState(defaultState) {\n      var _defaultState$finding = defaultState.findingSites,\n        findingSites = _defaultState$finding === void 0 ? [] : _defaultState$finding,\n        finding = defaultState.finding;\n      var cornersoneFreeTextCodingValue = CodingScheme.codeValues.CORNERSTONEFREETEXT;\n      var freeTextLabel = findingSites.find(function (fs) {\n        return fs.CodeValue === cornersoneFreeTextCodingValue;\n      });\n      if (freeTextLabel) {\n        return freeTextLabel.CodeMeaning;\n      }\n      if (finding && finding.CodeValue === cornersoneFreeTextCodingValue) {\n        return finding.CodeMeaning;\n      }\n    }\n  }, {\n    key: \"generateDatasetMeta\",\n    value: function generateDatasetMeta() {\n      var fileMetaInformationVersionArray = new Uint8Array(2);\n      fileMetaInformationVersionArray[1] = 1;\n      var _meta = {\n        FileMetaInformationVersion: {\n          Value: [fileMetaInformationVersionArray.buffer],\n          vr: \"OB\"\n        },\n        TransferSyntaxUID: {\n          Value: [\"1.2.840.10008.1.2.1\"],\n          vr: \"UI\"\n        },\n        ImplementationClassUID: {\n          Value: [DicomMetaDictionary.uid()],\n          vr: \"UI\"\n        },\n        ImplementationVersionName: {\n          Value: [\"dcmjs\"],\n          vr: \"SH\"\n        }\n      };\n      return _meta;\n    }\n  }, {\n    key: \"getSetupMeasurementData\",\n    value: function getSetupMeasurementData(MeasurementGroup, sopInstanceUIDToImageIdMap, metadata, toolType) {\n      var ContentSequence = MeasurementGroup.ContentSequence;\n      var contentSequenceArr = toArray(ContentSequence);\n      var findingGroup = contentSequenceArr.find(function (group) {\n        return codeValueMatch(group, FINDING);\n      });\n      var findingSiteGroups = contentSequenceArr.filter(function (group) {\n        return codeValueMatch(group, FINDING_SITE, FINDING_SITE_OLD);\n      }) || [];\n      var NUMGroup = contentSequenceArr.find(function (group) {\n        return group.ValueType === \"NUM\";\n      });\n      var SCOORDGroup = toArray(NUMGroup.ContentSequence).find(function (group) {\n        return group.ValueType === \"SCOORD\";\n      });\n      var ReferencedSOPSequence = SCOORDGroup.ContentSequence.ReferencedSOPSequence;\n      var ReferencedSOPInstanceUID = ReferencedSOPSequence.ReferencedSOPInstanceUID,\n        ReferencedFrameNumber = ReferencedSOPSequence.ReferencedFrameNumber;\n      var referencedImageId = sopInstanceUIDToImageIdMap[ReferencedSOPInstanceUID];\n      var imagePlaneModule = metadata.get(\"imagePlaneModule\", referencedImageId);\n      var finding = findingGroup ? addAccessors(findingGroup.ConceptCodeSequence) : undefined;\n      var findingSites = findingSiteGroups.map(function (fsg) {\n        return addAccessors(fsg.ConceptCodeSequence);\n      });\n      var defaultState = {\n        description: undefined,\n        sopInstanceUid: ReferencedSOPInstanceUID,\n        annotation: {\n          annotationUID: DicomMetaDictionary.uid(),\n          metadata: {\n            toolName: toolType,\n            referencedImageId: referencedImageId,\n            FrameOfReferenceUID: imagePlaneModule.frameOfReferenceUID,\n            label: \"\"\n          },\n          data: undefined\n        },\n        finding: finding,\n        findingSites: findingSites\n      };\n      if (defaultState.finding) {\n        defaultState.description = defaultState.finding.CodeMeaning;\n      }\n      defaultState.annotation.metadata.label = MeasurementReport.getCornerstoneLabelFromDefaultState(defaultState);\n      return {\n        defaultState: defaultState,\n        NUMGroup: NUMGroup,\n        SCOORDGroup: SCOORDGroup,\n        ReferencedSOPSequence: ReferencedSOPSequence,\n        ReferencedSOPInstanceUID: ReferencedSOPInstanceUID,\n        ReferencedFrameNumber: ReferencedFrameNumber\n      };\n    }\n  }, {\n    key: \"generateReport\",\n    value: function generateReport(toolState, metadataProvider, worldToImageCoords, options) {\n      var allMeasurementGroups = [];\n      var sopInstanceUIDsToSeriesInstanceUIDMap = {};\n      var derivationSourceDatasets = [];\n      var _meta = MeasurementReport.generateDatasetMeta();\n      Object.keys(toolState).forEach(function (imageId) {\n        var sopCommonModule = metadataProvider.get(\"sopCommonModule\", imageId);\n        var instance = metadataProvider.get(\"instance\", imageId);\n        var sopInstanceUID = sopCommonModule.sopInstanceUID,\n          sopClassUID = sopCommonModule.sopClassUID;\n        var seriesInstanceUID = instance.SeriesInstanceUID;\n        sopInstanceUIDsToSeriesInstanceUIDMap[sopInstanceUID] = seriesInstanceUID;\n        if (!derivationSourceDatasets.find(function (dsd) {\n          return dsd.SeriesInstanceUID === seriesInstanceUID;\n        })) {\n          var derivationSourceDataset = MeasurementReport.generateDerivationSourceDataset(instance);\n          derivationSourceDatasets.push(derivationSourceDataset);\n        }\n        var frameNumber = metadataProvider.get(\"frameNumber\", imageId);\n        var toolData = toolState[imageId];\n        var toolTypes = Object.keys(toolData);\n        var ReferencedSOPSequence = {\n          ReferencedSOPClassUID: sopClassUID,\n          ReferencedSOPInstanceUID: sopInstanceUID,\n          ReferencedFrameNumber: undefined\n        };\n        if (instance && instance.NumberOfFrames && instance.NumberOfFrames > 1 || Normalizer.isMultiframeSOPClassUID(sopClassUID)) {\n          ReferencedSOPSequence.ReferencedFrameNumber = frameNumber;\n        }\n        var measurementGroups = [];\n        toolTypes.forEach(function (toolType) {\n          var group = getMeasurementGroup(toolType, toolData, ReferencedSOPSequence, worldToImageCoords);\n          if (group) {\n            measurementGroups.push(group);\n          }\n        });\n        allMeasurementGroups = allMeasurementGroups.concat(measurementGroups);\n      });\n      var tid1500MeasurementReport = new TID1500MeasurementReport({\n        TID1501MeasurementGroups: allMeasurementGroups\n      }, options);\n      var report = new StructuredReport(derivationSourceDatasets, options);\n      var contentItem = tid1500MeasurementReport.contentItem(derivationSourceDatasets, _objectSpread2(_objectSpread2({}, options), {}, {\n        sopInstanceUIDsToSeriesInstanceUIDMap: sopInstanceUIDsToSeriesInstanceUIDMap\n      }));\n      report.dataset = Object.assign(report.dataset, contentItem);\n      report.dataset._meta = _meta;\n      report.SpecificCharacterSet = \"ISO_IR 192\";\n      return report;\n    }\n  }, {\n    key: \"generateToolState\",\n    value: function generateToolState(dataset, sopInstanceUIDToImageIdMap, imageToWorldCoords, metadata, hooks) {\n      if (dataset.ContentTemplateSequence.TemplateIdentifier !== \"1500\") {\n        throw new Error(\"This package can currently only interpret DICOM SR TID 1500\");\n      }\n      var REPORT = \"Imaging Measurements\";\n      var GROUP = \"Measurement Group\";\n      var TRACKING_IDENTIFIER = \"Tracking Identifier\";\n      var TRACKING_UNIQUE_IDENTIFIER = \"Tracking Unique Identifier\";\n      var imagingMeasurementContent = toArray(dataset.ContentSequence).find(codeMeaningEquals(REPORT));\n      var measurementGroups = toArray(imagingMeasurementContent.ContentSequence).filter(codeMeaningEquals(GROUP));\n      var measurementData = {};\n      var cornerstoneToolClasses = MeasurementReport.CORNERSTONE_TOOL_CLASSES_BY_UTILITY_TYPE;\n      var registeredToolClasses = [];\n      Object.keys(cornerstoneToolClasses).forEach(function (key) {\n        registeredToolClasses.push(cornerstoneToolClasses[key]);\n        measurementData[key] = [];\n      });\n      measurementGroups.forEach(function (measurementGroup) {\n        try {\n          var _hooks$getToolClass;\n          var measurementGroupContentSequence = toArray(measurementGroup.ContentSequence);\n          var TrackingIdentifierGroup = measurementGroupContentSequence.find(function (contentItem) {\n            return contentItem.ConceptNameCodeSequence.CodeMeaning === TRACKING_IDENTIFIER;\n          });\n          var TrackingIdentifierValue = TrackingIdentifierGroup.TextValue;\n          var TrackingUniqueIdentifierGroup = measurementGroupContentSequence.find(function (contentItem) {\n            return contentItem.ConceptNameCodeSequence.CodeMeaning === TRACKING_UNIQUE_IDENTIFIER;\n          });\n          var TrackingUniqueIdentifierValue = TrackingUniqueIdentifierGroup === null || TrackingUniqueIdentifierGroup === void 0 ? void 0 : TrackingUniqueIdentifierGroup.UID;\n          var toolClass = (hooks === null || hooks === void 0 || (_hooks$getToolClass = hooks.getToolClass) === null || _hooks$getToolClass === void 0 ? void 0 : _hooks$getToolClass.call(hooks, measurementGroup, dataset, registeredToolClasses)) || registeredToolClasses.find(function (tc) {\n            return tc.isValidCornerstoneTrackingIdentifier(TrackingIdentifierValue);\n          });\n          if (toolClass) {\n            var measurement = toolClass.getMeasurementData(measurementGroup, sopInstanceUIDToImageIdMap, imageToWorldCoords, metadata);\n            measurement.TrackingUniqueIdentifier = TrackingUniqueIdentifierValue;\n            console.log(\"=== \".concat(toolClass.toolType, \" ===\"));\n            console.log(measurement);\n            measurementData[toolClass.toolType].push(measurement);\n          }\n        } catch (e) {\n          console.warn(\"Unable to generate tool state for\", measurementGroup, e);\n        }\n      });\n      return measurementData;\n    }\n  }, {\n    key: \"registerTool\",\n    value: function registerTool(toolClass) {\n      MeasurementReport.CORNERSTONE_TOOL_CLASSES_BY_UTILITY_TYPE[toolClass.utilityToolType] = toolClass;\n      MeasurementReport.CORNERSTONE_TOOL_CLASSES_BY_TOOL_TYPE[toolClass.toolType] = toolClass;\n      MeasurementReport.MEASUREMENT_BY_TOOLTYPE[toolClass.toolType] = toolClass.utilityToolType;\n    }\n  }]);\n}();\n_MeasurementReport = MeasurementReport;\n_MeasurementReport.CORNERSTONE_3D_TAG = CORNERSTONE_3D_TAG;\n_MeasurementReport.MEASUREMENT_BY_TOOLTYPE = {};\n_MeasurementReport.CORNERSTONE_TOOL_CLASSES_BY_UTILITY_TYPE = {};\n_MeasurementReport.CORNERSTONE_TOOL_CLASSES_BY_TOOL_TYPE = {};\n_MeasurementReport.generateDerivationSourceDataset = function (instance) {\n  var _vrMap = {\n    PixelData: \"OW\"\n  };\n  var _meta = _MeasurementReport.generateDatasetMeta();\n  var derivationSourceDataset = _objectSpread2(_objectSpread2({}, instance), {}, {\n    _meta: _meta,\n    _vrMap: _vrMap\n  });\n  return derivationSourceDataset;\n};\n\nexport { MeasurementReport as default };\n","import MeasurementReport from './MeasurementReport.js';\nimport Length from './Length.js';\nimport FreehandRoi from './FreehandRoi.js';\nimport Bidirectional from './Bidirectional.js';\nimport EllipticalRoi from './EllipticalRoi.js';\nimport CircleRoi from './CircleRoi.js';\nimport ArrowAnnotate from './ArrowAnnotate.js';\nimport CobbAngle from './CobbAngle.js';\nimport Angle from './Angle.js';\nimport RectangleRoi from './RectangleRoi.js';\nimport * as Segmentation from './Segmentation.js';\nimport ParametricMapObj from './ParametricMap.js';\n\nvar CornerstoneSR = {\n  Length: Length,\n  FreehandRoi: FreehandRoi,\n  Bidirectional: Bidirectional,\n  EllipticalRoi: EllipticalRoi,\n  CircleRoi: CircleRoi,\n  ArrowAnnotate: ArrowAnnotate,\n  MeasurementReport: MeasurementReport,\n  CobbAngle: CobbAngle,\n  Angle: Angle,\n  RectangleRoi: RectangleRoi\n};\nvar CornerstoneSEG = {\n  Segmentation: Segmentation\n};\nvar CornerstonePMAP = {\n  ParametricMap: ParametricMapObj\n};\n\nexport { CornerstonePMAP, CornerstoneSEG, CornerstoneSR };\n","var CORNERSTONE_3D_TAG = \"Cornerstone3DTools@^0.1.0\";\n\nexport { CORNERSTONE_3D_TAG as default };\n","// This is a custom coding scheme defined to store some annotations from Cornerstone.\n// Note: CodeMeaning is VR type LO, which means we only actually support 64 characters\n// here this is fine for most labels, but may be problematic at some point.\nvar CORNERSTONEFREETEXT = \"CORNERSTONEFREETEXT\";\n\n// Cornerstone specified coding scheme for storing findings\nvar CodingSchemeDesignator = \"CORNERSTONEJS\";\nvar CodingScheme = {\n  CodingSchemeDesignator: CodingSchemeDesignator,\n  codeValues: {\n    CORNERSTONEFREETEXT: CORNERSTONEFREETEXT\n  }\n};\n\nexport { CodingScheme as default };\n","import { slicedToArray as _slicedToArray, createClass as _createClass, classCallCheck as _classCallCheck } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport MeasurementReport from './MeasurementReport.js';\nimport { utilities } from 'dcmjs';\nimport CORNERSTONE_3D_TAG from './cornerstone3DTag.js';\nimport CodingScheme from './CodingScheme.js';\n\nvar TID300Point = utilities.TID300.Point;\nvar ARROW_ANNOTATE = \"ArrowAnnotate\";\nvar trackingIdentifierTextValue = \"\".concat(CORNERSTONE_3D_TAG, \":\").concat(ARROW_ANNOTATE);\nvar codeValues = CodingScheme.codeValues,\n  CodingSchemeDesignator = CodingScheme.CodingSchemeDesignator;\nvar ArrowAnnotate = /*#__PURE__*/function () {\n  function ArrowAnnotate() {\n    _classCallCheck(this, ArrowAnnotate);\n  }\n  return _createClass(ArrowAnnotate, null, [{\n    key: \"getMeasurementData\",\n    value: function getMeasurementData(MeasurementGroup, sopInstanceUIDToImageIdMap, imageToWorldCoords, metadata) {\n      var _MeasurementReport$ge = MeasurementReport.getSetupMeasurementData(MeasurementGroup, sopInstanceUIDToImageIdMap, metadata, ArrowAnnotate.toolType),\n        defaultState = _MeasurementReport$ge.defaultState,\n        SCOORDGroup = _MeasurementReport$ge.SCOORDGroup,\n        ReferencedFrameNumber = _MeasurementReport$ge.ReferencedFrameNumber;\n      var referencedImageId = defaultState.annotation.metadata.referencedImageId;\n      var text = defaultState.annotation.metadata.label;\n      var GraphicData = SCOORDGroup.GraphicData;\n      var worldCoords = [];\n      for (var i = 0; i < GraphicData.length; i += 2) {\n        var point = imageToWorldCoords(referencedImageId, [GraphicData[i], GraphicData[i + 1]]);\n        worldCoords.push(point);\n      }\n\n      // Since the arrowAnnotate measurement is just a point, to generate the tool state\n      // we derive the second point based on the image size relative to the first point.\n      if (worldCoords.length === 1) {\n        var imagePixelModule = metadata.get(\"imagePixelModule\", referencedImageId);\n        var xOffset = 10;\n        var yOffset = 10;\n        if (imagePixelModule) {\n          var columns = imagePixelModule.columns,\n            rows = imagePixelModule.rows;\n          xOffset = columns / 10;\n          yOffset = rows / 10;\n        }\n        var secondPoint = imageToWorldCoords(referencedImageId, [GraphicData[0] + xOffset, GraphicData[1] + yOffset]);\n        worldCoords.push(secondPoint);\n      }\n      var state = defaultState;\n      state.annotation.data = {\n        text: text,\n        handles: {\n          arrowFirst: true,\n          points: [worldCoords[0], worldCoords[1]],\n          activeHandleIndex: 0,\n          textBox: {\n            hasMoved: false\n          }\n        },\n        frameNumber: ReferencedFrameNumber\n      };\n      return state;\n    }\n  }, {\n    key: \"getTID300RepresentationArguments\",\n    value: function getTID300RepresentationArguments(tool, worldToImageCoords) {\n      var data = tool.data,\n        metadata = tool.metadata;\n      var finding = tool.finding,\n        findingSites = tool.findingSites;\n      var referencedImageId = metadata.referencedImageId;\n      if (!referencedImageId) {\n        throw new Error(\"ArrowAnnotate.getTID300RepresentationArguments: referencedImageId is not defined\");\n      }\n      var _data$handles = data.handles,\n        points = _data$handles.points,\n        arrowFirst = _data$handles.arrowFirst;\n      var point;\n      var point2;\n      if (arrowFirst) {\n        point = points[0];\n        point2 = points[1];\n      } else {\n        point = points[1];\n        point2 = points[0];\n      }\n      var pointImage = worldToImageCoords(referencedImageId, point);\n      var pointImage2 = worldToImageCoords(referencedImageId, point2);\n      var TID300RepresentationArguments = {\n        points: [{\n          x: pointImage[0],\n          y: pointImage[1]\n        }, {\n          x: pointImage2[0],\n          y: pointImage2[1]\n        }],\n        trackingIdentifierTextValue: trackingIdentifierTextValue,\n        findingSites: findingSites || []\n      };\n\n      // If freetext finding isn't present, add it from the tool text.\n      if (!finding || finding.CodeValue !== codeValues.CORNERSTONEFREETEXT) {\n        finding = {\n          CodeValue: codeValues.CORNERSTONEFREETEXT,\n          CodingSchemeDesignator: CodingSchemeDesignator,\n          CodeMeaning: data.text\n        };\n      }\n      TID300RepresentationArguments.finding = finding;\n      return TID300RepresentationArguments;\n    }\n  }]);\n}();\nArrowAnnotate.toolType = ARROW_ANNOTATE;\nArrowAnnotate.utilityToolType = ARROW_ANNOTATE;\nArrowAnnotate.TID300Representation = TID300Point;\nArrowAnnotate.isValidCornerstoneTrackingIdentifier = function (TrackingIdentifier) {\n  if (!TrackingIdentifier.includes(\":\")) {\n    return false;\n  }\n  var _TrackingIdentifier$s = TrackingIdentifier.split(\":\"),\n    _TrackingIdentifier$s2 = _slicedToArray(_TrackingIdentifier$s, 2),\n    cornerstone3DTag = _TrackingIdentifier$s2[0],\n    toolType = _TrackingIdentifier$s2[1];\n  if (cornerstone3DTag !== CORNERSTONE_3D_TAG) {\n    return false;\n  }\n  return toolType === ARROW_ANNOTATE;\n};\nMeasurementReport.registerTool(ArrowAnnotate);\n\nexport { ArrowAnnotate as default };\n","import { slicedToArray as _slicedToArray, createClass as _createClass, defineProperty as _defineProperty, classCallCheck as _classCallCheck } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport { utilities } from 'dcmjs';\nimport CORNERSTONE_3D_TAG from './cornerstone3DTag.js';\nimport MeasurementReport from './MeasurementReport.js';\nimport { toArray } from '../helpers/toArray.js';\nimport '../helpers/downloadDICOMData.js';\n\nvar _Bidirectional;\nvar TID300Bidirectional = utilities.TID300.Bidirectional;\nvar BIDIRECTIONAL = \"Bidirectional\";\nvar LONG_AXIS = \"Long Axis\";\nvar SHORT_AXIS = \"Short Axis\";\nvar trackingIdentifierTextValue = \"\".concat(CORNERSTONE_3D_TAG, \":\").concat(BIDIRECTIONAL);\nvar Bidirectional = /*#__PURE__*/function () {\n  function Bidirectional() {\n    _classCallCheck(this, Bidirectional);\n  }\n  return _createClass(Bidirectional, null, [{\n    key: \"getMeasurementData\",\n    value: function getMeasurementData(MeasurementGroup, sopInstanceUIDToImageIdMap, imageToWorldCoords, metadata) {\n      var _MeasurementReport$ge = MeasurementReport.getSetupMeasurementData(MeasurementGroup, sopInstanceUIDToImageIdMap, metadata, Bidirectional.toolType),\n        defaultState = _MeasurementReport$ge.defaultState,\n        ReferencedFrameNumber = _MeasurementReport$ge.ReferencedFrameNumber;\n      var referencedImageId = defaultState.annotation.metadata.referencedImageId;\n      var ContentSequence = MeasurementGroup.ContentSequence;\n      var longAxisNUMGroup = toArray(ContentSequence).find(function (group) {\n        return group.ConceptNameCodeSequence.CodeMeaning === LONG_AXIS;\n      });\n      var longAxisSCOORDGroup = toArray(longAxisNUMGroup.ContentSequence).find(function (group) {\n        return group.ValueType === \"SCOORD\";\n      });\n      var shortAxisNUMGroup = toArray(ContentSequence).find(function (group) {\n        return group.ConceptNameCodeSequence.CodeMeaning === SHORT_AXIS;\n      });\n      var shortAxisSCOORDGroup = toArray(shortAxisNUMGroup.ContentSequence).find(function (group) {\n        return group.ValueType === \"SCOORD\";\n      });\n      var worldCoords = [];\n      [longAxisSCOORDGroup, shortAxisSCOORDGroup].forEach(function (group) {\n        var GraphicData = group.GraphicData;\n        for (var i = 0; i < GraphicData.length; i += 2) {\n          var point = imageToWorldCoords(referencedImageId, [GraphicData[i], GraphicData[i + 1]]);\n          worldCoords.push(point);\n        }\n      });\n      var state = defaultState;\n      state.annotation.data = {\n        handles: {\n          points: [worldCoords[0], worldCoords[1], worldCoords[2], worldCoords[3]],\n          activeHandleIndex: 0,\n          textBox: {\n            hasMoved: false\n          }\n        },\n        cachedStats: _defineProperty({}, \"imageId:\".concat(referencedImageId), {\n          length: longAxisNUMGroup.MeasuredValueSequence.NumericValue,\n          width: shortAxisNUMGroup.MeasuredValueSequence.NumericValue\n        }),\n        frameNumber: ReferencedFrameNumber\n      };\n      return state;\n    }\n  }, {\n    key: \"getTID300RepresentationArguments\",\n    value: function getTID300RepresentationArguments(tool, worldToImageCoords) {\n      var data = tool.data,\n        finding = tool.finding,\n        findingSites = tool.findingSites,\n        metadata = tool.metadata;\n      var _data$cachedStats = data.cachedStats,\n        cachedStats = _data$cachedStats === void 0 ? {} : _data$cachedStats,\n        handles = data.handles;\n      var referencedImageId = metadata.referencedImageId;\n      if (!referencedImageId) {\n        throw new Error(\"Bidirectional.getTID300RepresentationArguments: referencedImageId is not defined\");\n      }\n      var _ref = cachedStats[\"imageId:\".concat(referencedImageId)] || {},\n        length = _ref.length,\n        width = _ref.width;\n      var points = handles.points;\n      var firstPointPairs = [points[0], points[1]];\n      var secondPointPairs = [points[2], points[3]];\n      var firstPointPairsDistance = Math.sqrt(Math.pow(firstPointPairs[0][0] - firstPointPairs[1][0], 2) + Math.pow(firstPointPairs[0][1] - firstPointPairs[1][1], 2) + Math.pow(firstPointPairs[0][2] - firstPointPairs[1][2], 2));\n      var secondPointPairsDistance = Math.sqrt(Math.pow(secondPointPairs[0][0] - secondPointPairs[1][0], 2) + Math.pow(secondPointPairs[0][1] - secondPointPairs[1][1], 2) + Math.pow(secondPointPairs[0][2] - secondPointPairs[1][2], 2));\n      var shortAxisPoints;\n      var longAxisPoints;\n      if (firstPointPairsDistance > secondPointPairsDistance) {\n        shortAxisPoints = firstPointPairs;\n        longAxisPoints = secondPointPairs;\n      } else {\n        shortAxisPoints = secondPointPairs;\n        longAxisPoints = firstPointPairs;\n      }\n      var longAxisStartImage = worldToImageCoords(referencedImageId, shortAxisPoints[0]);\n      var longAxisEndImage = worldToImageCoords(referencedImageId, shortAxisPoints[1]);\n      var shortAxisStartImage = worldToImageCoords(referencedImageId, longAxisPoints[0]);\n      var shortAxisEndImage = worldToImageCoords(referencedImageId, longAxisPoints[1]);\n      return {\n        longAxis: {\n          point1: {\n            x: longAxisStartImage[0],\n            y: longAxisStartImage[1]\n          },\n          point2: {\n            x: longAxisEndImage[0],\n            y: longAxisEndImage[1]\n          }\n        },\n        shortAxis: {\n          point1: {\n            x: shortAxisStartImage[0],\n            y: shortAxisStartImage[1]\n          },\n          point2: {\n            x: shortAxisEndImage[0],\n            y: shortAxisEndImage[1]\n          }\n        },\n        longAxisLength: length,\n        shortAxisLength: width,\n        trackingIdentifierTextValue: trackingIdentifierTextValue,\n        finding: finding,\n        findingSites: findingSites || []\n      };\n    }\n  }]);\n}();\n_Bidirectional = Bidirectional;\n_Bidirectional.toolType = BIDIRECTIONAL;\n_Bidirectional.utilityToolType = BIDIRECTIONAL;\n_Bidirectional.TID300Representation = TID300Bidirectional;\n_Bidirectional.isValidCornerstoneTrackingIdentifier = function (TrackingIdentifier) {\n  if (!TrackingIdentifier.includes(\":\")) {\n    return false;\n  }\n  var _TrackingIdentifier$s = TrackingIdentifier.split(\":\"),\n    _TrackingIdentifier$s2 = _slicedToArray(_TrackingIdentifier$s, 2),\n    cornerstone3DTag = _TrackingIdentifier$s2[0],\n    toolType = _TrackingIdentifier$s2[1];\n  if (cornerstone3DTag !== CORNERSTONE_3D_TAG) {\n    return false;\n  }\n  return toolType === BIDIRECTIONAL;\n};\nMeasurementReport.registerTool(Bidirectional);\n\nexport { Bidirectional as default };\n","import { slicedToArray as _slicedToArray, createClass as _createClass, defineProperty as _defineProperty, classCallCheck as _classCallCheck } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport { utilities } from 'dcmjs';\nimport CORNERSTONE_3D_TAG from './cornerstone3DTag.js';\nimport MeasurementReport from './MeasurementReport.js';\n\nvar _Angle;\nvar TID300CobbAngle = utilities.TID300.CobbAngle;\nvar MEASUREMENT_TYPE = \"Angle\";\nvar trackingIdentifierTextValue = \"\".concat(CORNERSTONE_3D_TAG, \":\").concat(MEASUREMENT_TYPE);\nvar Angle = /*#__PURE__*/function () {\n  function Angle() {\n    _classCallCheck(this, Angle);\n  }\n  return _createClass(Angle, null, [{\n    key: \"getMeasurementData\",\n    value: function getMeasurementData(MeasurementGroup, sopInstanceUIDToImageIdMap, imageToWorldCoords, metadata) {\n      var _MeasurementReport$ge = MeasurementReport.getSetupMeasurementData(MeasurementGroup, sopInstanceUIDToImageIdMap, metadata, Angle.toolType),\n        defaultState = _MeasurementReport$ge.defaultState,\n        NUMGroup = _MeasurementReport$ge.NUMGroup,\n        SCOORDGroup = _MeasurementReport$ge.SCOORDGroup,\n        ReferencedFrameNumber = _MeasurementReport$ge.ReferencedFrameNumber;\n      var referencedImageId = defaultState.annotation.metadata.referencedImageId;\n      var GraphicData = SCOORDGroup.GraphicData;\n      var worldCoords = [];\n      for (var i = 0; i < GraphicData.length; i += 2) {\n        var point = imageToWorldCoords(referencedImageId, [GraphicData[i], GraphicData[i + 1]]);\n        worldCoords.push(point);\n      }\n      var state = defaultState;\n      state.annotation.data = {\n        handles: {\n          points: [worldCoords[0], worldCoords[1], worldCoords[3]],\n          activeHandleIndex: 0,\n          textBox: {\n            hasMoved: false\n          }\n        },\n        cachedStats: _defineProperty({}, \"imageId:\".concat(referencedImageId), {\n          angle: NUMGroup ? NUMGroup.MeasuredValueSequence.NumericValue : null\n        }),\n        frameNumber: ReferencedFrameNumber\n      };\n      return state;\n    }\n  }, {\n    key: \"getTID300RepresentationArguments\",\n    value: function getTID300RepresentationArguments(tool, worldToImageCoords) {\n      var data = tool.data,\n        finding = tool.finding,\n        findingSites = tool.findingSites,\n        metadata = tool.metadata;\n      var _data$cachedStats = data.cachedStats,\n        cachedStats = _data$cachedStats === void 0 ? {} : _data$cachedStats,\n        handles = data.handles;\n      var referencedImageId = metadata.referencedImageId;\n      if (!referencedImageId) {\n        throw new Error(\"Angle.getTID300RepresentationArguments: referencedImageId is not defined\");\n      }\n      var start1 = worldToImageCoords(referencedImageId, handles.points[0]);\n      var middle = worldToImageCoords(referencedImageId, handles.points[1]);\n      var end = worldToImageCoords(referencedImageId, handles.points[2]);\n      var point1 = {\n        x: start1[0],\n        y: start1[1]\n      };\n      var point2 = {\n        x: middle[0],\n        y: middle[1]\n      };\n      var point3 = point2;\n      var point4 = {\n        x: end[0],\n        y: end[1]\n      };\n      var _ref = cachedStats[\"imageId:\".concat(referencedImageId)] || {},\n        angle = _ref.angle;\n      return {\n        point1: point1,\n        point2: point2,\n        point3: point3,\n        point4: point4,\n        rAngle: angle,\n        trackingIdentifierTextValue: trackingIdentifierTextValue,\n        finding: finding,\n        findingSites: findingSites || []\n      };\n    }\n  }]);\n}();\n_Angle = Angle;\n_Angle.toolType = MEASUREMENT_TYPE;\n_Angle.utilityToolType = MEASUREMENT_TYPE;\n_Angle.TID300Representation = TID300CobbAngle;\n_Angle.isValidCornerstoneTrackingIdentifier = function (TrackingIdentifier) {\n  if (!TrackingIdentifier.includes(\":\")) {\n    return false;\n  }\n  var _TrackingIdentifier$s = TrackingIdentifier.split(\":\"),\n    _TrackingIdentifier$s2 = _slicedToArray(_TrackingIdentifier$s, 2),\n    cornerstone3DTag = _TrackingIdentifier$s2[0],\n    toolType = _TrackingIdentifier$s2[1];\n  if (cornerstone3DTag !== CORNERSTONE_3D_TAG) {\n    return false;\n  }\n  return toolType === MEASUREMENT_TYPE;\n};\nMeasurementReport.registerTool(Angle);\n\nexport { Angle as default };\n","import { slicedToArray as _slicedToArray, createClass as _createClass, defineProperty as _defineProperty, classCallCheck as _classCallCheck } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport { utilities } from 'dcmjs';\nimport CORNERSTONE_3D_TAG from './cornerstone3DTag.js';\nimport MeasurementReport from './MeasurementReport.js';\n\nvar _CobbAngle;\nvar TID300CobbAngle = utilities.TID300.CobbAngle;\nvar MEASUREMENT_TYPE = \"CobbAngle\";\nvar trackingIdentifierTextValue = \"\".concat(CORNERSTONE_3D_TAG, \":\").concat(MEASUREMENT_TYPE);\nvar CobbAngle = /*#__PURE__*/function () {\n  function CobbAngle() {\n    _classCallCheck(this, CobbAngle);\n  }\n  return _createClass(CobbAngle, null, [{\n    key: \"getMeasurementData\",\n    value: function getMeasurementData(MeasurementGroup, sopInstanceUIDToImageIdMap, imageToWorldCoords, metadata) {\n      var _MeasurementReport$ge = MeasurementReport.getSetupMeasurementData(MeasurementGroup, sopInstanceUIDToImageIdMap, metadata, CobbAngle.toolType),\n        defaultState = _MeasurementReport$ge.defaultState,\n        NUMGroup = _MeasurementReport$ge.NUMGroup,\n        SCOORDGroup = _MeasurementReport$ge.SCOORDGroup,\n        ReferencedFrameNumber = _MeasurementReport$ge.ReferencedFrameNumber;\n      var referencedImageId = defaultState.annotation.metadata.referencedImageId;\n      var GraphicData = SCOORDGroup.GraphicData;\n      var worldCoords = [];\n      for (var i = 0; i < GraphicData.length; i += 2) {\n        var point = imageToWorldCoords(referencedImageId, [GraphicData[i], GraphicData[i + 1]]);\n        worldCoords.push(point);\n      }\n      var state = defaultState;\n      state.annotation.data = {\n        handles: {\n          points: [worldCoords[0], worldCoords[1], worldCoords[2], worldCoords[3]],\n          activeHandleIndex: 0,\n          textBox: {\n            hasMoved: false\n          }\n        },\n        cachedStats: _defineProperty({}, \"imageId:\".concat(referencedImageId), {\n          angle: NUMGroup ? NUMGroup.MeasuredValueSequence.NumericValue : null\n        }),\n        frameNumber: ReferencedFrameNumber\n      };\n      return state;\n    }\n  }, {\n    key: \"getTID300RepresentationArguments\",\n    value: function getTID300RepresentationArguments(tool, worldToImageCoords) {\n      var data = tool.data,\n        finding = tool.finding,\n        findingSites = tool.findingSites,\n        metadata = tool.metadata;\n      var _data$cachedStats = data.cachedStats,\n        cachedStats = _data$cachedStats === void 0 ? {} : _data$cachedStats,\n        handles = data.handles;\n      var referencedImageId = metadata.referencedImageId;\n      if (!referencedImageId) {\n        throw new Error(\"CobbAngle.getTID300RepresentationArguments: referencedImageId is not defined\");\n      }\n      var start1 = worldToImageCoords(referencedImageId, handles.points[0]);\n      var end1 = worldToImageCoords(referencedImageId, handles.points[1]);\n      var start2 = worldToImageCoords(referencedImageId, handles.points[2]);\n      var end2 = worldToImageCoords(referencedImageId, handles.points[3]);\n      var point1 = {\n        x: start1[0],\n        y: start1[1]\n      };\n      var point2 = {\n        x: end1[0],\n        y: end1[1]\n      };\n      var point3 = {\n        x: start2[0],\n        y: start2[1]\n      };\n      var point4 = {\n        x: end2[0],\n        y: end2[1]\n      };\n      var _ref = cachedStats[\"imageId:\".concat(referencedImageId)] || {},\n        angle = _ref.angle;\n      return {\n        point1: point1,\n        point2: point2,\n        point3: point3,\n        point4: point4,\n        rAngle: angle,\n        trackingIdentifierTextValue: trackingIdentifierTextValue,\n        finding: finding,\n        findingSites: findingSites || []\n      };\n    }\n  }]);\n}();\n_CobbAngle = CobbAngle;\n_CobbAngle.toolType = MEASUREMENT_TYPE;\n_CobbAngle.utilityToolType = MEASUREMENT_TYPE;\n_CobbAngle.TID300Representation = TID300CobbAngle;\n_CobbAngle.isValidCornerstoneTrackingIdentifier = function (TrackingIdentifier) {\n  if (!TrackingIdentifier.includes(\":\")) {\n    return false;\n  }\n  var _TrackingIdentifier$s = TrackingIdentifier.split(\":\"),\n    _TrackingIdentifier$s2 = _slicedToArray(_TrackingIdentifier$s, 2),\n    cornerstone3DTag = _TrackingIdentifier$s2[0],\n    toolType = _TrackingIdentifier$s2[1];\n  if (cornerstone3DTag !== CORNERSTONE_3D_TAG) {\n    return false;\n  }\n  return toolType === MEASUREMENT_TYPE;\n};\nMeasurementReport.registerTool(CobbAngle);\n\nexport { CobbAngle as default };\n","import { createClass as _createClass, defineProperty as _defineProperty, classCallCheck as _classCallCheck } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport { utilities } from 'dcmjs';\nimport MeasurementReport from './MeasurementReport.js';\nimport CORNERSTONE_3D_TAG from './cornerstone3DTag.js';\nimport isValidCornerstoneTrackingIdentifier from './isValidCornerstoneTrackingIdentifier.js';\n\nvar _CircleROI;\nvar TID300Circle = utilities.TID300.Circle;\nvar CIRCLEROI = \"CircleROI\";\nvar CircleROI = /*#__PURE__*/function () {\n  function CircleROI() {\n    _classCallCheck(this, CircleROI);\n  }\n  return _createClass(CircleROI, null, [{\n    key: \"getMeasurementData\",\n    value: function getMeasurementData(MeasurementGroup, sopInstanceUIDToImageIdMap, imageToWorldCoords, metadata) {\n      var _MeasurementReport$ge = MeasurementReport.getSetupMeasurementData(MeasurementGroup, sopInstanceUIDToImageIdMap, metadata, CircleROI.toolType),\n        defaultState = _MeasurementReport$ge.defaultState,\n        NUMGroup = _MeasurementReport$ge.NUMGroup,\n        SCOORDGroup = _MeasurementReport$ge.SCOORDGroup,\n        ReferencedFrameNumber = _MeasurementReport$ge.ReferencedFrameNumber;\n      var referencedImageId = defaultState.annotation.metadata.referencedImageId;\n      var GraphicData = SCOORDGroup.GraphicData;\n      var pointsWorld = [];\n      for (var i = 0; i < GraphicData.length; i += 2) {\n        var worldPos = imageToWorldCoords(referencedImageId, [GraphicData[i], GraphicData[i + 1]]);\n        pointsWorld.push(worldPos);\n      }\n      var state = defaultState;\n      state.annotation.data = {\n        handles: {\n          points: [].concat(pointsWorld),\n          activeHandleIndex: 0,\n          textBox: {\n            hasMoved: false\n          }\n        },\n        cachedStats: _defineProperty({}, \"imageId:\".concat(referencedImageId), {\n          area: NUMGroup ? NUMGroup.MeasuredValueSequence.NumericValue : 0,\n          radius: 0,\n          perimeter: 0\n        }),\n        frameNumber: ReferencedFrameNumber\n      };\n      return state;\n    }\n  }, {\n    key: \"getTID300RepresentationArguments\",\n    value: function getTID300RepresentationArguments(tool, worldToImageCoords) {\n      var data = tool.data,\n        finding = tool.finding,\n        findingSites = tool.findingSites,\n        metadata = tool.metadata;\n      var _data$cachedStats = data.cachedStats,\n        cachedStats = _data$cachedStats === void 0 ? {} : _data$cachedStats,\n        handles = data.handles;\n      var referencedImageId = metadata.referencedImageId;\n      if (!referencedImageId) {\n        throw new Error(\"CircleROI.getTID300RepresentationArguments: referencedImageId is not defined\");\n      }\n      var center = worldToImageCoords(referencedImageId, handles.points[0]);\n      var end = worldToImageCoords(referencedImageId, handles.points[1]);\n      var points = [];\n      points.push({\n        x: center[0],\n        y: center[1]\n      });\n      points.push({\n        x: end[0],\n        y: end[1]\n      });\n      var _ref = cachedStats[\"imageId:\".concat(referencedImageId)] || {},\n        area = _ref.area,\n        radius = _ref.radius;\n      var perimeter = 2 * Math.PI * radius;\n      return {\n        area: area,\n        perimeter: perimeter,\n        radius: radius,\n        points: points,\n        trackingIdentifierTextValue: this.trackingIdentifierTextValue,\n        finding: finding,\n        findingSites: findingSites || []\n      };\n    }\n  }]);\n}();\n_CircleROI = CircleROI;\n_CircleROI.trackingIdentifierTextValue = \"\".concat(CORNERSTONE_3D_TAG, \":\").concat(CIRCLEROI);\n_CircleROI.toolType = CIRCLEROI;\n_CircleROI.utilityToolType = CIRCLEROI;\n_CircleROI.TID300Representation = TID300Circle;\n_CircleROI.isValidCornerstoneTrackingIdentifier = isValidCornerstoneTrackingIdentifier;\nMeasurementReport.registerTool(CircleROI);\n\nexport { CircleROI as default };\n","import { slicedToArray as _slicedToArray } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport CORNERSTONE_3D_TAG from './cornerstone3DTag.js';\n\nfunction isValidCornerstoneTrackingIdentifier(trackingIdentifier) {\n  if (!trackingIdentifier.includes(\":\")) {\n    return false;\n  }\n  var _trackingIdentifier$s = trackingIdentifier.split(\":\"),\n    _trackingIdentifier$s2 = _slicedToArray(_trackingIdentifier$s, 2),\n    cornerstone3DTag = _trackingIdentifier$s2[0],\n    toolType = _trackingIdentifier$s2[1];\n  if (cornerstone3DTag !== CORNERSTONE_3D_TAG) {\n    return false;\n  }\n  return toolType.toLowerCase() === this.toolType.toLowerCase();\n}\n\nexport { isValidCornerstoneTrackingIdentifier as default };\n","import { createClass as _createClass, toConsumableArray as _toConsumableArray, defineProperty as _defineProperty, classCallCheck as _classCallCheck } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport { vec3 } from 'gl-matrix';\nimport { utilities } from 'dcmjs';\nimport CORNERSTONE_3D_TAG from './cornerstone3DTag.js';\nimport MeasurementReport from './MeasurementReport.js';\nimport isValidCornerstoneTrackingIdentifier from './isValidCornerstoneTrackingIdentifier.js';\n\nvar _EllipticalROI;\nvar TID300Ellipse = utilities.TID300.Ellipse;\nvar ELLIPTICALROI = \"EllipticalROI\";\nvar EPSILON = 1e-4;\nvar EllipticalROI = /*#__PURE__*/function () {\n  function EllipticalROI() {\n    _classCallCheck(this, EllipticalROI);\n  }\n  return _createClass(EllipticalROI, null, [{\n    key: \"getMeasurementData\",\n    value: function getMeasurementData(MeasurementGroup, sopInstanceUIDToImageIdMap, imageToWorldCoords, metadata) {\n      var _MeasurementReport$ge = MeasurementReport.getSetupMeasurementData(MeasurementGroup, sopInstanceUIDToImageIdMap, metadata, EllipticalROI.toolType),\n        defaultState = _MeasurementReport$ge.defaultState,\n        NUMGroup = _MeasurementReport$ge.NUMGroup,\n        SCOORDGroup = _MeasurementReport$ge.SCOORDGroup,\n        ReferencedFrameNumber = _MeasurementReport$ge.ReferencedFrameNumber;\n      var referencedImageId = defaultState.annotation.metadata.referencedImageId;\n      var GraphicData = SCOORDGroup.GraphicData;\n      var pointsWorld = [];\n      for (var i = 0; i < GraphicData.length; i += 2) {\n        var worldPos = imageToWorldCoords(referencedImageId, [GraphicData[i], GraphicData[i + 1]]);\n        pointsWorld.push(worldPos);\n      }\n      var majorAxisStart = vec3.fromValues.apply(vec3, _toConsumableArray(pointsWorld[0]));\n      var majorAxisEnd = vec3.fromValues.apply(vec3, _toConsumableArray(pointsWorld[1]));\n      var minorAxisStart = vec3.fromValues.apply(vec3, _toConsumableArray(pointsWorld[2]));\n      var minorAxisEnd = vec3.fromValues.apply(vec3, _toConsumableArray(pointsWorld[3]));\n      var majorAxisVec = vec3.create();\n      vec3.sub(majorAxisVec, majorAxisEnd, majorAxisStart);\n      vec3.normalize(majorAxisVec, majorAxisVec);\n      var minorAxisVec = vec3.create();\n      vec3.sub(minorAxisVec, minorAxisEnd, minorAxisStart);\n      vec3.normalize(minorAxisVec, minorAxisVec);\n      var imagePlaneModule = metadata.get(\"imagePlaneModule\", referencedImageId);\n      if (!imagePlaneModule) {\n        throw new Error(\"imageId does not have imagePlaneModule metadata\");\n      }\n      var columnCosines = imagePlaneModule.columnCosines;\n      var columnCosinesVec = vec3.fromValues(columnCosines[0], columnCosines[1], columnCosines[2]);\n      var projectedMajorAxisOnColVec = vec3.dot(columnCosinesVec, majorAxisVec);\n      var projectedMinorAxisOnColVec = vec3.dot(columnCosinesVec, minorAxisVec);\n      var absoluteOfMajorDotProduct = Math.abs(projectedMajorAxisOnColVec);\n      var absoluteOfMinorDotProduct = Math.abs(projectedMinorAxisOnColVec);\n      var ellipsePoints = [];\n      if (Math.abs(absoluteOfMajorDotProduct - 1) < EPSILON) {\n        ellipsePoints = [pointsWorld[0], pointsWorld[1], pointsWorld[2], pointsWorld[3]];\n      } else if (Math.abs(absoluteOfMinorDotProduct - 1) < EPSILON) {\n        ellipsePoints = [pointsWorld[2], pointsWorld[3], pointsWorld[0], pointsWorld[1]];\n      } else {\n        console.warn(\"OBLIQUE ELLIPSE NOT YET SUPPORTED\");\n      }\n      var state = defaultState;\n      state.annotation.data = {\n        handles: {\n          points: _toConsumableArray(ellipsePoints),\n          activeHandleIndex: 0,\n          textBox: {\n            hasMoved: false\n          }\n        },\n        cachedStats: _defineProperty({}, \"imageId:\".concat(referencedImageId), {\n          area: NUMGroup ? NUMGroup.MeasuredValueSequence.NumericValue : 0\n        }),\n        frameNumber: ReferencedFrameNumber\n      };\n      return state;\n    }\n  }, {\n    key: \"getTID300RepresentationArguments\",\n    value: function getTID300RepresentationArguments(tool, worldToImageCoords) {\n      var data = tool.data,\n        finding = tool.finding,\n        findingSites = tool.findingSites,\n        metadata = tool.metadata;\n      var _data$cachedStats = data.cachedStats,\n        cachedStats = _data$cachedStats === void 0 ? {} : _data$cachedStats,\n        handles = data.handles;\n      var rotation = data.initialRotation || 0;\n      var referencedImageId = metadata.referencedImageId;\n      if (!referencedImageId) {\n        throw new Error(\"EllipticalROI.getTID300RepresentationArguments: referencedImageId is not defined\");\n      }\n      var top, bottom, left, right;\n      if (rotation == 90 || rotation == 270) {\n        bottom = worldToImageCoords(referencedImageId, handles.points[2]);\n        top = worldToImageCoords(referencedImageId, handles.points[3]);\n        left = worldToImageCoords(referencedImageId, handles.points[0]);\n        right = worldToImageCoords(referencedImageId, handles.points[1]);\n      } else {\n        top = worldToImageCoords(referencedImageId, handles.points[0]);\n        bottom = worldToImageCoords(referencedImageId, handles.points[1]);\n        left = worldToImageCoords(referencedImageId, handles.points[2]);\n        right = worldToImageCoords(referencedImageId, handles.points[3]);\n      }\n      var topBottomLength = Math.abs(top[1] - bottom[1]);\n      var leftRightLength = Math.abs(left[0] - right[0]);\n      var points = [];\n      if (topBottomLength > leftRightLength) {\n        points.push({\n          x: top[0],\n          y: top[1]\n        });\n        points.push({\n          x: bottom[0],\n          y: bottom[1]\n        });\n        points.push({\n          x: left[0],\n          y: left[1]\n        });\n        points.push({\n          x: right[0],\n          y: right[1]\n        });\n      } else {\n        points.push({\n          x: left[0],\n          y: left[1]\n        });\n        points.push({\n          x: right[0],\n          y: right[1]\n        });\n        points.push({\n          x: top[0],\n          y: top[1]\n        });\n        points.push({\n          x: bottom[0],\n          y: bottom[1]\n        });\n      }\n      var _ref = cachedStats[\"imageId:\".concat(referencedImageId)] || {},\n        area = _ref.area;\n      return {\n        area: area,\n        points: points,\n        trackingIdentifierTextValue: this.trackingIdentifierTextValue,\n        finding: finding,\n        findingSites: findingSites || []\n      };\n    }\n  }]);\n}();\n_EllipticalROI = EllipticalROI;\n_EllipticalROI.trackingIdentifierTextValue = \"\".concat(CORNERSTONE_3D_TAG, \":\").concat(ELLIPTICALROI);\n_EllipticalROI.toolType = ELLIPTICALROI;\n_EllipticalROI.utilityToolType = ELLIPTICALROI;\n_EllipticalROI.TID300Representation = TID300Ellipse;\n_EllipticalROI.isValidCornerstoneTrackingIdentifier = isValidCornerstoneTrackingIdentifier;\nMeasurementReport.registerTool(EllipticalROI);\n\nexport { EllipticalROI as default };\n","import { slicedToArray as _slicedToArray, createClass as _createClass, defineProperty as _defineProperty, classCallCheck as _classCallCheck } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport { utilities } from 'dcmjs';\nimport CORNERSTONE_3D_TAG from './cornerstone3DTag.js';\nimport MeasurementReport from './MeasurementReport.js';\n\nvar _RectangleROI;\nvar TID300Polyline = utilities.TID300.Polyline;\nvar TOOLTYPE = \"RectangleROI\";\nvar trackingIdentifierTextValue = \"\".concat(CORNERSTONE_3D_TAG, \":\").concat(TOOLTYPE);\nvar RectangleROI = /*#__PURE__*/function () {\n  function RectangleROI() {\n    _classCallCheck(this, RectangleROI);\n  }\n  return _createClass(RectangleROI, null, [{\n    key: \"getMeasurementData\",\n    value: function getMeasurementData(MeasurementGroup, sopInstanceUIDToImageIdMap, imageToWorldCoords, metadata) {\n      var _MeasurementReport$ge = MeasurementReport.getSetupMeasurementData(MeasurementGroup, sopInstanceUIDToImageIdMap, metadata, RectangleROI.toolType),\n        defaultState = _MeasurementReport$ge.defaultState,\n        NUMGroup = _MeasurementReport$ge.NUMGroup,\n        SCOORDGroup = _MeasurementReport$ge.SCOORDGroup,\n        ReferencedFrameNumber = _MeasurementReport$ge.ReferencedFrameNumber;\n      var referencedImageId = defaultState.annotation.metadata.referencedImageId;\n      var GraphicData = SCOORDGroup.GraphicData;\n      var worldCoords = [];\n      for (var i = 0; i < GraphicData.length; i += 2) {\n        var point = imageToWorldCoords(referencedImageId, [GraphicData[i], GraphicData[i + 1]]);\n        worldCoords.push(point);\n      }\n      var state = defaultState;\n      state.annotation.data = {\n        handles: {\n          points: [worldCoords[0], worldCoords[1], worldCoords[3], worldCoords[2]],\n          activeHandleIndex: 0,\n          textBox: {\n            hasMoved: false\n          }\n        },\n        cachedStats: _defineProperty({}, \"imageId:\".concat(referencedImageId), {\n          area: NUMGroup ? NUMGroup.MeasuredValueSequence.NumericValue : null\n        }),\n        frameNumber: ReferencedFrameNumber\n      };\n      return state;\n    }\n  }, {\n    key: \"getTID300RepresentationArguments\",\n    value: function getTID300RepresentationArguments(tool, worldToImageCoords) {\n      var data = tool.data,\n        finding = tool.finding,\n        findingSites = tool.findingSites,\n        metadata = tool.metadata;\n      var _data$cachedStats = data.cachedStats,\n        cachedStats = _data$cachedStats === void 0 ? {} : _data$cachedStats,\n        handles = data.handles;\n      var referencedImageId = metadata.referencedImageId;\n      if (!referencedImageId) {\n        throw new Error(\"CobbAngle.getTID300RepresentationArguments: referencedImageId is not defined\");\n      }\n      var corners = handles.points.map(function (point) {\n        return worldToImageCoords(referencedImageId, point);\n      });\n      var area = cachedStats.area,\n        perimeter = cachedStats.perimeter;\n      return {\n        points: [corners[0], corners[1], corners[3], corners[2], corners[0]],\n        area: area,\n        perimeter: perimeter,\n        trackingIdentifierTextValue: trackingIdentifierTextValue,\n        finding: finding,\n        findingSites: findingSites || []\n      };\n    }\n  }]);\n}();\n_RectangleROI = RectangleROI;\n_RectangleROI.toolType = TOOLTYPE;\n_RectangleROI.utilityToolType = TOOLTYPE;\n_RectangleROI.TID300Representation = TID300Polyline;\n_RectangleROI.isValidCornerstoneTrackingIdentifier = function (TrackingIdentifier) {\n  if (!TrackingIdentifier.includes(\":\")) {\n    return false;\n  }\n  var _TrackingIdentifier$s = TrackingIdentifier.split(\":\"),\n    _TrackingIdentifier$s2 = _slicedToArray(_TrackingIdentifier$s, 2),\n    cornerstone3DTag = _TrackingIdentifier$s2[0],\n    toolType = _TrackingIdentifier$s2[1];\n  if (cornerstone3DTag !== CORNERSTONE_3D_TAG) {\n    return false;\n  }\n  return toolType === TOOLTYPE;\n};\nMeasurementReport.registerTool(RectangleROI);\n\nexport { RectangleROI as default };\n","import { slicedToArray as _slicedToArray, createClass as _createClass, defineProperty as _defineProperty, classCallCheck as _classCallCheck } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport { utilities } from 'dcmjs';\nimport CORNERSTONE_3D_TAG from './cornerstone3DTag.js';\nimport MeasurementReport from './MeasurementReport.js';\n\nvar TID300Length = utilities.TID300.Length;\nvar LENGTH = \"Length\";\nvar trackingIdentifierTextValue = \"\".concat(CORNERSTONE_3D_TAG, \":\").concat(LENGTH);\nvar Length = /*#__PURE__*/function () {\n  function Length() {\n    _classCallCheck(this, Length);\n  }\n  return _createClass(Length, null, [{\n    key: \"getMeasurementData\",\n    value:\n    // TODO: this function is required for all Cornerstone Tool Adapters, since it is called by MeasurementReport.\n    function getMeasurementData(MeasurementGroup, sopInstanceUIDToImageIdMap, imageToWorldCoords, metadata) {\n      var _MeasurementReport$ge = MeasurementReport.getSetupMeasurementData(MeasurementGroup, sopInstanceUIDToImageIdMap, metadata, Length.toolType),\n        defaultState = _MeasurementReport$ge.defaultState,\n        NUMGroup = _MeasurementReport$ge.NUMGroup,\n        SCOORDGroup = _MeasurementReport$ge.SCOORDGroup,\n        ReferencedFrameNumber = _MeasurementReport$ge.ReferencedFrameNumber;\n      var referencedImageId = defaultState.annotation.metadata.referencedImageId;\n      var GraphicData = SCOORDGroup.GraphicData;\n      var worldCoords = [];\n      for (var i = 0; i < GraphicData.length; i += 2) {\n        var point = imageToWorldCoords(referencedImageId, [GraphicData[i], GraphicData[i + 1]]);\n        worldCoords.push(point);\n      }\n      var state = defaultState;\n      state.annotation.data = {\n        handles: {\n          points: [worldCoords[0], worldCoords[1]],\n          activeHandleIndex: 0,\n          textBox: {\n            hasMoved: false\n          }\n        },\n        cachedStats: _defineProperty({}, \"imageId:\".concat(referencedImageId), {\n          length: NUMGroup ? NUMGroup.MeasuredValueSequence.NumericValue : 0\n        }),\n        frameNumber: ReferencedFrameNumber\n      };\n      return state;\n    }\n  }, {\n    key: \"getTID300RepresentationArguments\",\n    value: function getTID300RepresentationArguments(tool, worldToImageCoords) {\n      var data = tool.data,\n        finding = tool.finding,\n        findingSites = tool.findingSites,\n        metadata = tool.metadata;\n      var _data$cachedStats = data.cachedStats,\n        cachedStats = _data$cachedStats === void 0 ? {} : _data$cachedStats,\n        handles = data.handles;\n      var referencedImageId = metadata.referencedImageId;\n      if (!referencedImageId) {\n        throw new Error(\"Length.getTID300RepresentationArguments: referencedImageId is not defined\");\n      }\n      var start = worldToImageCoords(referencedImageId, handles.points[0]);\n      var end = worldToImageCoords(referencedImageId, handles.points[1]);\n      var point1 = {\n        x: start[0],\n        y: start[1]\n      };\n      var point2 = {\n        x: end[0],\n        y: end[1]\n      };\n      var _ref = cachedStats[\"imageId:\".concat(referencedImageId)] || {},\n        distance = _ref.length;\n      return {\n        point1: point1,\n        point2: point2,\n        distance: distance,\n        trackingIdentifierTextValue: trackingIdentifierTextValue,\n        finding: finding,\n        findingSites: findingSites || []\n      };\n    }\n  }]);\n}();\nLength.toolType = LENGTH;\nLength.utilityToolType = LENGTH;\nLength.TID300Representation = TID300Length;\nLength.isValidCornerstoneTrackingIdentifier = function (TrackingIdentifier) {\n  if (!TrackingIdentifier.includes(\":\")) {\n    return false;\n  }\n  var _TrackingIdentifier$s = TrackingIdentifier.split(\":\"),\n    _TrackingIdentifier$s2 = _slicedToArray(_TrackingIdentifier$s, 2),\n    cornerstone3DTag = _TrackingIdentifier$s2[0],\n    toolType = _TrackingIdentifier$s2[1];\n  if (cornerstone3DTag !== CORNERSTONE_3D_TAG) {\n    return false;\n  }\n  return toolType === LENGTH;\n};\nMeasurementReport.registerTool(Length);\n\nexport { Length as default };\n","import { slicedToArray as _slicedToArray, createClass as _createClass, defineProperty as _defineProperty, classCallCheck as _classCallCheck } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport MeasurementReport from './MeasurementReport.js';\nimport { utilities } from 'dcmjs';\nimport CORNERSTONE_3D_TAG from './cornerstone3DTag.js';\nimport { vec3 } from 'gl-matrix';\n\nvar _PlanarFreehandROI;\nvar TID300Polyline = utilities.TID300.Polyline;\nvar PLANARFREEHANDROI = \"PlanarFreehandROI\";\nvar trackingIdentifierTextValue = \"\".concat(CORNERSTONE_3D_TAG, \":\").concat(PLANARFREEHANDROI);\nvar closedContourThreshold = 1e-5;\nvar PlanarFreehandROI = /*#__PURE__*/function () {\n  function PlanarFreehandROI() {\n    _classCallCheck(this, PlanarFreehandROI);\n  }\n  return _createClass(PlanarFreehandROI, null, [{\n    key: \"getMeasurementData\",\n    value: function getMeasurementData(MeasurementGroup, sopInstanceUIDToImageIdMap, imageToWorldCoords, metadata) {\n      var _MeasurementReport$ge = MeasurementReport.getSetupMeasurementData(MeasurementGroup, sopInstanceUIDToImageIdMap, metadata, PlanarFreehandROI.toolType),\n        defaultState = _MeasurementReport$ge.defaultState,\n        NUMGroup = _MeasurementReport$ge.NUMGroup,\n        SCOORDGroup = _MeasurementReport$ge.SCOORDGroup,\n        ReferencedFrameNumber = _MeasurementReport$ge.ReferencedFrameNumber;\n      var referencedImageId = defaultState.annotation.metadata.referencedImageId;\n      var GraphicData = SCOORDGroup.GraphicData;\n      var worldCoords = [];\n      for (var i = 0; i < GraphicData.length; i += 2) {\n        var point = imageToWorldCoords(referencedImageId, [GraphicData[i], GraphicData[i + 1]]);\n        worldCoords.push(point);\n      }\n      var distanceBetweenFirstAndLastPoint = vec3.distance(worldCoords[worldCoords.length - 1], worldCoords[0]);\n      var isOpenContour = true;\n      if (distanceBetweenFirstAndLastPoint < closedContourThreshold) {\n        worldCoords.pop();\n        isOpenContour = false;\n      }\n      var points = [];\n      if (isOpenContour) {\n        points.push(worldCoords[0], worldCoords[worldCoords.length - 1]);\n      }\n      var state = defaultState;\n      state.annotation.data = {\n        contour: {\n          polyline: worldCoords,\n          closed: !isOpenContour\n        },\n        handles: {\n          points: points,\n          activeHandleIndex: null,\n          textBox: {\n            hasMoved: false\n          }\n        },\n        cachedStats: _defineProperty({}, \"imageId:\".concat(referencedImageId), {\n          area: NUMGroup ? NUMGroup.MeasuredValueSequence.NumericValue : null\n        }),\n        frameNumber: ReferencedFrameNumber\n      };\n      return state;\n    }\n  }, {\n    key: \"getTID300RepresentationArguments\",\n    value: function getTID300RepresentationArguments(tool, worldToImageCoords) {\n      var data = tool.data,\n        finding = tool.finding,\n        findingSites = tool.findingSites,\n        metadata = tool.metadata;\n      var _data$contour = data.contour,\n        polyline = _data$contour.polyline,\n        closed = _data$contour.closed;\n      var isOpenContour = closed !== true;\n      var referencedImageId = metadata.referencedImageId;\n      if (!referencedImageId) {\n        throw new Error(\"PlanarFreehandROI.getTID300RepresentationArguments: referencedImageId is not defined\");\n      }\n      var points = polyline.map(function (worldPos) {\n        return worldToImageCoords(referencedImageId, worldPos);\n      });\n      if (!isOpenContour) {\n        var firstPoint = points[0];\n        points.push([firstPoint[0], firstPoint[1]]);\n      }\n      var _ref = data.cachedStats[\"imageId:\".concat(referencedImageId)] || {},\n        area = _ref.area,\n        areaUnit = _ref.areaUnit,\n        modalityUnit = _ref.modalityUnit,\n        perimeter = _ref.perimeter,\n        mean = _ref.mean,\n        max = _ref.max,\n        stdDev = _ref.stdDev;\n      return {\n        points: points,\n        area: area,\n        areaUnit: areaUnit,\n        perimeter: perimeter,\n        modalityUnit: modalityUnit,\n        mean: mean,\n        max: max,\n        stdDev: stdDev,\n        trackingIdentifierTextValue: trackingIdentifierTextValue,\n        finding: finding,\n        findingSites: findingSites || []\n      };\n    }\n  }]);\n}();\n_PlanarFreehandROI = PlanarFreehandROI;\n_PlanarFreehandROI.toolType = PLANARFREEHANDROI;\n_PlanarFreehandROI.utilityToolType = PLANARFREEHANDROI;\n_PlanarFreehandROI.TID300Representation = TID300Polyline;\n_PlanarFreehandROI.isValidCornerstoneTrackingIdentifier = function (TrackingIdentifier) {\n  if (!TrackingIdentifier.includes(\":\")) {\n    return false;\n  }\n  var _TrackingIdentifier$s = TrackingIdentifier.split(\":\"),\n    _TrackingIdentifier$s2 = _slicedToArray(_TrackingIdentifier$s, 2),\n    cornerstone3DTag = _TrackingIdentifier$s2[0],\n    toolType = _TrackingIdentifier$s2[1];\n  if (cornerstone3DTag !== CORNERSTONE_3D_TAG) {\n    return false;\n  }\n  return toolType === PLANARFREEHANDROI;\n};\nMeasurementReport.registerTool(PlanarFreehandROI);\n\nexport { PlanarFreehandROI as default };\n","import { slicedToArray as _slicedToArray, createClass as _createClass, classCallCheck as _classCallCheck } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport { utilities } from 'dcmjs';\nimport CORNERSTONE_3D_TAG from './cornerstone3DTag.js';\nimport MeasurementReport from './MeasurementReport.js';\n\nvar TID300Point = utilities.TID300.Point;\nvar PROBE = \"Probe\";\nvar trackingIdentifierTextValue = \"\".concat(CORNERSTONE_3D_TAG, \":\").concat(PROBE);\nvar Probe = /*#__PURE__*/function () {\n  function Probe() {\n    _classCallCheck(this, Probe);\n  }\n  return _createClass(Probe, null, [{\n    key: \"getMeasurementData\",\n    value: function getMeasurementData(MeasurementGroup, sopInstanceUIDToImageIdMap, imageToWorldCoords, metadata) {\n      var _MeasurementReport$ge = MeasurementReport.getSetupMeasurementData(MeasurementGroup, sopInstanceUIDToImageIdMap, metadata, Probe.toolType),\n        defaultState = _MeasurementReport$ge.defaultState,\n        SCOORDGroup = _MeasurementReport$ge.SCOORDGroup,\n        ReferencedFrameNumber = _MeasurementReport$ge.ReferencedFrameNumber;\n      var referencedImageId = defaultState.annotation.metadata.referencedImageId;\n      var GraphicData = SCOORDGroup.GraphicData;\n      var worldCoords = [];\n      for (var i = 0; i < GraphicData.length; i += 2) {\n        var point = imageToWorldCoords(referencedImageId, [GraphicData[i], GraphicData[i + 1]]);\n        worldCoords.push(point);\n      }\n      var state = defaultState;\n      state.annotation.data = {\n        handles: {\n          points: worldCoords,\n          activeHandleIndex: null,\n          textBox: {\n            hasMoved: false\n          }\n        },\n        frameNumber: ReferencedFrameNumber\n      };\n      return state;\n    }\n  }, {\n    key: \"getTID300RepresentationArguments\",\n    value: function getTID300RepresentationArguments(tool, worldToImageCoords) {\n      var data = tool.data,\n        metadata = tool.metadata;\n      var finding = tool.finding,\n        findingSites = tool.findingSites;\n      var referencedImageId = metadata.referencedImageId;\n      if (!referencedImageId) {\n        throw new Error(\"Probe.getTID300RepresentationArguments: referencedImageId is not defined\");\n      }\n      var points = data.handles.points;\n      var pointsImage = points.map(function (point) {\n        var pointImage = worldToImageCoords(referencedImageId, point);\n        return {\n          x: pointImage[0],\n          y: pointImage[1]\n        };\n      });\n      var TID300RepresentationArguments = {\n        points: pointsImage,\n        trackingIdentifierTextValue: trackingIdentifierTextValue,\n        findingSites: findingSites || [],\n        finding: finding\n      };\n      return TID300RepresentationArguments;\n    }\n  }]);\n}();\nProbe.toolType = PROBE;\nProbe.utilityToolType = PROBE;\nProbe.TID300Representation = TID300Point;\nProbe.isValidCornerstoneTrackingIdentifier = function (TrackingIdentifier) {\n  if (!TrackingIdentifier.includes(\":\")) {\n    return false;\n  }\n  var _TrackingIdentifier$s = TrackingIdentifier.split(\":\"),\n    _TrackingIdentifier$s2 = _slicedToArray(_TrackingIdentifier$s, 2),\n    cornerstone3DTag = _TrackingIdentifier$s2[0],\n    toolType = _TrackingIdentifier$s2[1];\n  if (cornerstone3DTag !== CORNERSTONE_3D_TAG) {\n    return false;\n  }\n  return toolType === PROBE;\n};\nMeasurementReport.registerTool(Probe);\n\nexport { Probe as default };\n","import { slicedToArray as _slicedToArray, createClass as _createClass, classCallCheck as _classCallCheck } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport { utilities } from 'dcmjs';\nimport CORNERSTONE_3D_TAG from './cornerstone3DTag.js';\nimport MeasurementReport from './MeasurementReport.js';\n\nvar _UltrasoundDirectional;\nvar TID300Length = utilities.TID300.Length;\nvar ULTRASOUND_DIRECTIONAL = \"UltrasoundDirectionalTool\";\nvar trackingIdentifierTextValue = \"\".concat(CORNERSTONE_3D_TAG, \":\").concat(ULTRASOUND_DIRECTIONAL);\nvar UltrasoundDirectional = /*#__PURE__*/function () {\n  function UltrasoundDirectional() {\n    _classCallCheck(this, UltrasoundDirectional);\n  }\n  return _createClass(UltrasoundDirectional, null, [{\n    key: \"getMeasurementData\",\n    value: function getMeasurementData(MeasurementGroup, sopInstanceUIDToImageIdMap, imageToWorldCoords, metadata) {\n      var _MeasurementReport$ge = MeasurementReport.getSetupMeasurementData(MeasurementGroup, sopInstanceUIDToImageIdMap, metadata, UltrasoundDirectional.toolType),\n        defaultState = _MeasurementReport$ge.defaultState,\n        SCOORDGroup = _MeasurementReport$ge.SCOORDGroup,\n        ReferencedFrameNumber = _MeasurementReport$ge.ReferencedFrameNumber;\n      var referencedImageId = defaultState.annotation.metadata.referencedImageId;\n      var GraphicData = SCOORDGroup.GraphicData;\n      var worldCoords = [];\n      for (var i = 0; i < GraphicData.length; i += 2) {\n        var point = imageToWorldCoords(referencedImageId, [GraphicData[i], GraphicData[i + 1]]);\n        worldCoords.push(point);\n      }\n      var state = defaultState;\n      state.annotation.data = {\n        handles: {\n          points: [worldCoords[0], worldCoords[1]],\n          activeHandleIndex: 0,\n          textBox: {\n            hasMoved: false\n          }\n        },\n        cachedStats: {},\n        frameNumber: ReferencedFrameNumber\n      };\n      return state;\n    }\n  }, {\n    key: \"getTID300RepresentationArguments\",\n    value: function getTID300RepresentationArguments(tool, worldToImageCoords) {\n      var data = tool.data,\n        finding = tool.finding,\n        findingSites = tool.findingSites,\n        metadata = tool.metadata;\n      var handles = data.handles;\n      var referencedImageId = metadata.referencedImageId;\n      if (!referencedImageId) {\n        throw new Error(\"UltrasoundDirectionalTool.getTID300RepresentationArguments: referencedImageId is not defined\");\n      }\n      var start = worldToImageCoords(referencedImageId, handles.points[0]);\n      var end = worldToImageCoords(referencedImageId, handles.points[1]);\n      var point1 = {\n        x: start[0],\n        y: start[1]\n      };\n      var point2 = {\n        x: end[0],\n        y: end[1]\n      };\n      return {\n        point1: point1,\n        point2: point2,\n        trackingIdentifierTextValue: trackingIdentifierTextValue,\n        finding: finding,\n        findingSites: findingSites || []\n      };\n    }\n  }]);\n}();\n_UltrasoundDirectional = UltrasoundDirectional;\n_UltrasoundDirectional.toolType = ULTRASOUND_DIRECTIONAL;\n_UltrasoundDirectional.utilityToolType = ULTRASOUND_DIRECTIONAL;\n_UltrasoundDirectional.TID300Representation = TID300Length;\n_UltrasoundDirectional.isValidCornerstoneTrackingIdentifier = function (TrackingIdentifier) {\n  if (!TrackingIdentifier.includes(\":\")) {\n    return false;\n  }\n  var _TrackingIdentifier$s = TrackingIdentifier.split(\":\"),\n    _TrackingIdentifier$s2 = _slicedToArray(_TrackingIdentifier$s, 2),\n    cornerstone3DTag = _TrackingIdentifier$s2[0],\n    toolType = _TrackingIdentifier$s2[1];\n  if (cornerstone3DTag !== CORNERSTONE_3D_TAG) {\n    return false;\n  }\n  return toolType === ULTRASOUND_DIRECTIONAL;\n};\nMeasurementReport.registerTool(UltrasoundDirectional);\n\nexport { UltrasoundDirectional as default };\n","import { objectSpread2 as _objectSpread2 } from '../../../_virtual/_rollupPluginBabelHelpers.js';\nimport { normalizers, derivations } from 'dcmjs';\nimport { fillSegmentation } from '../../Cornerstone/Segmentation_4X.js';\n\nvar Normalizer = normalizers.Normalizer;\nvar SegmentationDerivation = derivations.Segmentation;\nfunction generateSegmentation(images, labelmaps, metadata) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var segmentation = _createMultiframeSegmentationFromReferencedImages(images, metadata, options);\n  return fillSegmentation(segmentation, labelmaps, options);\n}\nfunction _createMultiframeSegmentationFromReferencedImages(images, metadata, options) {\n  var datasets = images.map(function (image) {\n    var instance = metadata.get(\"instance\", image.imageId);\n    return _objectSpread2(_objectSpread2(_objectSpread2({}, image), instance), {}, {\n      SOPClassUID: instance.SopClassUID || instance.SOPClassUID,\n      SOPInstanceUID: instance.SopInstanceUID || instance.SOPInstanceUID,\n      PixelData: image.voxelManager.getScalarData(),\n      _vrMap: {\n        PixelData: \"OW\"\n      },\n      _meta: {}\n    });\n  });\n  var multiframe = Normalizer.normalizeToDataset(datasets);\n  if (!multiframe) {\n    throw new Error(\"Failed to normalize the multiframe dataset, the data is not multi-frame.\");\n  }\n  return new SegmentationDerivation([multiframe], options);\n}\n\nexport { generateSegmentation };\n","function generateLabelMaps2DFrom3D(labelmap3D) {\n  var scalarData = labelmap3D.scalarData,\n    dimensions = labelmap3D.dimensions;\n  var labelmaps2D = [];\n  var segmentsOnLabelmap3D = new Set();\n  for (var z = 0; z < dimensions[2]; z++) {\n    var pixelData = scalarData.slice(z * dimensions[0] * dimensions[1], (z + 1) * dimensions[0] * dimensions[1]);\n    var segmentsOnLabelmap = [];\n    for (var i = 0; i < pixelData.length; i++) {\n      var segment = pixelData[i];\n      if (!segmentsOnLabelmap.includes(segment) && segment !== 0) {\n        segmentsOnLabelmap.push(segment);\n      }\n    }\n    var labelmap2D = {\n      segmentsOnLabelmap: segmentsOnLabelmap,\n      pixelData: pixelData,\n      rows: dimensions[1],\n      columns: dimensions[0]\n    };\n    if (segmentsOnLabelmap.length === 0) {\n      continue;\n    }\n    segmentsOnLabelmap.forEach(function (segmentIndex) {\n      segmentsOnLabelmap3D.add(segmentIndex);\n    });\n    labelmaps2D[dimensions[2] - 1 - z] = labelmap2D;\n  }\n  labelmap3D.segmentsOnLabelmap = Array.from(segmentsOnLabelmap3D);\n  labelmap3D.labelmaps2D = labelmaps2D;\n  return labelmap3D;\n}\n\nexport { generateLabelMaps2DFrom3D };\n","import { generateToolState as generateToolState$1 } from '../../Cornerstone/Segmentation.js';\n\nfunction generateToolState(imageIds, arrayBuffer, metadataProvider) {\n  var skipOverlapping = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var tolerance = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1e-3;\n  return generateToolState$1(imageIds, arrayBuffer, metadataProvider, skipOverlapping, tolerance);\n}\n\nexport { generateToolState };\n","import { CornerstonePMAP } from '../../Cornerstone/index.js';\n\nvar ParametricMap = CornerstonePMAP.ParametricMap;\nvar generateToolStateCornerstone = ParametricMap.generateToolState;\nfunction generateToolState(imageIds, arrayBuffer, metadataProvider) {\n  var skipOverlapping = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var tolerance = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1e-3;\n  return generateToolStateCornerstone(imageIds, arrayBuffer, metadataProvider, skipOverlapping, tolerance);\n}\n\nexport { generateToolState };\n","import { toConsumableArray as _toConsumableArray } from '../../../../_virtual/_rollupPluginBabelHelpers.js';\n\nfunction getReferencedFrameOfReferenceSequence(metadata, metadataProvider, dataset) {\n  var imageId = metadata.referencedImageId,\n    FrameOfReferenceUID = metadata.FrameOfReferenceUID;\n  var instance = metadataProvider.get(\"instance\", imageId);\n  var SeriesInstanceUID = instance.SeriesInstanceUID;\n  var ReferencedSeriesSequence = dataset.ReferencedSeriesSequence;\n  return [{\n    FrameOfReferenceUID: FrameOfReferenceUID,\n    RTReferencedStudySequence: [{\n      ReferencedSOPClassUID: dataset.SOPClassUID,\n      ReferencedSOPInstanceUID: dataset.SOPInstanceUID,\n      RTReferencedSeriesSequence: [{\n        SeriesInstanceUID: SeriesInstanceUID,\n        ContourImageSequence: _toConsumableArray(ReferencedSeriesSequence[0].ReferencedInstanceSequence)\n      }]\n    }]\n  }];\n}\n\nexport { getReferencedFrameOfReferenceSequence as default };\n","function getReferencedSeriesSequence(metadata, _index, metadataProvider, DicomMetadataStore) {\n  // grab imageId from toolData\n  var imageId = metadata.referencedImageId;\n  var instance = metadataProvider.get(\"instance\", imageId);\n  var SeriesInstanceUID = instance.SeriesInstanceUID,\n    StudyInstanceUID = instance.StudyInstanceUID;\n  var ReferencedSeriesSequence = [];\n  if (SeriesInstanceUID) {\n    var series = DicomMetadataStore.getSeries(StudyInstanceUID, SeriesInstanceUID);\n    var ReferencedSeries = {\n      SeriesInstanceUID: SeriesInstanceUID,\n      ReferencedInstanceSequence: []\n    };\n    series.instances.forEach(function (instance) {\n      var SOPInstanceUID = instance.SOPInstanceUID,\n        SOPClassUID = instance.SOPClassUID;\n      ReferencedSeries.ReferencedInstanceSequence.push({\n        ReferencedSOPClassUID: SOPClassUID,\n        ReferencedSOPInstanceUID: SOPInstanceUID\n      });\n    });\n    ReferencedSeriesSequence.push(ReferencedSeries);\n  }\n  return ReferencedSeriesSequence;\n}\n\nexport { getReferencedSeriesSequence as default };\n","function getStructureSetModule(contour, index) {\n  var FrameOfReferenceUID = contour.metadata.FrameOfReferenceUID;\n  return {\n    ROINumber: index + 1,\n    ROIName: contour.name || \"Todo: name \".concat(index + 1),\n    ROIDescription: \"Todo: description \".concat(index + 1),\n    ROIGenerationAlgorithm: \"Todo: algorithm\",\n    ReferencedFrameOfReferenceUID: FrameOfReferenceUID\n  };\n}\n\nexport { getStructureSetModule as default };\n","import { objectSpread2 as _objectSpread2 } from '../../../_virtual/_rollupPluginBabelHelpers.js';\nimport { utilities } from '@cornerstonejs/tools';\nimport dcmjs from 'dcmjs';\nimport getPatientModule from './utilities/getPatientModule.js';\nimport getReferencedFrameOfReferenceSequence from './utilities/getReferencedFrameOfReferenceSequence.js';\nimport getReferencedSeriesSequence from './utilities/getReferencedSeriesSequence.js';\nimport getRTROIObservationsSequence from './utilities/getRTROIObservationsSequence.js';\nimport getRTSeriesModule from './utilities/getRTSeriesModule.js';\nimport getStructureSetModule from './utilities/getStructureSetModule.js';\n\nvar _utilities$contours = utilities.contours,\n  generateContourSetsFromLabelmap = _utilities$contours.generateContourSetsFromLabelmap,\n  AnnotationToPointData = _utilities$contours.AnnotationToPointData;\nvar DicomMetaDictionary = dcmjs.data.DicomMetaDictionary;\nfunction generateRTSSFromSegmentations(segmentations, metadataProvider, DicomMetadataStore) {\n  var roiContours = [];\n  var contourSets = generateContourSetsFromLabelmap({\n    segmentations: segmentations\n  });\n  contourSets.forEach(function (contourSet, segIndex) {\n    if (contourSet) {\n      var contourSequence = [];\n      contourSet.sliceContours.forEach(function (sliceContour) {\n        var sopCommon = metadataProvider.get(\"sopCommonModule\", sliceContour.referencedImageId);\n        var ReferencedSOPClassUID = sopCommon.sopClassUID;\n        var ReferencedSOPInstanceUID = sopCommon.sopInstanceUID;\n        var ContourImageSequence = [{\n          ReferencedSOPClassUID: ReferencedSOPClassUID,\n          ReferencedSOPInstanceUID: ReferencedSOPInstanceUID\n        }];\n        var sliceContourPolyData = sliceContour.polyData;\n        sliceContour.contours.forEach(function (contour, index) {\n          var ContourGeometricType = contour.type;\n          var NumberOfContourPoints = contour.contourPoints.length;\n          var ContourData = [];\n          contour.contourPoints.forEach(function (point) {\n            var pointData = sliceContourPolyData.points[point];\n            pointData[0] = +pointData[0].toFixed(2);\n            pointData[1] = +pointData[1].toFixed(2);\n            pointData[2] = +pointData[2].toFixed(2);\n            ContourData.push(pointData[0]);\n            ContourData.push(pointData[1]);\n            ContourData.push(pointData[2]);\n          });\n          contourSequence.push({\n            ContourImageSequence: ContourImageSequence,\n            ContourGeometricType: ContourGeometricType,\n            NumberOfContourPoints: NumberOfContourPoints,\n            ContourNumber: index + 1,\n            ContourData: ContourData\n          });\n        });\n      });\n      var segLabel = contourSet.label || \"Segment \".concat(segIndex + 1);\n      var ROIContour = {\n        name: segLabel,\n        description: segLabel,\n        contourSequence: contourSequence,\n        color: contourSet.color,\n        metadata: contourSet.metadata\n      };\n      roiContours.push(ROIContour);\n    }\n  });\n  var rtMetadata = {\n    name: segmentations.label,\n    label: segmentations.label\n  };\n  var dataset = _initializeDataset(rtMetadata, roiContours[0].metadata, metadataProvider);\n  roiContours.forEach(function (contour, index) {\n    var roiContour = {\n      ROIDisplayColor: contour.color || [255, 0, 0],\n      ContourSequence: contour.contourSequence,\n      ReferencedROINumber: index + 1\n    };\n    dataset.StructureSetROISequence.push(getStructureSetModule(contour, index));\n    dataset.ROIContourSequence.push(roiContour);\n    dataset.ReferencedSeriesSequence = getReferencedSeriesSequence(contour.metadata, index, metadataProvider, DicomMetadataStore);\n    dataset.ReferencedFrameOfReferenceSequence = getReferencedFrameOfReferenceSequence(contour.metadata, metadataProvider, dataset);\n  });\n  var fileMetaInformationVersionArray = new Uint8Array(2);\n  fileMetaInformationVersionArray[1] = 1;\n  var _meta = {\n    FileMetaInformationVersion: {\n      Value: [fileMetaInformationVersionArray.buffer],\n      vr: \"OB\"\n    },\n    TransferSyntaxUID: {\n      Value: [\"1.2.840.10008.1.2.1\"],\n      vr: \"UI\"\n    },\n    ImplementationClassUID: {\n      Value: [DicomMetaDictionary.uid()],\n      vr: \"UI\"\n    },\n    ImplementationVersionName: {\n      Value: [\"dcmjs\"],\n      vr: \"SH\"\n    }\n  };\n  dataset._meta = _meta;\n  dataset.SpecificCharacterSet = \"ISO_IR 192\";\n  return dataset;\n}\nfunction generateRTSSFromAnnotations(annotations, metadataProvider, DicomMetadataStore) {\n  var rtMetadata = {\n    name: \"RTSS from Annotations\",\n    label: \"RTSS from Annotations\"\n  };\n  var dataset = _initializeDataset(rtMetadata, annotations[0].metadata, metadataProvider);\n  annotations.forEach(function (annotation, index) {\n    var ContourSequence = AnnotationToPointData.convert(annotation, index, metadataProvider);\n    dataset.StructureSetROISequence.push(getStructureSetModule(annotation, index));\n    dataset.ROIContourSequence.push(ContourSequence);\n    dataset.RTROIObservationsSequence.push(getRTROIObservationsSequence(annotation, index));\n    dataset.ReferencedSeriesSequence = getReferencedSeriesSequence(annotation.metadata, index, metadataProvider, DicomMetadataStore);\n    dataset.ReferencedFrameOfReferenceSequence = getReferencedFrameOfReferenceSequence(annotation.metadata, metadataProvider, dataset);\n  });\n  var fileMetaInformationVersionArray = new Uint8Array(2);\n  fileMetaInformationVersionArray[1] = 1;\n  var _meta = {\n    FileMetaInformationVersion: {\n      Value: [fileMetaInformationVersionArray.buffer],\n      vr: \"OB\"\n    },\n    TransferSyntaxUID: {\n      Value: [\"1.2.840.10008.1.2.1\"],\n      vr: \"UI\"\n    },\n    ImplementationClassUID: {\n      Value: [DicomMetaDictionary.uid()],\n      vr: \"UI\"\n    },\n    ImplementationVersionName: {\n      Value: [\"dcmjs\"],\n      vr: \"SH\"\n    }\n  };\n  dataset._meta = _meta;\n  dataset.SpecificCharacterSet = \"ISO_IR 192\";\n  return dataset;\n}\nfunction _initializeDataset(rtMetadata, imgMetadata, metadataProvider) {\n  var rtSOPInstanceUID = DicomMetaDictionary.uid();\n  var imageId = imgMetadata.referencedImageId,\n    FrameOfReferenceUID = imgMetadata.FrameOfReferenceUID;\n  var _metadataProvider$get = metadataProvider.get(\"generalSeriesModule\", imageId),\n    studyInstanceUID = _metadataProvider$get.studyInstanceUID;\n  var patientModule = getPatientModule(imageId, metadataProvider);\n  var rtSeriesModule = getRTSeriesModule(DicomMetaDictionary);\n  return _objectSpread2(_objectSpread2(_objectSpread2({\n    StructureSetROISequence: [],\n    ROIContourSequence: [],\n    RTROIObservationsSequence: [],\n    ReferencedSeriesSequence: [],\n    ReferencedFrameOfReferenceSequence: []\n  }, patientModule), rtSeriesModule), {}, {\n    StudyInstanceUID: studyInstanceUID,\n    SOPClassUID: \"1.2.840.10008.5.1.4.1.1.481.3\",\n    SOPInstanceUID: rtSOPInstanceUID,\n    Manufacturer: \"dcmjs\",\n    Modality: \"RTSTRUCT\",\n    FrameOfReferenceUID: FrameOfReferenceUID,\n    PositionReferenceIndicator: \"\",\n    StructureSetLabel: rtMetadata.label || \"\",\n    StructureSetName: rtMetadata.name || \"\",\n    ReferringPhysicianName: \"\",\n    OperatorsName: \"\",\n    StructureSetDate: DicomMetaDictionary.date(),\n    StructureSetTime: DicomMetaDictionary.time(),\n    _meta: null\n  });\n}\n\nexport { generateRTSSFromAnnotations, generateRTSSFromSegmentations };\n","function getRTROIObservationsSequence(toolData, index) {\n  return {\n    ObservationNumber: index + 1,\n    ReferencedROINumber: index + 1,\n    RTROIInterpretedType: \"Todo: type\",\n    ROIInterpreter: \"Todo: interpreter\"\n  };\n}\n\nexport { getRTROIObservationsSequence as default };\n","function getPatientModule(imageId, metadataProvider) {\n  var generalSeriesModule = metadataProvider.get(\"generalSeriesModule\", imageId);\n  var generalStudyModule = metadataProvider.get(\"generalStudyModule\", imageId);\n  var patientStudyModule = metadataProvider.get(\"patientStudyModule\", imageId);\n  var patientModule = metadataProvider.get(\"patientModule\", imageId);\n  var patientDemographicModule = metadataProvider.get(\"patientDemographicModule\", imageId);\n  return {\n    Modality: generalSeriesModule.modality,\n    PatientID: patientModule.patientId,\n    PatientName: patientModule.patientName,\n    PatientBirthDate: \"\",\n    PatientAge: patientStudyModule.patientAge,\n    PatientSex: patientDemographicModule.patientSex,\n    PatientWeight: patientStudyModule.patientWeight,\n    StudyDate: generalStudyModule.studyDate,\n    StudyTime: generalStudyModule.studyTime,\n    StudyID: \"ToDo\",\n    AccessionNumber: generalStudyModule.accessionNumber\n  };\n}\n\nexport { getPatientModule as default };\n","function getRTSeriesModule(DicomMetaDictionary) {\n  return {\n    SeriesInstanceUID: DicomMetaDictionary.uid(),\n    // generate a new series instance uid\n    SeriesNumber: \"99\" // Todo:: what should be the series number?\n  };\n}\n\nexport { getRTSeriesModule as default };\n","import { utilities } from '@cornerstonejs/tools';\nexport { generateRTSSFromAnnotations, generateRTSSFromSegmentations } from './RTSS.js';\n\nvar generateContourSetsFromLabelmap = utilities.contours.generateContourSetsFromLabelmap;\n\nexport { generateContourSetsFromLabelmap };\n","import MeasurementReport from './MeasurementReport.js';\nimport CodingScheme from './CodingScheme.js';\nimport CORNERSTONE_3D_TAG from './cornerstone3DTag.js';\nimport ArrowAnnotate from './ArrowAnnotate.js';\nimport Bidirectional from './Bidirectional.js';\nimport Angle from './Angle.js';\nimport CobbAngle from './CobbAngle.js';\nimport CircleROI from './CircleROI.js';\nimport EllipticalROI from './EllipticalROI.js';\nimport RectangleROI from './RectangleROI.js';\nimport Length from './Length.js';\nimport PlanarFreehandROI from './PlanarFreehandROI.js';\nimport Probe from './Probe.js';\nimport UltrasoundDirectional from './UltrasoundDirectional.js';\nimport * as index from './Segmentation/index.js';\nimport * as index$1 from './ParametricMap/index.js';\nimport * as index$2 from './RTStruct/index.js';\n\nvar Cornerstone3DSR = {\n  Bidirectional: Bidirectional,\n  CobbAngle: CobbAngle,\n  Angle: Angle,\n  Length: Length,\n  CircleROI: CircleROI,\n  EllipticalROI: EllipticalROI,\n  RectangleROI: RectangleROI,\n  ArrowAnnotate: ArrowAnnotate,\n  Probe: Probe,\n  PlanarFreehandROI: PlanarFreehandROI,\n  UltrasoundDirectional: UltrasoundDirectional,\n  MeasurementReport: MeasurementReport,\n  CodeScheme: CodingScheme,\n  CORNERSTONE_3D_TAG: CORNERSTONE_3D_TAG\n};\nvar Cornerstone3DSEG = {\n  Segmentation: index\n};\nvar Cornerstone3DPMAP = {\n  ParametricMap: index$1\n};\nvar Cornerstone3DRT = {\n  RTSS: index$2\n};\n\nexport { Cornerstone3DPMAP, Cornerstone3DRT, Cornerstone3DSEG, Cornerstone3DSR };\n","import { createClass as _createClass, classCallCheck as _classCallCheck } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport { data } from 'dcmjs';\n\nvar Colors = data.Colors,\n  BitArray = data.BitArray;\n\n// TODO: Is there a better name for this? RGBAInt?\n// Should we move it to Colors.js\nfunction dicomlab2RGBA(cielab) {\n  var rgba = Colors.dicomlab2RGB(cielab).map(function (x) {\n    return Math.round(x * 255);\n  });\n  rgba.push(255);\n  return rgba;\n}\n\n// TODO: Copied these functions in from VTK Math so we don't need a dependency.\n// I guess we should put them somewhere\n// https://github.com/Kitware/vtk-js/blob/master/Sources/Common/Core/Math/index.js\nfunction cross(x, y, out) {\n  var Zx = x[1] * y[2] - x[2] * y[1];\n  var Zy = x[2] * y[0] - x[0] * y[2];\n  var Zz = x[0] * y[1] - x[1] * y[0];\n  out[0] = Zx;\n  out[1] = Zy;\n  out[2] = Zz;\n}\nfunction norm(x) {\n  var n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 3;\n  switch (n) {\n    case 1:\n      return Math.abs(x);\n    case 2:\n      return Math.sqrt(x[0] * x[0] + x[1] * x[1]);\n    case 3:\n      return Math.sqrt(x[0] * x[0] + x[1] * x[1] + x[2] * x[2]);\n    default:\n      {\n        var sum = 0;\n        for (var i = 0; i < n; i++) {\n          sum += x[i] * x[i];\n        }\n        return Math.sqrt(sum);\n      }\n  }\n}\nfunction normalize(x) {\n  var den = norm(x);\n  if (den !== 0.0) {\n    x[0] /= den;\n    x[1] /= den;\n    x[2] /= den;\n  }\n  return den;\n}\nfunction subtract(a, b, out) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n}\n\n// TODO: This is a useful utility on its own. We should move it somewhere?\n// dcmjs.adapters.vtk.Multiframe? dcmjs.utils?\nfunction geometryFromFunctionalGroups(dataset, PerFrameFunctionalGroups) {\n  var geometry = {};\n  var pixelMeasures = dataset.SharedFunctionalGroupsSequence.PixelMeasuresSequence;\n  var planeOrientation = dataset.SharedFunctionalGroupsSequence.PlaneOrientationSequence;\n\n  // Find the origin of the volume from the PerFrameFunctionalGroups' ImagePositionPatient values\n  //\n  // TODO: assumes sorted frames. This should read the ImagePositionPatient from each frame and\n  // sort them to obtain the first and last position along the acquisition axis.\n  var firstFunctionalGroup = PerFrameFunctionalGroups[0];\n  var lastFunctionalGroup = PerFrameFunctionalGroups[PerFrameFunctionalGroups.length - 1];\n  var firstPosition = firstFunctionalGroup.PlanePositionSequence.ImagePositionPatient.map(Number);\n  var lastPosition = lastFunctionalGroup.PlanePositionSequence.ImagePositionPatient.map(Number);\n  geometry.origin = firstPosition;\n\n  // NB: DICOM PixelSpacing is defined as Row then Column,\n  // unlike ImageOrientationPatient\n  geometry.spacing = [pixelMeasures.PixelSpacing[1], pixelMeasures.PixelSpacing[0], pixelMeasures.SpacingBetweenSlices].map(Number);\n  geometry.dimensions = [dataset.Columns, dataset.Rows, PerFrameFunctionalGroups.length].map(Number);\n  var orientation = planeOrientation.ImageOrientationPatient.map(Number);\n  var columnStepToPatient = orientation.slice(0, 3);\n  var rowStepToPatient = orientation.slice(3, 6);\n  geometry.planeNormal = [];\n  cross(columnStepToPatient, rowStepToPatient, geometry.planeNormal);\n  geometry.sliceStep = [];\n  subtract(lastPosition, firstPosition, geometry.sliceStep);\n  normalize(geometry.sliceStep);\n  geometry.direction = columnStepToPatient.concat(rowStepToPatient).concat(geometry.sliceStep);\n  return geometry;\n}\nvar Segmentation = /*#__PURE__*/function () {\n  function Segmentation() {\n    _classCallCheck(this, Segmentation);\n  }\n\n  /**\n   * Produces an array of Segments from an input DICOM Segmentation dataset\n   *\n   * Segments are returned with Geometry values that can be used to create\n   * VTK Image Data objects.\n   *\n   * @example Example usage to create VTK Volume actors from each segment:\n   *\n   * const actors = [];\n   * const segments = generateToolState(dataset);\n   * segments.forEach(segment => {\n   *   // now make actors using the segment information\n   *   const scalarArray = vtk.Common.Core.vtkDataArray.newInstance({\n   *        name: \"Scalars\",\n   *        numberOfComponents: 1,\n   *        values: segment.pixelData,\n   *    });\n   *\n   *    const imageData = vtk.Common.DataModel.vtkImageData.newInstance();\n   *    imageData.getPointData().setScalars(scalarArray);\n   *    imageData.setDimensions(geometry.dimensions);\n   *    imageData.setSpacing(geometry.spacing);\n   *    imageData.setOrigin(geometry.origin);\n   *    imageData.setDirection(geometry.direction);\n   *\n   *    const mapper = vtk.Rendering.Core.vtkVolumeMapper.newInstance();\n   *    mapper.setInputData(imageData);\n   *    mapper.setSampleDistance(2.);\n   *\n   *    const actor = vtk.Rendering.Core.vtkVolume.newInstance();\n   *    actor.setMapper(mapper);\n   *\n   *    actors.push(actor);\n   * });\n   *\n   * @param dataset\n   * @return {{}}\n   */\n  return _createClass(Segmentation, null, [{\n    key: \"generateSegments\",\n    value: function generateSegments(dataset) {\n      if (dataset.SegmentSequence.constructor.name !== \"Array\") {\n        dataset.SegmentSequence = [dataset.SegmentSequence];\n      }\n      dataset.SegmentSequence.forEach(function (segment) {\n        // TODO: other interesting fields could be extracted from the segment\n        // TODO: Read SegmentsOverlay field\n        // http://dicom.nema.org/medical/dicom/current/output/chtml/part03/sect_C.8.20.2.html\n\n        // TODO: Looks like vtkColor only wants RGB in 0-1 values.\n        // Why was this example converting to RGBA with 0-255 values?\n        var color = dicomlab2RGBA(segment.RecommendedDisplayCIELabValue);\n        segments[segment.SegmentNumber] = {\n          color: color,\n          functionalGroups: [],\n          offset: null,\n          size: null,\n          pixelData: null\n        };\n      });\n\n      // make a list of functional groups per segment\n      dataset.PerFrameFunctionalGroupsSequence.forEach(function (functionalGroup) {\n        var segmentNumber = functionalGroup.SegmentIdentificationSequence.ReferencedSegmentNumber;\n        segments[segmentNumber].functionalGroups.push(functionalGroup);\n      });\n\n      // determine per-segment index into the pixel data\n      // TODO: only handles one-bit-per pixel\n      var frameSize = Math.ceil(dataset.Rows * dataset.Columns / 8);\n      var nextOffset = 0;\n      Object.keys(segments).forEach(function (segmentNumber) {\n        var segment = segments[segmentNumber];\n        segment.numberOfFrames = segment.functionalGroups.length;\n        segment.size = segment.numberOfFrames * frameSize;\n        segment.offset = nextOffset;\n        nextOffset = segment.offset + segment.size;\n        var packedSegment = dataset.PixelData.slice(segment.offset, nextOffset);\n        segment.pixelData = BitArray.unpack(packedSegment);\n        var geometry = geometryFromFunctionalGroups(dataset, segment.functionalGroups);\n        segment.geometry = geometry;\n      });\n      return segments;\n    }\n  }]);\n}();\n\nexport { Segmentation as default };\n","import { CornerstoneSR, CornerstoneSEG, CornerstonePMAP } from './Cornerstone/index.js';\nimport { Cornerstone3DSR, Cornerstone3DSEG, Cornerstone3DPMAP, Cornerstone3DRT } from './Cornerstone3D/index.js';\nimport { VTKjsSEG } from './VTKjs/index.js';\nimport './enums/Events.js';\nimport './helpers/downloadDICOMData.js';\n\nvar adaptersSR = {\n  Cornerstone: CornerstoneSR,\n  Cornerstone3D: Cornerstone3DSR\n};\nvar adaptersSEG = {\n  Cornerstone: CornerstoneSEG,\n  Cornerstone3D: Cornerstone3DSEG,\n  VTKjs: VTKjsSEG\n};\nvar adaptersPMAP = {\n  Cornerstone: CornerstonePMAP,\n  Cornerstone3D: Cornerstone3DPMAP\n};\nvar adaptersRT = {\n  Cornerstone3D: Cornerstone3DRT\n};\n\nexport { adaptersPMAP, adaptersRT, adaptersSEG, adaptersSR };\n","import Segmentation from './Segmentation.js';\n\nvar VTKjsSEG = {\n  Segmentation: Segmentation\n};\n\nexport { VTKjsSEG };\n","\"use strict\"\n\nfunction iota(n) {\n  var result = new Array(n)\n  for(var i=0; i<n; ++i) {\n    result[i] = i\n  }\n  return result\n}\n\nmodule.exports = iota","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","var iota = require(\"iota-array\")\nvar isBuffer = require(\"is-buffer\")\n\nvar hasTypedArrays  = ((typeof Float64Array) !== \"undefined\")\n\nfunction compare1st(a, b) {\n  return a[0] - b[0]\n}\n\nfunction order() {\n  var stride = this.stride\n  var terms = new Array(stride.length)\n  var i\n  for(i=0; i<terms.length; ++i) {\n    terms[i] = [Math.abs(stride[i]), i]\n  }\n  terms.sort(compare1st)\n  var result = new Array(terms.length)\n  for(i=0; i<result.length; ++i) {\n    result[i] = terms[i][1]\n  }\n  return result\n}\n\nfunction compileConstructor(dtype, dimension) {\n  var className = [\"View\", dimension, \"d\", dtype].join(\"\")\n  if(dimension < 0) {\n    className = \"View_Nil\" + dtype\n  }\n  var useGetters = (dtype === \"generic\")\n\n  if(dimension === -1) {\n    //Special case for trivial arrays\n    var code =\n      \"function \"+className+\"(a){this.data=a;};\\\nvar proto=\"+className+\".prototype;\\\nproto.dtype='\"+dtype+\"';\\\nproto.index=function(){return -1};\\\nproto.size=0;\\\nproto.dimension=-1;\\\nproto.shape=proto.stride=proto.order=[];\\\nproto.lo=proto.hi=proto.transpose=proto.step=\\\nfunction(){return new \"+className+\"(this.data);};\\\nproto.get=proto.set=function(){};\\\nproto.pick=function(){return null};\\\nreturn function construct_\"+className+\"(a){return new \"+className+\"(a);}\"\n    var procedure = new Function(code)\n    return procedure()\n  } else if(dimension === 0) {\n    //Special case for 0d arrays\n    var code =\n      \"function \"+className+\"(a,d) {\\\nthis.data = a;\\\nthis.offset = d\\\n};\\\nvar proto=\"+className+\".prototype;\\\nproto.dtype='\"+dtype+\"';\\\nproto.index=function(){return this.offset};\\\nproto.dimension=0;\\\nproto.size=1;\\\nproto.shape=\\\nproto.stride=\\\nproto.order=[];\\\nproto.lo=\\\nproto.hi=\\\nproto.transpose=\\\nproto.step=function \"+className+\"_copy() {\\\nreturn new \"+className+\"(this.data,this.offset)\\\n};\\\nproto.pick=function \"+className+\"_pick(){\\\nreturn TrivialArray(this.data);\\\n};\\\nproto.valueOf=proto.get=function \"+className+\"_get(){\\\nreturn \"+(useGetters ? \"this.data.get(this.offset)\" : \"this.data[this.offset]\")+\n\"};\\\nproto.set=function \"+className+\"_set(v){\\\nreturn \"+(useGetters ? \"this.data.set(this.offset,v)\" : \"this.data[this.offset]=v\")+\"\\\n};\\\nreturn function construct_\"+className+\"(a,b,c,d){return new \"+className+\"(a,d)}\"\n    var procedure = new Function(\"TrivialArray\", code)\n    return procedure(CACHED_CONSTRUCTORS[dtype][0])\n  }\n\n  var code = [\"'use strict'\"]\n\n  //Create constructor for view\n  var indices = iota(dimension)\n  var args = indices.map(function(i) { return \"i\"+i })\n  var index_str = \"this.offset+\" + indices.map(function(i) {\n        return \"this.stride[\" + i + \"]*i\" + i\n      }).join(\"+\")\n  var shapeArg = indices.map(function(i) {\n      return \"b\"+i\n    }).join(\",\")\n  var strideArg = indices.map(function(i) {\n      return \"c\"+i\n    }).join(\",\")\n  code.push(\n    \"function \"+className+\"(a,\" + shapeArg + \",\" + strideArg + \",d){this.data=a\",\n      \"this.shape=[\" + shapeArg + \"]\",\n      \"this.stride=[\" + strideArg + \"]\",\n      \"this.offset=d|0}\",\n    \"var proto=\"+className+\".prototype\",\n    \"proto.dtype='\"+dtype+\"'\",\n    \"proto.dimension=\"+dimension)\n\n  //view.size:\n  code.push(\"Object.defineProperty(proto,'size',{get:function \"+className+\"_size(){\\\nreturn \"+indices.map(function(i) { return \"this.shape[\"+i+\"]\" }).join(\"*\"),\n\"}})\")\n\n  //view.order:\n  if(dimension === 1) {\n    code.push(\"proto.order=[0]\")\n  } else {\n    code.push(\"Object.defineProperty(proto,'order',{get:\")\n    if(dimension < 4) {\n      code.push(\"function \"+className+\"_order(){\")\n      if(dimension === 2) {\n        code.push(\"return (Math.abs(this.stride[0])>Math.abs(this.stride[1]))?[1,0]:[0,1]}})\")\n      } else if(dimension === 3) {\n        code.push(\n\"var s0=Math.abs(this.stride[0]),s1=Math.abs(this.stride[1]),s2=Math.abs(this.stride[2]);\\\nif(s0>s1){\\\nif(s1>s2){\\\nreturn [2,1,0];\\\n}else if(s0>s2){\\\nreturn [1,2,0];\\\n}else{\\\nreturn [1,0,2];\\\n}\\\n}else if(s0>s2){\\\nreturn [2,0,1];\\\n}else if(s2>s1){\\\nreturn [0,1,2];\\\n}else{\\\nreturn [0,2,1];\\\n}}})\")\n      }\n    } else {\n      code.push(\"ORDER})\")\n    }\n  }\n\n  //view.set(i0, ..., v):\n  code.push(\n\"proto.set=function \"+className+\"_set(\"+args.join(\",\")+\",v){\")\n  if(useGetters) {\n    code.push(\"return this.data.set(\"+index_str+\",v)}\")\n  } else {\n    code.push(\"return this.data[\"+index_str+\"]=v}\")\n  }\n\n  //view.get(i0, ...):\n  code.push(\"proto.get=function \"+className+\"_get(\"+args.join(\",\")+\"){\")\n  if(useGetters) {\n    code.push(\"return this.data.get(\"+index_str+\")}\")\n  } else {\n    code.push(\"return this.data[\"+index_str+\"]}\")\n  }\n\n  //view.index:\n  code.push(\n    \"proto.index=function \"+className+\"_index(\", args.join(), \"){return \"+index_str+\"}\")\n\n  //view.hi():\n  code.push(\"proto.hi=function \"+className+\"_hi(\"+args.join(\",\")+\"){return new \"+className+\"(this.data,\"+\n    indices.map(function(i) {\n      return [\"(typeof i\",i,\"!=='number'||i\",i,\"<0)?this.shape[\", i, \"]:i\", i,\"|0\"].join(\"\")\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"this.stride[\"+i + \"]\"\n    }).join(\",\")+\",this.offset)}\")\n\n  //view.lo():\n  var a_vars = indices.map(function(i) { return \"a\"+i+\"=this.shape[\"+i+\"]\" })\n  var c_vars = indices.map(function(i) { return \"c\"+i+\"=this.stride[\"+i+\"]\" })\n  code.push(\"proto.lo=function \"+className+\"_lo(\"+args.join(\",\")+\"){var b=this.offset,d=0,\"+a_vars.join(\",\")+\",\"+c_vars.join(\",\"))\n  for(var i=0; i<dimension; ++i) {\n    code.push(\n\"if(typeof i\"+i+\"==='number'&&i\"+i+\">=0){\\\nd=i\"+i+\"|0;\\\nb+=c\"+i+\"*d;\\\na\"+i+\"-=d}\")\n  }\n  code.push(\"return new \"+className+\"(this.data,\"+\n    indices.map(function(i) {\n      return \"a\"+i\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"c\"+i\n    }).join(\",\")+\",b)}\")\n\n  //view.step():\n  code.push(\"proto.step=function \"+className+\"_step(\"+args.join(\",\")+\"){var \"+\n    indices.map(function(i) {\n      return \"a\"+i+\"=this.shape[\"+i+\"]\"\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"b\"+i+\"=this.stride[\"+i+\"]\"\n    }).join(\",\")+\",c=this.offset,d=0,ceil=Math.ceil\")\n  for(var i=0; i<dimension; ++i) {\n    code.push(\n\"if(typeof i\"+i+\"==='number'){\\\nd=i\"+i+\"|0;\\\nif(d<0){\\\nc+=b\"+i+\"*(a\"+i+\"-1);\\\na\"+i+\"=ceil(-a\"+i+\"/d)\\\n}else{\\\na\"+i+\"=ceil(a\"+i+\"/d)\\\n}\\\nb\"+i+\"*=d\\\n}\")\n  }\n  code.push(\"return new \"+className+\"(this.data,\"+\n    indices.map(function(i) {\n      return \"a\" + i\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"b\" + i\n    }).join(\",\")+\",c)}\")\n\n  //view.transpose():\n  var tShape = new Array(dimension)\n  var tStride = new Array(dimension)\n  for(var i=0; i<dimension; ++i) {\n    tShape[i] = \"a[i\"+i+\"]\"\n    tStride[i] = \"b[i\"+i+\"]\"\n  }\n  code.push(\"proto.transpose=function \"+className+\"_transpose(\"+args+\"){\"+\n    args.map(function(n,idx) { return n + \"=(\" + n + \"===undefined?\" + idx + \":\" + n + \"|0)\"}).join(\";\"),\n    \"var a=this.shape,b=this.stride;return new \"+className+\"(this.data,\"+tShape.join(\",\")+\",\"+tStride.join(\",\")+\",this.offset)}\")\n\n  //view.pick():\n  code.push(\"proto.pick=function \"+className+\"_pick(\"+args+\"){var a=[],b=[],c=this.offset\")\n  for(var i=0; i<dimension; ++i) {\n    code.push(\"if(typeof i\"+i+\"==='number'&&i\"+i+\">=0){c=(c+this.stride[\"+i+\"]*i\"+i+\")|0}else{a.push(this.shape[\"+i+\"]);b.push(this.stride[\"+i+\"])}\")\n  }\n  code.push(\"var ctor=CTOR_LIST[a.length+1];return ctor(this.data,a,b,c)}\")\n\n  //Add return statement\n  code.push(\"return function construct_\"+className+\"(data,shape,stride,offset){return new \"+className+\"(data,\"+\n    indices.map(function(i) {\n      return \"shape[\"+i+\"]\"\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"stride[\"+i+\"]\"\n    }).join(\",\")+\",offset)}\")\n\n  //Compile procedure\n  var procedure = new Function(\"CTOR_LIST\", \"ORDER\", code.join(\"\\n\"))\n  return procedure(CACHED_CONSTRUCTORS[dtype], order)\n}\n\nfunction arrayDType(data) {\n  if(isBuffer(data)) {\n    return \"buffer\"\n  }\n  if(hasTypedArrays) {\n    switch(Object.prototype.toString.call(data)) {\n      case \"[object Float64Array]\":\n        return \"float64\"\n      case \"[object Float32Array]\":\n        return \"float32\"\n      case \"[object Int8Array]\":\n        return \"int8\"\n      case \"[object Int16Array]\":\n        return \"int16\"\n      case \"[object Int32Array]\":\n        return \"int32\"\n      case \"[object Uint8Array]\":\n        return \"uint8\"\n      case \"[object Uint16Array]\":\n        return \"uint16\"\n      case \"[object Uint32Array]\":\n        return \"uint32\"\n      case \"[object Uint8ClampedArray]\":\n        return \"uint8_clamped\"\n      case \"[object BigInt64Array]\":\n        return \"bigint64\"\n      case \"[object BigUint64Array]\":\n        return \"biguint64\"\n    }\n  }\n  if(Array.isArray(data)) {\n    return \"array\"\n  }\n  return \"generic\"\n}\n\nvar CACHED_CONSTRUCTORS = {\n  \"float32\":[],\n  \"float64\":[],\n  \"int8\":[],\n  \"int16\":[],\n  \"int32\":[],\n  \"uint8\":[],\n  \"uint16\":[],\n  \"uint32\":[],\n  \"array\":[],\n  \"uint8_clamped\":[],\n  \"bigint64\": [],\n  \"biguint64\": [],\n  \"buffer\":[],\n  \"generic\":[]\n}\n\n;(function() {\n  for(var id in CACHED_CONSTRUCTORS) {\n    CACHED_CONSTRUCTORS[id].push(compileConstructor(id, -1))\n  }\n});\n\nfunction wrappedNDArrayCtor(data, shape, stride, offset) {\n  if(data === undefined) {\n    var ctor = CACHED_CONSTRUCTORS.array[0]\n    return ctor([])\n  } else if(typeof data === \"number\") {\n    data = [data]\n  }\n  if(shape === undefined) {\n    shape = [ data.length ]\n  }\n  var d = shape.length\n  if(stride === undefined) {\n    stride = new Array(d)\n    for(var i=d-1, sz=1; i>=0; --i) {\n      stride[i] = sz\n      sz *= shape[i]\n    }\n  }\n  if(offset === undefined) {\n    offset = 0\n    for(var i=0; i<d; ++i) {\n      if(stride[i] < 0) {\n        offset -= (shape[i]-1)*stride[i]\n      }\n    }\n  }\n  var dtype = arrayDType(data)\n  var ctor_list = CACHED_CONSTRUCTORS[dtype]\n  while(ctor_list.length <= d+1) {\n    ctor_list.push(compileConstructor(dtype, ctor_list.length-1))\n  }\n  var ctor = ctor_list[d+1]\n  return ctor(data, shape, stride, offset)\n}\n\nmodule.exports = wrappedNDArrayCtor\n"],"names":["_arrayLikeToArray","r","a","length","e","n","Array","asyncGeneratorStep","t","o","c","i","u","value","done","Promise","resolve","then","_asyncToGenerator","this","arguments","apply","_next","_throw","_classCallCheck","TypeError","_defineProperties","enumerable","configurable","writable","Object","defineProperty","_toPropertyKey","key","_createClass","prototype","_createForOfIteratorHelper","Symbol","iterator","isArray","_unsupportedIterableToArray","F","s","f","call","next","return","_defineProperty","ownKeys","keys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","push","_objectSpread2","forEach","getOwnPropertyDescriptors","defineProperties","_regeneratorRuntime","hasOwnProperty","asyncIterator","toStringTag","define","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","h","l","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","__await","callInvokeWithMethodAndArg","Error","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","resultName","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","_slicedToArray","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","_toConsumableArray","_arrayWithoutHoles","from","_iterableToArray","_nonIterableSpread","toPrimitive","String","Number","_toPrimitive","toString","test","toArray","x","codeMeaningEquals","codeMeaningName","contentItem","ConceptNameCodeSequence","CodeMeaning","datasetToDict","downloadDICOMData","bufferOrDataset","filename","blob","ArrayBuffer","Blob","_meta","buffer","write","link","document","createElement","href","window","URL","createObjectURL","download","click","TID1500","addAccessors","StructuredReport","Normalizer","TID1500MeasurementReport","TID1501MeasurementGroup","DicomMetaDictionary","FINDING","CodingSchemeDesignator","CodeValue","FINDING_SITE","FINDING_SITE_OLD","codeValueMatch","group","code","oldCode","getMeasurementGroup","toolType","toolData","ReferencedSOPSequence","toolTypeData","toolClass","MeasurementReport","CORNERSTONE_TOOL_CLASSES_BY_TOOL_TYPE","data","Measurements","map","tool","args","getTID300RepresentationArguments","TID300Representation","getTID300ContentItem","MeasurementGroup","ContentSequence","contentSequenceArr","findingGroup","find","findingSiteGroups","NUMGroup","ValueType","SCOORDGroup","ReferencedSOPInstanceUID","ReferencedFrameNumber","defaultState","sopInstanceUid","frameIndex","finding","ConceptCodeSequence","undefined","findingSites","fsg","description","findingSite","location","toolState","metadataProvider","options","allMeasurementGroups","firstImageId","generalSeriesModule","get","studyInstanceUID","seriesInstanceUID","imageId","sopCommonModule","frameNumber","toolTypes","ReferencedSOPClassUID","sopClassUID","sopInstanceUID","isMultiframeSOPClassUID","measurementGroups","concat","_MeasurementReport","TID1501MeasurementGroups","fileMetaInformationVersionArray","Uint8Array","derivationSourceDataset","StudyInstanceUID","SeriesInstanceUID","FileMetaInformationVersion","Value","vr","TransferSyntaxUID","ImplementationClassUID","uid","ImplementationVersionName","_vrMap","PixelData","report","dataset","assign","SpecificCharacterSet","hooks","ContentTemplateSequence","TemplateIdentifier","imagingMeasurementContent","measurementData","cornerstoneToolClasses","CORNERSTONE_TOOL_CLASSES_BY_UTILITY_TYPE","registeredToolClasses","measurementGroup","TrackingIdentifierValue","TextValue","getToolClass","tc","isValidCornerstoneTrackingIdentifier","measurement","getMeasurementData","console","log","utilityToolType","MEASUREMENT_BY_TOOLTYPE","CORNERSTONE_4_TAG","TID300Length","TID300","Length","LENGTH","_MeasurementReport$ge","getSetupMeasurementData","state","MeasuredValueSequence","NumericValue","handles","start","end","textBox","hasMoved","movesIndependently","drawnIndependently","allowedOutsideImage","hasBoundingBox","_SCOORDGroup$GraphicD","GraphicData","point1","point2","distance","trackingIdentifierTextValue","TrackingIdentifier","includes","_TrackingIdentifier$s2","split","cornerstone4Tag","registerTool","TID300Polyline","Polyline","FreehandRoi","points","active","cachedStats","area","color","invalidated","_tool$cachedStats","_cachedStats$area","_cachedStats$perimete","perimeter","TID300Bidirectional","Bidirectional","BIDIRECTIONAL","longAxisNUMGroup","longAxisSCOORDGroup","shortAxisNUMGroup","shortAxisSCOORDGroup","longestDiameter","shortestDiameter","bottomRight","Math","max","highlight","index","perpendicularStart","perpendicularEnd","isCreating","toolName","visible","_tool$handles","longAxis","shortAxis","longAxisLength","shortAxisLength","TID300Ellipse","Ellipse","ELLIPTICALROI","EllipticalRoi","majorAxis","minorAxis","minorAxisLength","sqrt","pow","minorAxisDirection","halfMinorAxisLength","corner1","corner2","initialRotation","halfXLength","abs","halfYLength","center","TID300Circle","Circle","CIRCLEROI","CircleRoi","radius","PI","TID300Point","Point","ARROW_ANNOTATE","CORNERSTONEFREETEXT","ArrowAnnotate","text","TID300RepresentationArguments","TID300CobbAngle","CobbAngle","COBB_ANGLE","rAngle","start2","end2","point3","point4","TID300Angle","Angle","ANGLE","middle","RectangleRoi","DicomMessage","getDatasetsFromImages","images","isMultiframe","datasets","arrayBuffer","byteArray","dicomData","readFile","naturalizeDataset","dict","namifyDataset","meta","_arrayBuffer","_dicomData","_dataset","normalizeToDataset","_utilities$orientatio","orientation","rotateDirectionCosinesInPlane","flipIOP","flipImageOrientationPatient","flipMatrix2D","rotateMatrix902D","datasetToBlob","BitArray","SegmentationDerivation","Segmentation","generateSegmentation","brushData","includeSliceSpacing","segments","image0","dims","columns","rows","z","xy","_getSegCount","seg","multiframe","_createSegFromImages","_getNumberOfFramesPer","segmentIndicies","referencedFramesPerSegment","imageIdSpecificToolState","_i2","segIdx","brush","pixelData","_getNumberOfFramesPerSegment","NumberOfFrames","setNumberOfFrames","_i","segmentIndex","referencedFrameIndicies","referencedFrameNumbers","element","segment","addSegment","_extractCornerstoneToolsPixelData","bitPackPixelData","generateToolState","imageIds","imagePlaneModule","warn","validOrientations","iop","orientations","iop90","getValidOrientations","rowCosines","columnCosines","SharedFunctionalGroupsSequence","sharedImageOrientationPatient","PlaneOrientationSequence","ImageOrientationPatient","sliceLength","Columns","Rows","segMetadata","segmentSequence","SegmentSequence","seriesInstanceUid","ReferencedSeriesSequence","getSegmentMetadata","segType","SegmentationType","unpack","MaximumFractionalValue","onlyMaxAndZero","unpackPixelData","PerFrameFunctionalGroupsSequence","inPlane","PerFrameFunctionalGroups","ImageOrientationPatientI","alignedPixelDataI","alignPixelDataWithSourceData","SegmentIdentificationSequence","ReferencedSegmentNumber","addImageIdSpecificBrushToolState","getImageIdOfSourceImage","DerivationImageSequence","SourceImageSequence","referencedFrames","pixelDataIndex","brushPixelData","numSegments","pixelData2D","brushDataI","cToolsPixelData","imageIdFrameNumber","getImageIdOfReferencedFrame","getImageIdOfReferencedSingleFramedSOPInstance","compareIOP","dx","iop1","iop2","Events","nearlyEqual","compareArrays","array1","array2","tolerance","checkOrientation","sourceDataDimensions","some","operation","absDotColumnCosines","absDotRowCosines","checkIfPerpendicular","Events$1","_utilities$compressio","compression","encode","decode","generateSegmentationDefaultOptions","rleEncode","fillSegmentation","segmentation","inputLabelmaps3D","userOptions","labelmaps3D","numberOfFrames","referencedFramesPerLabelmap","_loop","labelmap3D","labelmapIndex","labelmaps2D","metadata","_loop2","labelmap2D","segmentsOnLabelmap","_labelmapIndex","segmentMetadata","labelmaps","_getLabelmapsFromReferencedFrameIndicies","addSegmentFromLabelmap","rleEncodedFrames","assignToDataset","BitsAllocated","BitsStored","HighBit","SegmentationFractionalType","frame","_generateToolState","_callee","_options$skipOverlapp","skipOverlapping","_options$tolerance","_options$TypedArrayCo","TypedArrayConstructor","_options$maxBytesPerC","maxBytesPerChunk","eventTarget","triggerEvent","pixelDataChunks","sopUIDImageIdIndexMap","overlapping","insertFunction","segmentsOnFrameArray","segmentsOnFrame","arrayBufferLength","labelmapBufferArray","imageIdMaps","segmentsPixelIndices","overlappingSegments","centroidXYZ","_context","reduce","acc","checkSEGsOverlapping","t0","insertOverlappingPixelDataPlanar","insertPixelDataPlanar","BYTES_PER_ELEMENT","curr","indices","Map","imageIdIndexBufferIndex","centroids","calculateCentroid","set","findReferenceSourceImageId","frameSegment","FrameOfReferenceUID","PerFrameFunctionalGroup","frameSourceImageSequence","getImageIdOfSourceImageBySourceImageSequence","ReferencedSeriesInstanceUID","PlanePositionSequence","ImagePositionPatient","imageIdsIndexc","sourceImageMetadata","getImageIdOfSourceImagebyGeometry","groupsLen","frameSegmentsMapping","_loop3","getSegmentIndex","imageIdIndex","findIndex","has","segmentArray","_step","_iterator","entries","role","temp2DArray","fill","_frameSegment","view","readFromUnpackedChunks","j","len","err","M","m","tempBuffer","tempSegmentsOnFrame","structuredClone","numberOfSegs","segmentIndexToProcess","_loop4","byteOffset","labelmap2DView","segmentOnFrame","chunkSize","ceil","shouldTriggerEvent","processInChunks","min","indexCache","segmentIndexObject","percentComplete","round","SEGMENTATION_LOAD_PROGRESS","setTimeout","error","bitArray","chunks","maxBitsPerChunk","numberOfChunks","startBit","endBit","startByte","floor","endByte","chunk","unpackedChunk","getUnpackedChunks","offset","mapping","totalBytes","total","startChunkIndex","startOffsetInChunk","endChunkIndex","endOffsetInChunk","chunkIndex","getUnpackedOffsetAndLength","result","resultOffset","xAcc","yAcc","zAcc","worldXAcc","worldYAcc","worldZAcc","count","_i3","_Object$entries","_Object$entries$_i","bufferIndices","_step2","imagePositionPatient","rowPixelSpacing","columnPixelSpacing","_iterator2","bufferIndex","worldX","worldY","worldZ","debug","image","world","_x","_x2","_x3","_x4","labelmaps3DorBrushData","cornerstoneToolsVersion","_args","getPixelData","Perpendicular","Oblique","sourcePixelData","targetPixelData","numSlices","sourceSliceDataView","TypedArrayClass","_multiframe$PixelRepr","Uint16Array","Int16Array","Uint32Array","Int32Array","PixelRepresentation","FloatPixelData","Float32Array","DoubleFloatPixelData","Float64Array","imageIdsIndex","CornerstoneSR","CornerstoneSEG","CornerstonePMAP","ParametricMap","CORNERSTONE_3D_TAG","CodingScheme","codeValues","_defaultState$finding","cornersoneFreeTextCodingValue","freeTextLabel","fs","sopInstanceUIDToImageIdMap","referencedImageId","annotation","annotationUID","frameOfReferenceUID","label","getCornerstoneLabelFromDefaultState","worldToImageCoords","sopInstanceUIDsToSeriesInstanceUIDMap","derivationSourceDatasets","generateDatasetMeta","instance","dsd","generateDerivationSourceDataset","tid1500MeasurementReport","imageToWorldCoords","_hooks$getToolClass","measurementGroupContentSequence","TrackingUniqueIdentifierGroup","TrackingUniqueIdentifierValue","UID","TrackingUniqueIdentifier","_Bidirectional","worldCoords","point","imagePixelModule","xOffset","yOffset","secondPoint","arrowFirst","activeHandleIndex","_data$handles","pointImage","pointImage2","cornerstone3DTag","_Angle","width","_data$cachedStats","shortAxisPoints","longAxisPoints","_ref","firstPointPairs","secondPointPairs","longAxisStartImage","longAxisEndImage","shortAxisStartImage","shortAxisEndImage","_CobbAngle","MEASUREMENT_TYPE","angle","start1","_CircleROI","end1","trackingIdentifier","_trackingIdentifier$s2","toLowerCase","CircleROI","pointsWorld","worldPos","_EllipticalROI","_RectangleROI","EPSILON","EllipticalROI","majorAxisStart","majorAxisEnd","minorAxisStart","minorAxisEnd","majorAxisVec","minorAxisVec","columnCosinesVec","projectedMajorAxisOnColVec","projectedMinorAxisOnColVec","absoluteOfMajorDotProduct","absoluteOfMinorDotProduct","ellipsePoints","top","bottom","left","right","rotation","TOOLTYPE","RectangleROI","corners","_PlanarFreehandROI","PLANARFREEHANDROI","PlanarFreehandROI","isOpenContour","contour","polyline","closed","_data$contour","firstPoint","areaUnit","modalityUnit","mean","stdDev","_UltrasoundDirectional","PROBE","Probe","ULTRASOUND_DIRECTIONAL","UltrasoundDirectional","SOPClassUID","SopClassUID","SOPInstanceUID","SopInstanceUID","voxelManager","getScalarData","_createMultiframeSegmentationFromReferencedImages","generateLabelMaps2DFrom3D","scalarData","dimensions","segmentsOnLabelmap3D","Set","add","generateToolStateCornerstone","getReferencedFrameOfReferenceSequence","RTReferencedStudySequence","RTReferencedSeriesSequence","ContourImageSequence","ReferencedInstanceSequence","getReferencedSeriesSequence","_index","DicomMetadataStore","series","getSeries","ReferencedSeries","instances","getStructureSetModule","ROINumber","ROIName","ROIDescription","ROIGenerationAlgorithm","ReferencedFrameOfReferenceUID","_utilities$contours","utilities","generateContourSetsFromLabelmap","AnnotationToPointData","generateRTSSFromSegmentations","segmentations","roiContours","contourSet","segIndex","contourSequence","sliceContours","sliceContour","sopCommon","sliceContourPolyData","polyData","contours","ContourGeometricType","NumberOfContourPoints","contourPoints","ContourData","pointData","toFixed","ContourNumber","segLabel","ROIContour","_initializeDataset","roiContour","ROIDisplayColor","ContourSequence","ReferencedROINumber","StructureSetROISequence","ROIContourSequence","ReferencedFrameOfReferenceSequence","generateRTSSFromAnnotations","annotations","convert","RTROIObservationsSequence","ObservationNumber","RTROIInterpretedType","ROIInterpreter","getRTROIObservationsSequence","rtMetadata","imgMetadata","rtSOPInstanceUID","patientModule","generalStudyModule","patientStudyModule","patientDemographicModule","Modality","modality","PatientID","patientId","PatientName","patientName","PatientBirthDate","PatientAge","patientAge","PatientSex","patientSex","PatientWeight","patientWeight","StudyDate","studyDate","StudyTime","studyTime","StudyID","AccessionNumber","accessionNumber","getPatientModule","rtSeriesModule","SeriesNumber","getRTSeriesModule","Manufacturer","PositionReferenceIndicator","StructureSetLabel","StructureSetName","ReferringPhysicianName","OperatorsName","StructureSetDate","date","StructureSetTime","time","Cornerstone3DSR","CodeScheme","Cornerstone3DSEG","Cornerstone3DPMAP","Cornerstone3DRT","RTSS","Colors","normalize","den","sum","norm","cielab","rgba","RecommendedDisplayCIELabValue","dicomlab2RGB","SegmentNumber","functionalGroups","size","functionalGroup","segmentNumber","frameSize","nextOffset","packedSegment","geometry","pixelMeasures","PixelMeasuresSequence","planeOrientation","firstFunctionalGroup","lastFunctionalGroup","firstPosition","lastPosition","origin","spacing","PixelSpacing","SpacingBetweenSlices","out","Zx","Zy","Zz","columnStepToPatient","rowStepToPatient","planeNormal","sliceStep","b","subtract","direction","geometryFromFunctionalGroups","adaptersSR","Cornerstone","Cornerstone3D","adaptersSEG","VTKjs","adaptersPMAP","adaptersRT","module","exports","obj","isBuffer","iota","hasTypedArrays","compare1st","order","stride","terms","sort","compileConstructor","dtype","dimension","className","join","useGetters","Function","procedure","CACHED_CONSTRUCTORS","index_str","shapeArg","strideArg","a_vars","c_vars","tShape","tStride","idx","shape","ctor","array","sz","arrayDType","ctor_list"],"sourceRoot":""}