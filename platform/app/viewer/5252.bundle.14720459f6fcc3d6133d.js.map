{"version":3,"file":"5252.bundle.14720459f6fcc3d6133d.js","mappings":"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","sources":["webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/RenderingEngine/helpers/cpuFallback/drawImageSync.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/RenderingEngine/helpers/cpuFallback/rendering/calculateTransform.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/RenderingEngine/helpers/cpuFallback/rendering/getDefaultViewport.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/enums/BlendModes.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/enums/GeometryType.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/enums/CalibrationTypes.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/enums/GenerateImageType.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/getEnabledElement.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/init.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/loaders/imageLoader.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/loaders/volumeLoader.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/ProgressiveIterator.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/RLEVoxelMap.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/actorCheck.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/applyPreset.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/autoLoad.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/clamp.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/colormap.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/createLinearRGBTransferFunction.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/createSigmoidRGBTransferFunction.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/decimate.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/deepClone.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/getClosestImageId.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/getImageSliceDataForVolumeViewport.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/getMinMax.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/getScalingParameters.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/getSliceRange.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/getSpacingInNormalDirection.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/getTargetVolumeAndSpacingInNormalDir.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/getViewportsWithVolumeId.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/getVoiFromSigmoidRGBTransferFunction.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/getVolumeActorCorners.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/getVolumeId.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/getVolumeSliceRangeInfo.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/getVolumeViewportScrollInfo.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/hasFloatScalingParameters.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/hasNaNValues.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/imageIdToURI.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/imageRetrieveMetadataProvider.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/eventListener/TargetEventListeners.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/eventListener/MultiTargetEventListenerManager.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/scaleRgbTransferFunction.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/getRuntimeId.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/calibratedPixelSpacingMetadataProvider.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/isOpposite.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/indexWithinDimensions.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/getVolumeViewportsContainingSameVolumes.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/isPTPrescaledWithSUV.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/renderToCanvasGPU.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/renderToCanvasCPU.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/loadImageToCanvas.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/worldToImageCoords.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/imageToWorldCoords.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/getViewportsWithImageURI.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/getClosestStackImageIndexForPoint.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/getCurrentVolumeViewportSlice.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/spatialRegistrationMetadataProvider.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/calculateViewportsSpatialRegistration.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/getViewportImageCornersInWorld.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/PointsManager.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/getImageLegacy.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/isValidVolume.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/isVideoTransferSyntax.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/convertStackToVolumeViewport.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/convertVolumeToStackViewport.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/roundNumber.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/convertToGrayscale.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/getViewportImageIds.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/getRandomSampleFromArray.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/color.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/deepEqual.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/splitImageIdsBy4DTags.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/getDynamicVolumeInfo.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/scaleArray.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/clip.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/scroll.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/jumpToSlice.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/index.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/getViewportModality.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/invertRgbTransferFunction.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/isEqual.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/makeVolumeMetadata.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/planar.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/pointInShapeCallback.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/snapFocalPointToSlice.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/sortImageIdsAndGetSpacing.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/transferFunctionUtils.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/transformCanvasToIJK.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/transformIndexToWorld.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/transformWorldToIndex.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/updateVTKImageDataWithCornerstoneImage.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/utilities/windowLevel.js","webpack:///../../../node_modules/@cornerstonejs/core/dist/esm/Settings.js","webpack:///../../../node_modules/@icr/polyseg-wasm/dist/ICRPolySeg.js","webpack:///../../../node_modules/@icr/polyseg-wasm/dist/index.js","webpack:///../../../node_modules/@kitware/vtk.js/Filters/General/ContourLoopExtraction.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/boundingBox/extend2DBoundingBoxInViewAxis.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/boundingBox/getBoundingBoxAroundShape.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/math/polyline/isClosed.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/math/point/distanceToPointSquared.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/math/polyline/containsPoint.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/math/polyline/getAABB.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/math/polyline/combinePolyline.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/math/polyline/projectTo2D.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/planar/filterAnnotationsWithinSlice.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/planar/getPointInLineOfSightWithCriteria.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/planar/isPlaneIntersectingAABB.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/planar/filterAnnotationsWithinPlane.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/planar/index.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/workers/polySegConverters.js","webpack:///../../../node_modules/@kitware/vtk.js/Common/Core/CellArray.js","webpack:///../../../node_modules/@kitware/vtk.js/Common/Core/DataArray/Constants.js","webpack:///../../../node_modules/@kitware/vtk.js/Common/DataModel/DataSetAttributes/Constants.js","webpack:///../../../node_modules/@kitware/vtk.js/Common/DataModel/ImageData.js","webpack:///../../../node_modules/comlink/dist/esm/comlink.mjs"],"sourcesContent":["import now from './rendering/now';\nimport { renderColorImage } from './rendering/renderColorImage';\nimport { renderGrayscaleImage } from './rendering/renderGrayscaleImage';\nimport { renderPseudoColorImage } from './rendering/renderPseudoColorImage';\nexport default function (enabledElement, invalidated) {\n    const image = enabledElement.image;\n    if (!enabledElement.canvas || !enabledElement.image) {\n        return;\n    }\n    const start = now();\n    image.stats = {\n        lastGetPixelDataTime: -1.0,\n        lastStoredPixelDataToCanvasImageDataTime: -1.0,\n        lastPutImageDataTime: -1.0,\n        lastRenderTime: -1.0,\n        lastLutGenerateTime: -1.0,\n    };\n    if (image) {\n        let render = image.render;\n        if (!render) {\n            if (enabledElement.viewport.colormap) {\n                render = renderPseudoColorImage;\n            }\n            else if (image.color) {\n                render = renderColorImage;\n            }\n            else {\n                render = renderGrayscaleImage;\n            }\n        }\n        render(enabledElement, invalidated);\n    }\n    const renderTimeInMs = now() - start;\n    image.stats.lastRenderTime = renderTimeInMs;\n    enabledElement.invalid = false;\n    enabledElement.needsRedraw = false;\n}\n","import { Transform } from './transform';\nexport default function (enabledElement, scale) {\n    const transform = new Transform();\n    if (!enabledElement.viewport.displayedArea) {\n        return transform;\n    }\n    transform.translate(enabledElement.canvas.width / 2, enabledElement.canvas.height / 2);\n    const angle = enabledElement.viewport.rotation;\n    if (angle !== 0) {\n        transform.rotate((angle * Math.PI) / 180);\n    }\n    let widthScale = enabledElement.viewport.scale;\n    let heightScale = enabledElement.viewport.scale;\n    const width = enabledElement.viewport.displayedArea.brhc.x -\n        (enabledElement.viewport.displayedArea.tlhc.x - 1);\n    const height = enabledElement.viewport.displayedArea.brhc.y -\n        (enabledElement.viewport.displayedArea.tlhc.y - 1);\n    if (enabledElement.viewport.displayedArea.presentationSizeMode === 'NONE') {\n        if (enabledElement.image.rowPixelSpacing <\n            enabledElement.image.columnPixelSpacing) {\n            widthScale *=\n                enabledElement.image.columnPixelSpacing /\n                    enabledElement.image.rowPixelSpacing;\n        }\n        else if (enabledElement.image.columnPixelSpacing <\n            enabledElement.image.rowPixelSpacing) {\n            heightScale *=\n                enabledElement.image.rowPixelSpacing /\n                    enabledElement.image.columnPixelSpacing;\n        }\n    }\n    else {\n        widthScale = enabledElement.viewport.displayedArea.columnPixelSpacing;\n        heightScale = enabledElement.viewport.displayedArea.rowPixelSpacing;\n        if (enabledElement.viewport.displayedArea.presentationSizeMode ===\n            'SCALE TO FIT') {\n            const verticalScale = enabledElement.canvas.height / (height * heightScale);\n            const horizontalScale = enabledElement.canvas.width / (width * widthScale);\n            widthScale = heightScale = Math.min(horizontalScale, verticalScale);\n            if (enabledElement.viewport.displayedArea.rowPixelSpacing <\n                enabledElement.viewport.displayedArea.columnPixelSpacing) {\n                widthScale *=\n                    enabledElement.viewport.displayedArea.columnPixelSpacing /\n                        enabledElement.viewport.displayedArea.rowPixelSpacing;\n            }\n            else if (enabledElement.viewport.displayedArea.columnPixelSpacing <\n                enabledElement.viewport.displayedArea.rowPixelSpacing) {\n                heightScale *=\n                    enabledElement.viewport.displayedArea.rowPixelSpacing /\n                        enabledElement.viewport.displayedArea.columnPixelSpacing;\n            }\n        }\n    }\n    transform.scale(widthScale, heightScale);\n    if (angle !== 0) {\n        transform.rotate((-angle * Math.PI) / 180);\n    }\n    transform.translate(enabledElement.viewport.translation.x, enabledElement.viewport.translation.y);\n    if (angle !== 0) {\n        transform.rotate((angle * Math.PI) / 180);\n    }\n    if (scale !== undefined) {\n        transform.scale(scale, scale);\n    }\n    if (enabledElement.viewport.hflip) {\n        transform.scale(-1, 1);\n    }\n    if (enabledElement.viewport.vflip) {\n        transform.scale(1, -1);\n    }\n    transform.translate(-width / 2, -height / 2);\n    return transform;\n}\n","import createViewport from './createViewport';\nimport getImageFitScale from './getImageFitScale';\nexport default function (canvas, image, modality, colormap) {\n    if (canvas === undefined) {\n        throw new Error('getDefaultViewport: parameter canvas must not be undefined');\n    }\n    if (image === undefined) {\n        return createViewport();\n    }\n    const scale = getImageFitScale(canvas, image, 0).scaleFactor;\n    let voi;\n    if (modality === 'PT' && image.isPreScaled) {\n        voi = {\n            windowWidth: 5,\n            windowCenter: 2.5,\n        };\n    }\n    else if (image.windowWidth !== undefined &&\n        image.windowCenter !== undefined) {\n        voi = {\n            windowWidth: Array.isArray(image.windowWidth)\n                ? image.windowWidth[0]\n                : image.windowWidth,\n            windowCenter: Array.isArray(image.windowCenter)\n                ? image.windowCenter[0]\n                : image.windowCenter,\n        };\n    }\n    return {\n        scale,\n        translation: {\n            x: 0,\n            y: 0,\n        },\n        voi,\n        invert: image.invert,\n        pixelReplication: false,\n        rotation: 0,\n        hflip: false,\n        vflip: false,\n        modalityLUT: image.modalityLUT,\n        modality,\n        voiLUT: image.voiLUT,\n        colormap: colormap !== undefined ? colormap : image.colormap,\n        displayedArea: {\n            tlhc: {\n                x: 1,\n                y: 1,\n            },\n            brhc: {\n                x: image.columns,\n                y: image.rows,\n            },\n            rowPixelSpacing: image.rowPixelSpacing === undefined ? 1 : image.rowPixelSpacing,\n            columnPixelSpacing: image.columnPixelSpacing === undefined ? 1 : image.columnPixelSpacing,\n            presentationSizeMode: 'NONE',\n        },\n    };\n}\n","import vtkConstants from '@kitware/vtk.js/Rendering/Core/VolumeMapper/Constants';\nconst { BlendMode } = vtkConstants;\nvar BlendModes;\n(function (BlendModes) {\n    BlendModes[BlendModes[\"COMPOSITE\"] = BlendMode.COMPOSITE_BLEND] = \"COMPOSITE\";\n    BlendModes[BlendModes[\"MAXIMUM_INTENSITY_BLEND\"] = BlendMode.MAXIMUM_INTENSITY_BLEND] = \"MAXIMUM_INTENSITY_BLEND\";\n    BlendModes[BlendModes[\"MINIMUM_INTENSITY_BLEND\"] = BlendMode.MINIMUM_INTENSITY_BLEND] = \"MINIMUM_INTENSITY_BLEND\";\n    BlendModes[BlendModes[\"AVERAGE_INTENSITY_BLEND\"] = BlendMode.AVERAGE_INTENSITY_BLEND] = \"AVERAGE_INTENSITY_BLEND\";\n})(BlendModes || (BlendModes = {}));\nexport default BlendModes;\n","var GeometryType;\n(function (GeometryType) {\n    GeometryType[\"CONTOUR\"] = \"CONTOUR\";\n    GeometryType[\"SURFACE\"] = \"SURFACE\";\n})(GeometryType || (GeometryType = {}));\nexport default GeometryType;\n","export var CalibrationTypes;\n(function (CalibrationTypes) {\n    CalibrationTypes[\"NOT_APPLICABLE\"] = \"\";\n    CalibrationTypes[\"ERMF\"] = \"ERMF\";\n    CalibrationTypes[\"USER\"] = \"User\";\n    CalibrationTypes[\"PROJECTION\"] = \"Proj\";\n    CalibrationTypes[\"REGION\"] = \"Region\";\n    CalibrationTypes[\"ERROR\"] = \"Error\";\n    CalibrationTypes[\"UNCALIBRATED\"] = \"Uncalibrated\";\n})(CalibrationTypes || (CalibrationTypes = {}));\nexport default CalibrationTypes;\n","export var GenerateImageType;\n(function (GenerateImageType) {\n    GenerateImageType[\"SUM\"] = \"SUM\";\n    GenerateImageType[\"SUBTRACT\"] = \"SUBTRACT\";\n    GenerateImageType[\"AVERAGE\"] = \"AVERAGE\";\n})(GenerateImageType || (GenerateImageType = {}));\n","import getRenderingEngine, { getRenderingEngines, } from './RenderingEngine/getRenderingEngine';\nexport default function getEnabledElement(element) {\n    if (!element) {\n        return;\n    }\n    const { viewportUid, renderingEngineUid } = element.dataset;\n    return getEnabledElementByIds(viewportUid, renderingEngineUid);\n}\nexport function getEnabledElementByIds(viewportId, renderingEngineId) {\n    if (!renderingEngineId || !viewportId) {\n        return;\n    }\n    const renderingEngine = getRenderingEngine(renderingEngineId);\n    if (!renderingEngine || renderingEngine.hasBeenDestroyed) {\n        return;\n    }\n    const viewport = renderingEngine.getViewport(viewportId);\n    if (!viewport) {\n        return;\n    }\n    const FrameOfReferenceUID = viewport.getFrameOfReferenceUID();\n    return {\n        viewport,\n        renderingEngine,\n        viewportId,\n        renderingEngineId,\n        FrameOfReferenceUID,\n    };\n}\nexport function getEnabledElementByViewportId(viewportId) {\n    const renderingEngines = getRenderingEngines();\n    for (let i = 0; i < renderingEngines.length; i++) {\n        const renderingEngine = renderingEngines[i];\n        const viewport = renderingEngine.getViewport(viewportId);\n        if (viewport) {\n            return getEnabledElementByIds(viewportId, renderingEngine.id);\n        }\n    }\n}\nexport function getEnabledElements() {\n    const enabledElements = [];\n    const renderingEngines = getRenderingEngines();\n    renderingEngines.forEach((renderingEngine) => {\n        const viewports = renderingEngine.getViewports();\n        viewports.forEach(({ element }) => {\n            enabledElements.push(getEnabledElement(element));\n        });\n    });\n    return enabledElements;\n}\n","import { getRenderingEngines } from './RenderingEngine/getRenderingEngine';\nlet csRenderInitialized = false;\nimport deepMerge from './utilities/deepMerge';\nimport CentralizedWebWorkerManager from './webWorkerManager/webWorkerManager';\nconst defaultConfig = {\n    gpuTier: { tier: 2 },\n    isMobile: false,\n    rendering: {\n        useCPURendering: false,\n        preferSizeOverAccuracy: false,\n        strictZSpacingForVolumeViewport: true,\n    },\n    peerImport: (moduleId) => null,\n};\nlet config = {\n    ...defaultConfig,\n    rendering: { ...defaultConfig.rendering },\n};\nlet webWorkerManager = null;\nfunction _getGLContext() {\n    const canvas = document.createElement('canvas');\n    const gl = canvas.getContext('webgl2') ||\n        canvas.getContext('webgl') ||\n        canvas.getContext('experimental-webgl');\n    return gl;\n}\nfunction _hasActiveWebGLContext() {\n    const gl = _getGLContext();\n    return (gl instanceof WebGLRenderingContext || gl instanceof WebGL2RenderingContext);\n}\nfunction _hasNorm16TextureSupport() {\n    const gl = _getGLContext();\n    if (gl) {\n        const ext = gl.getExtension('EXT_texture_norm16');\n        if (ext) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction isIOS() {\n    if (/iPad|iPhone|iPod/.test(navigator.platform)) {\n        return true;\n    }\n    else {\n        return (navigator.maxTouchPoints &&\n            navigator.maxTouchPoints > 2 &&\n            navigator.platform.includes('MacIntel'));\n    }\n}\nfunction init(configuration = config) {\n    if (csRenderInitialized) {\n        return csRenderInitialized;\n    }\n    config = deepMerge(defaultConfig, configuration);\n    if (isIOS()) {\n        if (configuration.rendering?.preferSizeOverAccuracy) {\n            config.rendering.preferSizeOverAccuracy = true;\n        }\n        else {\n            console.log('norm16 texture not supported, you can turn on the preferSizeOverAccuracy flag to use native data type, but be aware of the inaccuracy of the rendering in high bits');\n        }\n    }\n    const hasWebGLContext = _hasActiveWebGLContext();\n    if (!hasWebGLContext) {\n        console.log('CornerstoneRender: GPU not detected, using CPU rendering');\n        config.rendering.useCPURendering = true;\n    }\n    else {\n        console.log('CornerstoneRender: using GPU rendering');\n    }\n    csRenderInitialized = true;\n    if (!webWorkerManager) {\n        webWorkerManager = new CentralizedWebWorkerManager();\n    }\n    return csRenderInitialized;\n}\nfunction setUseCPURendering(status, updateViewports = true) {\n    config.rendering.useCPURendering = status;\n    csRenderInitialized = true;\n    if (updateViewports) {\n        _updateRenderingPipelinesForAllViewports();\n    }\n}\nfunction setPreferSizeOverAccuracy(status) {\n    config.rendering.preferSizeOverAccuracy = status;\n    csRenderInitialized = true;\n    _updateRenderingPipelinesForAllViewports();\n}\nfunction canRenderFloatTextures() {\n    if (!isIOS()) {\n        return true;\n    }\n    return false;\n}\nfunction resetUseCPURendering() {\n    config.rendering.useCPURendering = !_hasActiveWebGLContext();\n    _updateRenderingPipelinesForAllViewports();\n}\nfunction getShouldUseCPURendering() {\n    return config.rendering.useCPURendering;\n}\nfunction isCornerstoneInitialized() {\n    return csRenderInitialized;\n}\nfunction resetInitialization() {\n    csRenderInitialized = false;\n}\nfunction getConfiguration() {\n    return config;\n}\nfunction setConfiguration(c) {\n    config = c;\n    _updateRenderingPipelinesForAllViewports();\n}\nfunction _updateRenderingPipelinesForAllViewports() {\n    getRenderingEngines().forEach((engine) => {\n        engine.getViewports().forEach((viewport) => {\n            viewport.updateRenderingPipeline();\n        });\n    });\n}\nfunction getWebWorkerManager() {\n    if (!webWorkerManager) {\n        webWorkerManager = new CentralizedWebWorkerManager();\n    }\n    return webWorkerManager;\n}\nfunction peerImport(moduleId) {\n    return config.peerImport(moduleId);\n}\nexport { init, getShouldUseCPURendering, isCornerstoneInitialized, setUseCPURendering, setPreferSizeOverAccuracy, resetUseCPURendering, getConfiguration, setConfiguration, getWebWorkerManager, canRenderFloatTextures, peerImport, resetInitialization, };\n","import cache from '../cache/cache';\nimport Events from '../enums/Events';\nimport eventTarget from '../eventTarget';\nimport genericMetadataProvider from '../utilities/genericMetadataProvider';\nimport { getBufferConfiguration } from '../utilities/getBufferConfiguration';\nimport triggerEvent from '../utilities/triggerEvent';\nimport uuidv4 from '../utilities/uuidv4';\nimport VoxelManager from '../utilities/VoxelManager';\nimport imageLoadPoolManager from '../requestPool/imageLoadPoolManager';\nimport * as metaData from '../metaData';\nconst imageLoaders = {};\nlet unknownImageLoader;\nfunction loadImageFromImageLoader(imageId, options) {\n    const cachedImageLoadObject = cache.getImageLoadObject(imageId);\n    if (cachedImageLoadObject) {\n        handleImageLoadPromise(cachedImageLoadObject.promise, imageId);\n        return cachedImageLoadObject;\n    }\n    const scheme = imageId.split(':')[0];\n    const loader = imageLoaders[scheme] || unknownImageLoader;\n    if (!loader) {\n        throw new Error(`loadImageFromImageLoader: No image loader found for scheme '${scheme}'`);\n    }\n    const imageLoadObject = loader(imageId, options);\n    handleImageLoadPromise(imageLoadObject.promise, imageId);\n    return imageLoadObject;\n}\nfunction handleImageLoadPromise(imagePromise, imageId) {\n    Promise.resolve(imagePromise)\n        .then((image) => {\n        ensureVoxelManager(image);\n        triggerEvent(eventTarget, Events.IMAGE_LOADED, { image });\n    })\n        .catch((error) => {\n        const errorDetails = {\n            imageId,\n            error,\n        };\n        triggerEvent(eventTarget, Events.IMAGE_LOAD_FAILED, errorDetails);\n    });\n}\nfunction ensureVoxelManager(image) {\n    if (!image.voxelManager) {\n        const { width, height, numberOfComponents } = image;\n        const voxelManager = VoxelManager.createImageVoxelManager({\n            scalarData: image.getPixelData(),\n            width,\n            height,\n            numberOfComponents,\n        });\n        image.voxelManager = voxelManager;\n        image.getPixelData = () => voxelManager.getScalarData();\n        delete image.imageFrame.pixelData;\n    }\n}\nexport function loadImage(imageId, options = { priority: 0, requestType: 'prefetch' }) {\n    if (imageId === undefined) {\n        throw new Error('loadImage: parameter imageId must not be undefined');\n    }\n    return loadImageFromImageLoader(imageId, options).promise;\n}\nexport function loadAndCacheImage(imageId, options = { priority: 0, requestType: 'prefetch' }) {\n    if (imageId === undefined) {\n        throw new Error('loadAndCacheImage: parameter imageId must not be undefined');\n    }\n    const imageLoadObject = loadImageFromImageLoader(imageId, options);\n    if (!cache.getImageLoadObject(imageId)) {\n        cache.putImageLoadObject(imageId, imageLoadObject);\n    }\n    return imageLoadObject.promise;\n}\nexport function loadAndCacheImages(imageIds, options = { priority: 0, requestType: 'prefetch' }) {\n    if (!imageIds || imageIds.length === 0) {\n        throw new Error('loadAndCacheImages: parameter imageIds must be list of image Ids');\n    }\n    const allPromises = imageIds.map((imageId) => {\n        return loadAndCacheImage(imageId, options);\n    });\n    return allPromises;\n}\nexport function createAndCacheDerivedImage(referencedImageId, options = {}) {\n    if (referencedImageId === undefined) {\n        throw new Error('createAndCacheDerivedImage: parameter imageId must not be undefined');\n    }\n    if (options.imageId === undefined) {\n        options.imageId = `derived:${uuidv4()}`;\n    }\n    const { imageId, skipCreateBuffer, onCacheAdd } = options;\n    const imagePlaneModule = metaData.get('imagePlaneModule', referencedImageId);\n    const length = imagePlaneModule.rows * imagePlaneModule.columns;\n    const { TypedArrayConstructor } = getBufferConfiguration(options.targetBuffer?.type, length);\n    const imageScalarData = new TypedArrayConstructor(skipCreateBuffer ? 1 : length);\n    const derivedImageId = imageId;\n    const referencedImagePlaneMetadata = metaData.get('imagePlaneModule', referencedImageId);\n    genericMetadataProvider.add(derivedImageId, {\n        type: 'imagePlaneModule',\n        metadata: referencedImagePlaneMetadata,\n    });\n    const referencedImageGeneralSeriesMetadata = metaData.get('generalSeriesModule', referencedImageId);\n    genericMetadataProvider.add(derivedImageId, {\n        type: 'generalSeriesModule',\n        metadata: referencedImageGeneralSeriesMetadata,\n    });\n    genericMetadataProvider.add(derivedImageId, {\n        type: 'generalImageModule',\n        metadata: {\n            instanceNumber: options.instanceNumber,\n        },\n    });\n    const imagePixelModule = metaData.get('imagePixelModule', referencedImageId);\n    genericMetadataProvider.add(derivedImageId, {\n        type: 'imagePixelModule',\n        metadata: {\n            ...imagePixelModule,\n            bitsAllocated: 8,\n            bitsStored: 8,\n            highBit: 7,\n            samplesPerPixel: 1,\n            pixelRepresentation: 0,\n        },\n    });\n    const localImage = createAndCacheLocalImage(imageId, {\n        scalarData: imageScalarData,\n        onCacheAdd,\n        skipCreateBuffer,\n        targetBuffer: {\n            type: imageScalarData.constructor.name,\n        },\n        dimensions: [imagePlaneModule.columns, imagePlaneModule.rows],\n        spacing: [\n            imagePlaneModule.columnPixelSpacing,\n            imagePlaneModule.rowPixelSpacing,\n        ],\n        origin: imagePlaneModule.imagePositionPatient,\n        direction: imagePlaneModule.imageOrientationPatient,\n        frameOfReferenceUID: imagePlaneModule.frameOfReferenceUID,\n    });\n    localImage.referencedImageId = referencedImageId;\n    if (!cache.getImageLoadObject(imageId)) {\n        cache.putImageSync(imageId, localImage);\n    }\n    return localImage;\n}\nexport function createAndCacheDerivedImages(referencedImageIds, options = {}) {\n    if (referencedImageIds.length === 0) {\n        throw new Error('createAndCacheDerivedImages: parameter imageIds must be list of image Ids');\n    }\n    const derivedImageIds = [];\n    const images = referencedImageIds.map((referencedImageId, index) => {\n        const newOptions = {\n            imageId: options?.getDerivedImageId?.(referencedImageId) ||\n                `derived:${uuidv4()}`,\n            ...options,\n        };\n        derivedImageIds.push(newOptions.imageId);\n        return createAndCacheDerivedImage(referencedImageId, {\n            ...newOptions,\n            instanceNumber: index + 1,\n        });\n    });\n    return images;\n}\nexport function createAndCacheLocalImage(imageId, options) {\n    const { scalarData, origin, direction, targetBuffer, skipCreateBuffer, onCacheAdd, frameOfReferenceUID, } = options;\n    const dimensions = options.dimensions;\n    const spacing = options.spacing;\n    if (!dimensions || !spacing) {\n        throw new Error('createAndCacheLocalImage: dimensions and spacing are required');\n    }\n    const width = dimensions[0];\n    const height = dimensions[1];\n    const columnPixelSpacing = spacing[0];\n    const rowPixelSpacing = spacing[1];\n    const imagePlaneModule = {\n        frameOfReferenceUID,\n        rows: height,\n        columns: width,\n        imageOrientationPatient: direction ?? [1, 0, 0, 0, 1, 0],\n        rowCosines: direction ? direction.slice(0, 3) : [1, 0, 0],\n        columnCosines: direction ? direction.slice(3, 6) : [0, 1, 0],\n        imagePositionPatient: origin ?? [0, 0, 0],\n        pixelSpacing: [rowPixelSpacing, columnPixelSpacing],\n        rowPixelSpacing: rowPixelSpacing,\n        columnPixelSpacing: columnPixelSpacing,\n    };\n    const length = width * height;\n    const numberOfComponents = scalarData.length / length;\n    let scalarDataToUse;\n    if (scalarData) {\n        if (!(scalarData instanceof Uint8Array ||\n            scalarData instanceof Float32Array ||\n            scalarData instanceof Uint16Array ||\n            scalarData instanceof Int16Array)) {\n            throw new Error('createAndCacheLocalImage: scalarData must be of type Uint8Array, Uint16Array, Int16Array or Float32Array');\n        }\n        scalarDataToUse = scalarData;\n    }\n    else if (!skipCreateBuffer) {\n        const { numBytes, TypedArrayConstructor } = getBufferConfiguration(targetBuffer?.type, length);\n        const imageScalarData = new TypedArrayConstructor(length);\n        scalarDataToUse = imageScalarData;\n    }\n    let bitsAllocated, bitsStored, highBit;\n    if (scalarDataToUse instanceof Uint8Array) {\n        bitsAllocated = 8;\n        bitsStored = 8;\n        highBit = 7;\n    }\n    else if (scalarDataToUse instanceof Uint16Array) {\n        bitsAllocated = 16;\n        bitsStored = 16;\n        highBit = 15;\n    }\n    else if (scalarDataToUse instanceof Int16Array) {\n        bitsAllocated = 16;\n        bitsStored = 16;\n        highBit = 15;\n    }\n    else if (scalarDataToUse instanceof Float32Array) {\n        bitsAllocated = 32;\n        bitsStored = 32;\n        highBit = 31;\n    }\n    else {\n        throw new Error('Unsupported scalarData type');\n    }\n    const imagePixelModule = {\n        samplesPerPixel: 1,\n        photometricInterpretation: scalarDataToUse.length > dimensions[0] * dimensions[1]\n            ? 'RGB'\n            : 'MONOCHROME2',\n        rows: height,\n        columns: width,\n        bitsAllocated,\n        bitsStored,\n        highBit,\n    };\n    const metadata = {\n        imagePlaneModule,\n        imagePixelModule,\n    };\n    ['imagePlaneModule', 'imagePixelModule'].forEach((type) => {\n        genericMetadataProvider.add(imageId, {\n            type,\n            metadata: metadata[type] || {},\n        });\n    });\n    const voxelManager = VoxelManager.createImageVoxelManager({\n        height,\n        width,\n        numberOfComponents,\n        scalarData: scalarDataToUse,\n    });\n    let minPixelValue = scalarDataToUse[0];\n    let maxPixelValue = scalarDataToUse[0];\n    for (let i = 1; i < scalarDataToUse.length; i++) {\n        if (scalarDataToUse[i] < minPixelValue) {\n            minPixelValue = scalarDataToUse[i];\n        }\n        if (scalarDataToUse[i] > maxPixelValue) {\n            maxPixelValue = scalarDataToUse[i];\n        }\n    }\n    const image = {\n        imageId: imageId,\n        intercept: 0,\n        windowCenter: 0,\n        windowWidth: 0,\n        color: imagePixelModule.photometricInterpretation === 'RGB',\n        numberOfComponents: imagePixelModule.samplesPerPixel,\n        dataType: targetBuffer?.type,\n        slope: 1,\n        minPixelValue,\n        maxPixelValue,\n        rows: imagePixelModule.rows,\n        columns: imagePixelModule.columns,\n        getCanvas: undefined,\n        height: imagePixelModule.rows,\n        width: imagePixelModule.columns,\n        rgba: undefined,\n        columnPixelSpacing: imagePlaneModule.columnPixelSpacing,\n        rowPixelSpacing: imagePlaneModule.rowPixelSpacing,\n        FrameOfReferenceUID: imagePlaneModule.frameOfReferenceUID,\n        invert: false,\n        getPixelData: () => voxelManager.getScalarData(),\n        voxelManager,\n        sizeInBytes: scalarData.byteLength,\n    };\n    onCacheAdd?.(image);\n    cache.putImageSync(image.imageId, image);\n    return image;\n}\nexport function cancelLoadImage(imageId) {\n    const filterFunction = ({ additionalDetails }) => {\n        if (additionalDetails.imageId) {\n            return additionalDetails.imageId !== imageId;\n        }\n        return true;\n    };\n    imageLoadPoolManager.filterRequests(filterFunction);\n    const imageLoadObject = cache.getImageLoadObject(imageId);\n    if (imageLoadObject) {\n        imageLoadObject.cancelFn();\n    }\n}\nexport function cancelLoadImages(imageIds) {\n    imageIds.forEach((imageId) => {\n        cancelLoadImage(imageId);\n    });\n}\nexport function cancelLoadAll() {\n    const requestPool = imageLoadPoolManager.getRequestPool();\n    Object.keys(requestPool).forEach((type) => {\n        const requests = requestPool[type];\n        Object.keys(requests).forEach((priority) => {\n            const requestDetails = requests[priority].pop();\n            const additionalDetails = requestDetails.additionalDetails;\n            const { imageId, volumeId } = additionalDetails;\n            let loadObject;\n            if (imageId) {\n                loadObject = cache.getImageLoadObject(imageId);\n            }\n            else if (volumeId) {\n                loadObject = cache.getVolumeLoadObject(volumeId);\n            }\n            if (loadObject) {\n                loadObject.cancel();\n            }\n        });\n        imageLoadPoolManager.clearRequestStack(type);\n    });\n}\nexport function registerImageLoader(scheme, imageLoader) {\n    imageLoaders[scheme] = imageLoader;\n}\nexport function registerUnknownImageLoader(imageLoader) {\n    const oldImageLoader = unknownImageLoader;\n    unknownImageLoader = imageLoader;\n    return oldImageLoader;\n}\nexport function unregisterAllImageLoaders() {\n    Object.keys(imageLoaders).forEach((imageLoader) => delete imageLoaders[imageLoader]);\n    unknownImageLoader = undefined;\n}\nexport function createAndCacheDerivedLabelmapImages(referencedImageIds, options = {}) {\n    return createAndCacheDerivedImages(referencedImageIds, {\n        ...options,\n        targetBuffer: { type: 'Uint8Array' },\n    });\n}\nexport function createAndCacheDerivedLabelmapImage(referencedImageId, options = {}) {\n    return createAndCacheDerivedImage(referencedImageId, {\n        ...options,\n        targetBuffer: { type: 'Uint8Array' },\n    });\n}\n","import '@kitware/vtk.js/Rendering/Profiles/Volume';\nimport { ImageVolume } from '../cache/classes/ImageVolume';\nimport cache from '../cache/cache';\nimport Events from '../enums/Events';\nimport eventTarget from '../eventTarget';\nimport triggerEvent from '../utilities/triggerEvent';\nimport uuidv4 from '../utilities/uuidv4';\nimport VoxelManager from '../utilities/VoxelManager';\nimport { createAndCacheLocalImage, createAndCacheDerivedImages, } from './imageLoader';\nimport { generateVolumePropsFromImageIds } from '../utilities/generateVolumePropsFromImageIds';\nimport { cornerstoneStreamingImageVolumeLoader } from './cornerstoneStreamingImageVolumeLoader';\nconst volumeLoaders = {};\nlet unknownVolumeLoader = cornerstoneStreamingImageVolumeLoader;\nfunction loadVolumeFromVolumeLoader(volumeId, options) {\n    const colonIndex = volumeId.indexOf(':');\n    const scheme = volumeId.substring(0, colonIndex);\n    let loader = volumeLoaders[scheme];\n    if (loader === undefined || loader === null) {\n        if (unknownVolumeLoader == null ||\n            typeof unknownVolumeLoader !== 'function') {\n            throw new Error(`No volume loader for scheme ${scheme} has been registered`);\n        }\n        loader = unknownVolumeLoader;\n    }\n    const volumeLoadObject = loader(volumeId, options);\n    volumeLoadObject.promise.then(function (volume) {\n        triggerEvent(eventTarget, Events.VOLUME_LOADED, { volume });\n    }, function (error) {\n        const errorObject = {\n            volumeId,\n            error,\n        };\n        triggerEvent(eventTarget, Events.VOLUME_LOADED_FAILED, errorObject);\n    });\n    return volumeLoadObject;\n}\nexport function loadVolume(volumeId, options = { imageIds: [] }) {\n    if (volumeId === undefined) {\n        throw new Error('loadVolume: parameter volumeId must not be undefined');\n    }\n    let volumeLoadObject = cache.getVolumeLoadObject(volumeId);\n    if (volumeLoadObject !== undefined) {\n        return volumeLoadObject.promise;\n    }\n    volumeLoadObject = loadVolumeFromVolumeLoader(volumeId, options);\n    return volumeLoadObject.promise.then((volume) => {\n        return volume;\n    });\n}\nexport async function createAndCacheVolume(volumeId, options) {\n    if (volumeId === undefined) {\n        throw new Error('createAndCacheVolume: parameter volumeId must not be undefined');\n    }\n    let volumeLoadObject = cache.getVolumeLoadObject(volumeId);\n    if (volumeLoadObject !== undefined) {\n        return volumeLoadObject.promise;\n    }\n    volumeLoadObject = loadVolumeFromVolumeLoader(volumeId, options);\n    cache.putVolumeLoadObject(volumeId, volumeLoadObject);\n    return volumeLoadObject.promise;\n}\nexport function createAndCacheDerivedVolume(referencedVolumeId, options) {\n    const referencedVolume = cache.getVolume(referencedVolumeId);\n    if (!referencedVolume) {\n        throw new Error(`Cannot created derived volume: Referenced volume with id ${referencedVolumeId} does not exist.`);\n    }\n    let { volumeId } = options;\n    if (volumeId === undefined) {\n        volumeId = uuidv4();\n    }\n    const { metadata, dimensions, spacing, origin, direction } = referencedVolume;\n    const referencedImageIds = referencedVolume.isDynamicVolume()\n        ? referencedVolume.getCurrentTimePointImageIds()\n        : referencedVolume.imageIds ?? [];\n    const derivedImages = createAndCacheDerivedImages(referencedImageIds, {\n        targetBuffer: options.targetBuffer,\n    });\n    const dataType = derivedImages[0].dataType;\n    const derivedVolumeImageIds = derivedImages.map((image) => image.imageId);\n    const derivedVolume = new ImageVolume({\n        volumeId,\n        dataType,\n        metadata: structuredClone(metadata),\n        dimensions: [dimensions[0], dimensions[1], dimensions[2]],\n        spacing,\n        origin,\n        direction,\n        referencedVolumeId,\n        imageIds: derivedVolumeImageIds,\n        referencedImageIds: referencedVolume.imageIds ?? [],\n    });\n    cache.putVolumeSync(volumeId, derivedVolume);\n    return derivedVolume;\n}\nexport async function createAndCacheVolumeFromImages(volumeId, imageIds) {\n    if (imageIds === undefined) {\n        throw new Error('createAndCacheVolumeFromImages: parameter imageIds must not be undefined');\n    }\n    if (volumeId === undefined) {\n        throw new Error('createAndCacheVolumeFromImages: parameter volumeId must not be undefined');\n    }\n    const cachedVolume = cache.getVolume(volumeId);\n    if (cachedVolume) {\n        return cachedVolume;\n    }\n    const imageIdsToLoad = imageIds.filter((imageId) => !cache.getImage(imageId));\n    if (imageIdsToLoad.length === 0) {\n        return createAndCacheVolumeFromImagesSync(volumeId, imageIds);\n    }\n    const volume = (await createAndCacheVolume(volumeId, {\n        imageIds,\n    }));\n    return volume;\n}\nexport function createAndCacheVolumeFromImagesSync(volumeId, imageIds) {\n    if (imageIds === undefined) {\n        throw new Error('createAndCacheVolumeFromImagesSync: parameter imageIds must not be undefined');\n    }\n    if (volumeId === undefined) {\n        throw new Error('createAndCacheVolumeFromImagesSync: parameter volumeId must not be undefined');\n    }\n    const cachedVolume = cache.getVolume(volumeId);\n    if (cachedVolume) {\n        return cachedVolume;\n    }\n    const volumeProps = generateVolumePropsFromImageIds(imageIds, volumeId);\n    const derivedVolume = new ImageVolume({\n        volumeId,\n        dataType: volumeProps.dataType,\n        metadata: structuredClone(volumeProps.metadata),\n        dimensions: volumeProps.dimensions,\n        spacing: volumeProps.spacing,\n        origin: volumeProps.origin,\n        direction: volumeProps.direction,\n        referencedVolumeId: volumeProps.referencedVolumeId,\n        imageIds: volumeProps.imageIds,\n        referencedImageIds: volumeProps.referencedImageIds,\n    });\n    cache.putVolumeSync(volumeId, derivedVolume);\n    return derivedVolume;\n}\nexport function createLocalVolume(volumeId, options = {}) {\n    const { metadata, dimensions, spacing, origin, direction, scalarData, targetBuffer, preventCache = false, } = options;\n    const cachedVolume = cache.getVolume(volumeId);\n    if (cachedVolume) {\n        return cachedVolume;\n    }\n    const sliceLength = dimensions[0] * dimensions[1];\n    const dataType = scalarData\n        ? scalarData.constructor.name\n        : targetBuffer?.type ?? 'Float32Array';\n    const totalNumberOfVoxels = sliceLength * dimensions[2];\n    let byteLength;\n    switch (dataType) {\n        case 'Uint8Array':\n        case 'Int8Array':\n            byteLength = totalNumberOfVoxels;\n            break;\n        case 'Uint16Array':\n        case 'Int16Array':\n            byteLength = totalNumberOfVoxels * 2;\n            break;\n        case 'Float32Array':\n            byteLength = totalNumberOfVoxels * 4;\n            break;\n    }\n    const isCacheable = cache.isCacheable(byteLength);\n    if (!isCacheable) {\n        throw new Error(`Cannot created derived volume: Volume with id ${volumeId} is not cacheable.`);\n    }\n    const imageIds = [];\n    const derivedImages = [];\n    for (let i = 0; i < dimensions[2]; i++) {\n        const imageId = `${volumeId}_slice_${i}`;\n        imageIds.push(imageId);\n        const sliceData = scalarData.subarray(i * sliceLength, (i + 1) * sliceLength);\n        const derivedImage = createAndCacheLocalImage(imageId, {\n            scalarData: sliceData,\n            dimensions: [dimensions[0], dimensions[1]],\n            spacing: [spacing[0], spacing[1]],\n            origin,\n            direction,\n            targetBuffer: { type: dataType },\n        });\n        derivedImages.push(derivedImage);\n    }\n    const imageVolume = new ImageVolume({\n        volumeId,\n        metadata: structuredClone(metadata),\n        dimensions: [dimensions[0], dimensions[1], dimensions[2]],\n        spacing,\n        origin,\n        direction,\n        imageIds,\n        dataType,\n    });\n    const voxelManager = VoxelManager.createImageVolumeVoxelManager({\n        imageIds,\n        dimensions,\n        numberOfComponents: 1,\n    });\n    imageVolume.voxelManager = voxelManager;\n    if (!preventCache) {\n        cache.putVolumeSync(volumeId, imageVolume);\n    }\n    return imageVolume;\n}\nexport function registerVolumeLoader(scheme, volumeLoader) {\n    volumeLoaders[scheme] = volumeLoader;\n}\nexport function getVolumeLoaderSchemes() {\n    return Object.keys(volumeLoaders);\n}\nexport function registerUnknownVolumeLoader(volumeLoader) {\n    const oldVolumeLoader = unknownVolumeLoader;\n    unknownVolumeLoader = volumeLoader;\n    return oldVolumeLoader;\n}\nexport function getUnknownVolumeLoaderSchema() {\n    return unknownVolumeLoader.name;\n}\nexport function createAndCacheDerivedLabelmapVolume(referencedVolumeId, options = {}) {\n    return createAndCacheDerivedVolume(referencedVolumeId, {\n        ...options,\n        targetBuffer: { type: 'Uint8Array' },\n    });\n}\nexport function createLocalLabelmapVolume(options, volumeId, preventCache = false) {\n    if (!options.scalarData) {\n        options.scalarData = new Uint8Array(options.dimensions[0] * options.dimensions[1] * options.dimensions[2]);\n    }\n    return createLocalVolume(volumeId, { ...options, preventCache });\n}\n","export class PromiseIterator extends Promise {\n}\nexport default class ProgressiveIterator {\n    constructor(name) {\n        this.name = name || 'unknown';\n    }\n    static as(promise) {\n        if (promise.iterator) {\n            return promise.iterator;\n        }\n        const iterator = new ProgressiveIterator('as iterator');\n        promise.then((v) => {\n            try {\n                iterator.add(v, true);\n            }\n            catch (e) {\n                iterator.reject(e);\n            }\n        }, (reason) => {\n            iterator.reject(reason);\n        });\n        return iterator;\n    }\n    add(x, done = false) {\n        this.nextValue = x;\n        this.done ||= done;\n        if (this.waiting) {\n            this.waiting.resolve(x);\n            this.waiting = undefined;\n        }\n    }\n    resolve() {\n        this.done = true;\n        if (this.waiting) {\n            this.waiting.resolve(this.nextValue);\n            this.waiting = undefined;\n        }\n    }\n    reject(reason) {\n        this.rejectReason = reason;\n        this.waiting?.reject(reason);\n    }\n    getRecent() {\n        if (this.rejectReason) {\n            throw this.rejectReason;\n        }\n        return this.nextValue;\n    }\n    async *[Symbol.asyncIterator]() {\n        while (!this.done) {\n            if (this.rejectReason) {\n                throw this.rejectReason;\n            }\n            if (this.nextValue !== undefined) {\n                yield this.nextValue;\n                if (this.done) {\n                    break;\n                }\n            }\n            if (!this.waiting) {\n                this.waiting = {};\n                this.waiting.promise = new Promise((resolve, reject) => {\n                    this.waiting.resolve = resolve;\n                    this.waiting.reject = reject;\n                });\n            }\n            await this.waiting.promise;\n        }\n        yield this.nextValue;\n    }\n    async forEach(callback, errorCallback) {\n        let index = 0;\n        try {\n            for await (const value of this) {\n                const { done } = this;\n                try {\n                    await callback(value, done, index);\n                    index++;\n                }\n                catch (e) {\n                    if (!done) {\n                        console.warn('Caught exception in intermediate value', e);\n                        continue;\n                    }\n                    if (errorCallback) {\n                        errorCallback(e, done);\n                    }\n                    else {\n                        throw e;\n                    }\n                }\n            }\n        }\n        catch (e) {\n            if (errorCallback) {\n                errorCallback(e, true);\n            }\n            else {\n                throw e;\n            }\n        }\n    }\n    generate(processFunction, errorCallback) {\n        return processFunction(this, this.reject.bind(this)).then(() => {\n            if (!this.done) {\n                this.resolve();\n            }\n        }, (reason) => {\n            this.reject(reason);\n            if (errorCallback) {\n                errorCallback(reason);\n            }\n            else {\n                console.warn(\"Couldn't process because\", reason);\n            }\n        });\n    }\n    async nextPromise() {\n        for await (const i of this) {\n            if (i) {\n                return i;\n            }\n        }\n        return this.nextValue;\n    }\n    async donePromise() {\n        for await (const i of this) {\n        }\n        return this.nextValue;\n    }\n    getNextPromise() {\n        const promise = this.nextPromise();\n        promise.iterator = this;\n        return promise;\n    }\n    getDonePromise() {\n        const promise = this.donePromise();\n        promise.iterator = this;\n        return promise;\n    }\n}\n","export default class RLEVoxelMap {\n    constructor(width, height, depth = 1) {\n        this.rows = new Map();\n        this.height = 1;\n        this.width = 1;\n        this.depth = 1;\n        this.jMultiple = 1;\n        this.kMultiple = 1;\n        this.numberOfComponents = 1;\n        this.defaultValue = 0;\n        this.pixelDataConstructor = Uint8Array;\n        this.get = (index) => {\n            const i = index % this.jMultiple;\n            const j = (index - i) / this.jMultiple;\n            const rle = this.getRLE(i, j);\n            return rle?.value || this.defaultValue;\n        };\n        this.getRun = (j, k) => {\n            const runIndex = j + k * this.height;\n            return this.rows.get(runIndex);\n        };\n        this.set = (index, value) => {\n            if (value === undefined) {\n                throw new Error(`Can't set undefined at ${index % this.width}`);\n            }\n            const i = index % this.width;\n            const j = (index - i) / this.width;\n            const row = this.rows.get(j);\n            if (!row) {\n                this.rows.set(j, [{ start: i, end: i + 1, value }]);\n                return;\n            }\n            const rleIndex = this.findIndex(row, i);\n            const rle1 = row[rleIndex];\n            const rle0 = row[rleIndex - 1];\n            if (!rle1) {\n                if (!rle0 || rle0.value !== value || rle0.end !== i) {\n                    row[rleIndex] = { start: i, end: i + 1, value };\n                    return;\n                }\n                rle0.end++;\n                return;\n            }\n            const { start, end, value: oldValue } = rle1;\n            if (value === oldValue && i >= start) {\n                return;\n            }\n            const rleInsert = { start: i, end: i + 1, value };\n            const isAfter = i > start;\n            const insertIndex = isAfter ? rleIndex + 1 : rleIndex;\n            const rlePrev = isAfter ? rle1 : rle0;\n            let rleNext = isAfter ? row[rleIndex + 1] : rle1;\n            if (rlePrev?.value === value && rlePrev.end === i) {\n                rlePrev.end++;\n                if (rleNext?.value === value && rleNext.start === i + 1) {\n                    rlePrev.end = rleNext.end;\n                    row.splice(rleIndex, 1);\n                }\n                else if (rleNext?.start === i) {\n                    rleNext.start++;\n                    if (rleNext.start === rleNext.end) {\n                        row.splice(rleIndex, 1);\n                        rleNext = row[rleIndex];\n                        if (rleNext?.start === i + 1 && rleNext.value === value) {\n                            rlePrev.end = rleNext.end;\n                            row.splice(rleIndex, 1);\n                        }\n                    }\n                }\n                return;\n            }\n            if (rleNext?.value === value && rleNext.start === i + 1) {\n                rleNext.start--;\n                if (rlePrev?.end > i) {\n                    rlePrev.end = i;\n                    if (rlePrev.end === rlePrev.start) {\n                        row.splice(rleIndex, 1);\n                    }\n                }\n                return;\n            }\n            if (rleNext?.start === i && rleNext.end === i + 1) {\n                rleNext.value = value;\n                const nextnext = row[rleIndex + 1];\n                if (nextnext?.start == i + 1 && nextnext?.value === value) {\n                    row.splice(rleIndex + 1, 1);\n                    rleNext.end = nextnext.end;\n                }\n                return;\n            }\n            if (i === rleNext?.start) {\n                rleNext.start++;\n            }\n            if (isAfter && end > i + 1) {\n                row.splice(insertIndex, 0, rleInsert, {\n                    start: i + 1,\n                    end: rlePrev.end,\n                    value: rlePrev.value,\n                });\n            }\n            else {\n                row.splice(insertIndex, 0, rleInsert);\n            }\n            if (rlePrev?.end > i) {\n                rlePrev.end = i;\n            }\n        };\n        this.width = width;\n        this.height = height;\n        this.depth = depth;\n        this.jMultiple = width;\n        this.kMultiple = this.jMultiple * height;\n    }\n    getRLE(i, j, k = 0) {\n        const row = this.rows.get(j + k * this.height);\n        if (!row) {\n            return;\n        }\n        const index = this.findIndex(row, i);\n        const rle = row[index];\n        return i >= rle?.start ? rle : undefined;\n    }\n    findIndex(row, i) {\n        for (let index = 0; index < row.length; index++) {\n            const { end: iEnd } = row[index];\n            if (i < iEnd) {\n                return index;\n            }\n        }\n        return row.length;\n    }\n    clear() {\n        this.rows.clear();\n    }\n    keys() {\n        return [...this.rows.keys()];\n    }\n    getPixelData(k = 0, pixelData) {\n        if (!pixelData) {\n            pixelData = new this.pixelDataConstructor(this.width * this.height * this.numberOfComponents);\n        }\n        else {\n            pixelData.fill(0);\n        }\n        const { width, height, numberOfComponents } = this;\n        for (let j = 0; j < height; j++) {\n            const row = this.getRun(j, k);\n            if (!row) {\n                continue;\n            }\n            if (numberOfComponents === 1) {\n                for (const rle of row) {\n                    const rowOffset = j * width;\n                    const { start, end, value } = rle;\n                    for (let i = start; i < end; i++) {\n                        pixelData[rowOffset + i] = value;\n                    }\n                }\n            }\n            else {\n                for (const rle of row) {\n                    const rowOffset = j * width * numberOfComponents;\n                    const { start, end, value } = rle;\n                    for (let i = start; i < end; i += numberOfComponents) {\n                        for (let comp = 0; comp < numberOfComponents; comp++) {\n                            pixelData[rowOffset + i + comp] = value[comp];\n                        }\n                    }\n                }\n            }\n        }\n        return pixelData;\n    }\n}\n","export function isImageActor(actorEntry) {\n    return (actorIsA(actorEntry, 'vtkVolume') || actorIsA(actorEntry, 'vtkImageSlice'));\n}\nexport function actorIsA(actorEntry, actorType) {\n    const actorToCheck = 'isA' in actorEntry ? actorEntry : actorEntry.actor;\n    return !!actorToCheck.isA(actorType);\n}\n","import vtkColorTransferFunction from '@kitware/vtk.js/Rendering/Core/ColorTransferFunction';\nimport vtkPiecewiseFunction from '@kitware/vtk.js/Common/DataModel/PiecewiseFunction';\nexport default function applyPreset(actor, preset) {\n    const colorTransferArray = preset.colorTransfer\n        .split(' ')\n        .splice(1)\n        .map(parseFloat);\n    const { shiftRange } = getShiftRange(colorTransferArray);\n    const min = shiftRange[0];\n    const width = shiftRange[1] - shiftRange[0];\n    const cfun = vtkColorTransferFunction.newInstance();\n    const normColorTransferValuePoints = [];\n    for (let i = 0; i < colorTransferArray.length; i += 4) {\n        let value = colorTransferArray[i];\n        const r = colorTransferArray[i + 1];\n        const g = colorTransferArray[i + 2];\n        const b = colorTransferArray[i + 3];\n        value = (value - min) / width;\n        normColorTransferValuePoints.push([value, r, g, b]);\n    }\n    applyPointsToRGBFunction(normColorTransferValuePoints, shiftRange, cfun);\n    actor.getProperty().setRGBTransferFunction(0, cfun);\n    const scalarOpacityArray = preset.scalarOpacity\n        .split(' ')\n        .splice(1)\n        .map(parseFloat);\n    const ofun = vtkPiecewiseFunction.newInstance();\n    const normPoints = [];\n    for (let i = 0; i < scalarOpacityArray.length; i += 2) {\n        let value = scalarOpacityArray[i];\n        const opacity = scalarOpacityArray[i + 1];\n        value = (value - min) / width;\n        normPoints.push([value, opacity]);\n    }\n    applyPointsToPiecewiseFunction(normPoints, shiftRange, ofun);\n    const property = actor.getProperty();\n    property.setScalarOpacity(0, ofun);\n    const [gradientMinValue, gradientMinOpacity, gradientMaxValue, gradientMaxOpacity,] = preset.gradientOpacity.split(' ').splice(1).map(parseFloat);\n    property.setUseGradientOpacity(0, true);\n    property.setGradientOpacityMinimumValue(0, gradientMinValue);\n    property.setGradientOpacityMinimumOpacity(0, gradientMinOpacity);\n    property.setGradientOpacityMaximumValue(0, gradientMaxValue);\n    property.setGradientOpacityMaximumOpacity(0, gradientMaxOpacity);\n    if (preset.interpolation === '1') {\n        property.setInterpolationTypeToFastLinear();\n    }\n    property.setShade(preset.shade === '1');\n    const ambient = parseFloat(preset.ambient);\n    const diffuse = parseFloat(preset.diffuse);\n    const specular = parseFloat(preset.specular);\n    const specularPower = parseFloat(preset.specularPower);\n    property.setAmbient(ambient);\n    property.setDiffuse(diffuse);\n    property.setSpecular(specular);\n    property.setSpecularPower(specularPower);\n}\nfunction getShiftRange(colorTransferArray) {\n    let min = Infinity;\n    let max = -Infinity;\n    for (let i = 0; i < colorTransferArray.length; i += 4) {\n        min = Math.min(min, colorTransferArray[i]);\n        max = Math.max(max, colorTransferArray[i]);\n    }\n    const center = (max - min) / 2;\n    return {\n        shiftRange: [-center, center],\n        min,\n        max,\n    };\n}\nfunction applyPointsToRGBFunction(points, range, cfun) {\n    const width = range[1] - range[0];\n    const rescaled = points.map(([x, r, g, b]) => [\n        x * width + range[0],\n        r,\n        g,\n        b,\n    ]);\n    cfun.removeAllPoints();\n    rescaled.forEach(([x, r, g, b]) => cfun.addRGBPoint(x, r, g, b));\n    return rescaled;\n}\nfunction applyPointsToPiecewiseFunction(points, range, pwf) {\n    const width = range[1] - range[0];\n    const rescaled = points.map(([x, y]) => [x * width + range[0], y]);\n    pwf.removeAllPoints();\n    rescaled.forEach(([x, y]) => pwf.addPoint(x, y));\n    return rescaled;\n}\n","import { getRenderingEngines } from '../RenderingEngine/getRenderingEngine';\nimport getViewportsWithVolumeId from './getViewportsWithVolumeId';\nconst autoLoad = (volumeId) => {\n    const renderingEngineAndViewportIds = getRenderingEngineAndViewportsContainingVolume(volumeId);\n    if (!renderingEngineAndViewportIds?.length) {\n        return;\n    }\n    renderingEngineAndViewportIds.forEach(({ renderingEngine, viewportIds }) => {\n        if (!renderingEngine.hasBeenDestroyed) {\n            renderingEngine.renderViewports(viewportIds);\n        }\n    });\n};\nfunction getRenderingEngineAndViewportsContainingVolume(volumeId) {\n    const renderingEnginesArray = getRenderingEngines();\n    const renderingEngineAndViewportIds = [];\n    renderingEnginesArray.forEach((renderingEngine) => {\n        const viewports = getViewportsWithVolumeId(volumeId);\n        if (viewports.length) {\n            renderingEngineAndViewportIds.push({\n                renderingEngine,\n                viewportIds: viewports.map((viewport) => viewport.id),\n            });\n        }\n    });\n    return renderingEngineAndViewportIds;\n}\nexport default autoLoad;\n","function clamp(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\nexport { clamp as default, clamp };\n","import vtkColorMaps from '@kitware/vtk.js/Rendering/Core/ColorTransferFunction/ColorMaps';\nimport isEqual from './isEqual';\nimport { actorIsA } from './actorCheck';\nconst _colormaps = new Map();\nfunction registerColormap(colormap) {\n    _colormaps.set(colormap.Name, colormap);\n}\nfunction getColormap(name) {\n    return _colormaps.get(name);\n}\nfunction getColormapNames() {\n    return Array.from(_colormaps.keys());\n}\nfunction findMatchingColormap(rgbPoints, actor) {\n    const colormapsVTK = vtkColorMaps.rgbPresetNames.map((presetName) => vtkColorMaps.getPresetByName(presetName));\n    const colormapsCS3D = getColormapNames().map((colormapName) => getColormap(colormapName));\n    const colormaps = colormapsVTK.concat(colormapsCS3D);\n    const matchedColormap = colormaps.find((colormap) => {\n        const { RGBPoints: presetRGBPoints } = colormap;\n        if (presetRGBPoints.length !== rgbPoints.length) {\n            return false;\n        }\n        for (let i = 0; i < presetRGBPoints.length; i += 4) {\n            if (!isEqual(presetRGBPoints.slice(i + 1, i + 4), rgbPoints.slice(i + 1, i + 4))) {\n                return false;\n            }\n        }\n        return true;\n    });\n    if (!matchedColormap) {\n        return null;\n    }\n    const opacity = [];\n    if (actorIsA(actor, 'vtkVolume')) {\n        const opacityPoints = actor\n            .getProperty()\n            .getScalarOpacity(0)\n            .getDataPointer();\n        if (!opacityPoints) {\n            return {\n                name: matchedColormap.Name,\n            };\n        }\n        for (let i = 0; i < opacityPoints.length; i += 2) {\n            opacity.push({\n                value: opacityPoints[i],\n                opacity: opacityPoints[i + 1],\n            });\n        }\n    }\n    return {\n        name: matchedColormap.Name,\n        opacity,\n    };\n}\nexport { getColormap, getColormapNames, registerColormap, findMatchingColormap, };\n","import vtkColorTransferFunction from '@kitware/vtk.js/Rendering/Core/ColorTransferFunction';\nexport default function createLinearRGBTransferFunction(voiRange) {\n    const cfun = vtkColorTransferFunction.newInstance();\n    let lower = 0;\n    let upper = 1024;\n    if (voiRange.lower !== undefined && voiRange.upper !== undefined) {\n        lower = voiRange.lower;\n        upper = voiRange.upper;\n    }\n    cfun.addRGBPoint(lower, 0.0, 0.0, 0.0);\n    cfun.addRGBPoint(upper, 1.0, 1.0, 1.0);\n    return cfun;\n}\n","import vtkColorTransferFunction from '@kitware/vtk.js/Rendering/Core/ColorTransferFunction';\nimport vtkDataArray from '@kitware/vtk.js/Common/Core/DataArray';\nimport * as windowLevelUtil from './windowLevel';\nexport default function createSigmoidRGBTransferFunction(voiRange, approximationNodes = 1024) {\n    const { windowWidth, windowCenter } = windowLevelUtil.toWindowLevel(voiRange.lower, voiRange.upper);\n    const sigmoid = (x, wc, ww) => {\n        return 1 / (1 + Math.exp((-4 * (x - wc)) / ww));\n    };\n    const logit = (y, wc, ww) => {\n        return wc - (ww / 4) * Math.log((1 - y) / y);\n    };\n    const range = Array.from({ length: approximationNodes }, (_, i) => (i + 1) / (approximationNodes + 2));\n    const table = range.flatMap((y) => {\n        const x = logit(y, windowCenter, windowWidth);\n        return [x, y, y, y, 0.5, 0.0];\n    });\n    const cfun = vtkColorTransferFunction.newInstance();\n    cfun.buildFunctionFromArray(vtkDataArray.newInstance({\n        values: table,\n        numberOfComponents: 6,\n    }));\n    return cfun;\n}\n","export default function decimate(list, interleave, offset = 0) {\n    const interleaveIndices = [];\n    for (let i = offset; i < list.length; i += interleave) {\n        interleaveIndices.push(i);\n    }\n    return interleaveIndices;\n}\n","export function deepClone(obj) {\n    if (obj === null || typeof obj !== 'object') {\n        return obj;\n    }\n    if (typeof obj === 'function') {\n        return obj;\n    }\n    if (typeof structuredClone === 'function') {\n        return obj;\n    }\n    if (Array.isArray(obj)) {\n        return obj.map(deepClone);\n    }\n    else {\n        const clonedObj = {};\n        for (const key in obj) {\n            if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                clonedObj[key] = deepClone(obj[key]);\n            }\n        }\n        return clonedObj;\n    }\n}\n","import { vec3 } from 'gl-matrix';\nimport * as metaData from '../metaData';\nimport getSpacingInNormalDirection from './getSpacingInNormalDirection';\nimport { EPSILON } from '../constants';\nexport default function getClosestImageId(imageVolume, worldPos, viewPlaneNormal) {\n    const { direction, spacing, imageIds } = imageVolume;\n    if (!imageIds.length) {\n        return;\n    }\n    const kVector = direction.slice(6, 9);\n    const dotProducts = vec3.dot(kVector, viewPlaneNormal);\n    if (Math.abs(dotProducts) < 1 - EPSILON) {\n        return;\n    }\n    const spacingInNormalDirection = getSpacingInNormalDirection({ direction, spacing }, viewPlaneNormal);\n    const halfSpacingInNormalDirection = spacingInNormalDirection / 2;\n    let imageIdForTool;\n    for (let i = 0; i < imageIds.length; i++) {\n        const imageId = imageIds[i];\n        const { imagePositionPatient } = metaData.get('imagePlaneModule', imageId);\n        const dir = vec3.create();\n        vec3.sub(dir, worldPos, imagePositionPatient);\n        const dot = vec3.dot(dir, viewPlaneNormal);\n        if (Math.abs(dot) < halfSpacingInNormalDirection) {\n            imageIdForTool = imageId;\n        }\n    }\n    return imageIdForTool;\n}\n","import getSliceRange from './getSliceRange';\nimport getTargetVolumeAndSpacingInNormalDir from './getTargetVolumeAndSpacingInNormalDir';\nfunction getImageSliceDataForVolumeViewport(viewport) {\n    const camera = viewport.getCamera();\n    const { spacingInNormalDirection, imageVolume } = getTargetVolumeAndSpacingInNormalDir(viewport, camera);\n    if (!imageVolume) {\n        return;\n    }\n    const { viewPlaneNormal, focalPoint } = camera;\n    const actorEntry = viewport\n        .getActors()\n        .find((a) => a.referencedId === imageVolume.volumeId ||\n        a.uid === imageVolume.volumeId);\n    if (!actorEntry) {\n        console.warn('No actor found for with actorUID of', imageVolume.volumeId);\n    }\n    const volumeActor = actorEntry.actor;\n    const sliceRange = getSliceRange(volumeActor, viewPlaneNormal, focalPoint);\n    const { min, max, current } = sliceRange;\n    const numberOfSlices = Math.round((max - min) / spacingInNormalDirection) + 1;\n    let imageIndex = ((current - min) / (max - min)) * numberOfSlices;\n    imageIndex = Math.floor(imageIndex);\n    if (imageIndex > numberOfSlices - 1) {\n        imageIndex = numberOfSlices - 1;\n    }\n    else if (imageIndex < 0) {\n        imageIndex = 0;\n    }\n    return {\n        numberOfSlices,\n        imageIndex,\n    };\n}\nexport default getImageSliceDataForVolumeViewport;\n","export default function getMinMax(storedPixelData) {\n    let min = storedPixelData[0];\n    let max = storedPixelData[0];\n    let storedPixel;\n    const numPixels = storedPixelData.length;\n    for (let index = 1; index < numPixels; index++) {\n        storedPixel = storedPixelData[index];\n        min = Math.min(min, storedPixel);\n        max = Math.max(max, storedPixel);\n    }\n    return {\n        min,\n        max,\n    };\n}\n","import * as metaData from '../metaData';\nexport default function getScalingParameters(imageId) {\n    const modalityLutModule = metaData.get('modalityLutModule', imageId) || {};\n    const generalSeriesModule = metaData.get('generalSeriesModule', imageId) || {};\n    const { modality } = generalSeriesModule;\n    const scalingParameters = {\n        rescaleSlope: modalityLutModule.rescaleSlope || 1,\n        rescaleIntercept: modalityLutModule.rescaleIntercept ?? 0,\n        modality,\n    };\n    const suvFactor = metaData.get('scalingModule', imageId) || {};\n    return {\n        ...scalingParameters,\n        ...(modality === 'PT' && {\n            suvbw: suvFactor.suvbw,\n            suvbsa: suvFactor.suvbsa,\n            suvlbm: suvFactor.suvlbm,\n        }),\n    };\n}\n","import vtkMatrixBuilder from '@kitware/vtk.js/Common/Core/MatrixBuilder';\nimport getVolumeActorCorners from './getVolumeActorCorners';\nimport { EPSILON } from '../constants';\nconst SMALL_EPSILON = EPSILON * EPSILON;\nconst isOne = (v) => Math.abs(Math.abs(v) - 1) < SMALL_EPSILON;\nconst isUnit = (v, off) => isOne(v[off]) || isOne(v[off + 1]) || isOne(v[off + 2]);\nconst isOrthonormal = (v) => isUnit(v, 0) && isUnit(v, 3) && isUnit(v, 6);\nexport default function getSliceRange(volumeActor, viewPlaneNormal, focalPoint) {\n    const imageData = volumeActor.getMapper().getInputData();\n    let corners;\n    const direction = imageData.getDirection();\n    if (isOrthonormal(direction)) {\n        corners = getVolumeActorCorners(volumeActor);\n    }\n    else {\n        const [dx, dy, dz] = imageData.getDimensions();\n        const cornersIdx = [\n            [0, 0, 0],\n            [dx - 1, 0, 0],\n            [0, dy - 1, 0],\n            [dx - 1, dy - 1, 0],\n            [0, 0, dz - 1],\n            [dx - 1, 0, dz - 1],\n            [0, dy - 1, dz - 1],\n            [dx - 1, dy - 1, dz - 1],\n        ];\n        corners = cornersIdx.map((it) => imageData.indexToWorld(it));\n    }\n    const transform = vtkMatrixBuilder\n        .buildFromDegree()\n        .identity()\n        .rotateFromDirections(viewPlaneNormal, [1, 0, 0]);\n    corners.forEach((pt) => transform.apply(pt));\n    const transformedFocalPoint = [...focalPoint];\n    transform.apply(transformedFocalPoint);\n    const currentSlice = transformedFocalPoint[0];\n    let minX = Infinity;\n    let maxX = -Infinity;\n    for (let i = 0; i < 8; i++) {\n        const x = corners[i][0];\n        if (x > maxX) {\n            maxX = x;\n        }\n        if (x < minX) {\n            minX = x;\n        }\n    }\n    return {\n        min: minX,\n        max: maxX,\n        current: currentSlice,\n        actor: volumeActor,\n        viewPlaneNormal,\n        focalPoint,\n    };\n}\n","import { vec3 } from 'gl-matrix';\nexport default function getSpacingInNormalDirection(imageVolume, viewPlaneNormal) {\n    const { direction, spacing } = imageVolume;\n    const iVector = direction.slice(0, 3);\n    const jVector = direction.slice(3, 6);\n    const kVector = direction.slice(6, 9);\n    const dotProducts = [\n        vec3.dot(iVector, viewPlaneNormal),\n        vec3.dot(jVector, viewPlaneNormal),\n        vec3.dot(kVector, viewPlaneNormal),\n    ];\n    const projectedSpacing = vec3.create();\n    vec3.set(projectedSpacing, dotProducts[0] * spacing[0], dotProducts[1] * spacing[1], dotProducts[2] * spacing[2]);\n    const spacingInNormalDirection = vec3.length(projectedSpacing);\n    return spacingInNormalDirection;\n}\n","import cache from '../cache/cache';\nimport { EPSILON } from '../constants';\nimport getSpacingInNormalDirection from './getSpacingInNormalDirection';\nimport { getVolumeLoaderSchemes } from '../loaders/volumeLoader';\nimport { getVolumeId } from './getVolumeId';\nconst EPSILON_PART = 1 + EPSILON;\nconst startsWith = (str, starts) => starts === str.substring(0, Math.min(str.length, starts.length));\nconst isPrimaryVolume = (volume) => !!getVolumeLoaderSchemes().find((scheme) => startsWith(volume.volumeId, scheme));\nexport default function getTargetVolumeAndSpacingInNormalDir(viewport, camera, targetId, useSlabThickness = false) {\n    const { viewPlaneNormal } = camera;\n    const volumeActors = viewport.getActors();\n    if (!volumeActors.length) {\n        return {\n            spacingInNormalDirection: null,\n            imageVolume: null,\n            actorUID: null,\n        };\n    }\n    const imageVolumes = volumeActors\n        .map((va) => {\n        const actorUID = va.referencedId ?? va.uid;\n        return cache.getVolume(actorUID);\n    })\n        .filter((iv) => !!iv);\n    if (targetId) {\n        const targetVolumeId = getVolumeId(targetId);\n        const imageVolumeIndex = imageVolumes.findIndex((iv) => targetVolumeId.includes(iv.volumeId));\n        const imageVolume = imageVolumes[imageVolumeIndex];\n        const { uid: actorUID } = volumeActors[imageVolumeIndex];\n        const spacingInNormalDirection = getSpacingInNormal(imageVolume, viewPlaneNormal, viewport, useSlabThickness);\n        return { imageVolume, spacingInNormalDirection, actorUID };\n    }\n    if (!imageVolumes.length) {\n        return {\n            spacingInNormalDirection: null,\n            imageVolume: null,\n            actorUID: null,\n        };\n    }\n    const smallest = {\n        spacingInNormalDirection: Infinity,\n        imageVolume: null,\n        actorUID: null,\n    };\n    const hasPrimaryVolume = imageVolumes.find(isPrimaryVolume);\n    for (let i = 0; i < imageVolumes.length; i++) {\n        const imageVolume = imageVolumes[i];\n        if (hasPrimaryVolume && !isPrimaryVolume(imageVolume)) {\n            continue;\n        }\n        const spacingInNormalDirection = getSpacingInNormal(imageVolume, viewPlaneNormal, viewport);\n        if (spacingInNormalDirection * EPSILON_PART <\n            smallest.spacingInNormalDirection) {\n            smallest.spacingInNormalDirection = spacingInNormalDirection;\n            smallest.imageVolume = imageVolume;\n            smallest.actorUID = volumeActors[i].uid;\n        }\n    }\n    return smallest;\n}\nfunction getSpacingInNormal(imageVolume, viewPlaneNormal, viewport, useSlabThickness = false) {\n    const { slabThickness } = viewport.getProperties();\n    let spacingInNormalDirection = slabThickness;\n    if (!slabThickness || !useSlabThickness) {\n        spacingInNormalDirection = getSpacingInNormalDirection(imageVolume, viewPlaneNormal);\n    }\n    return spacingInNormalDirection;\n}\n","import { getRenderingEngines } from '../RenderingEngine/getRenderingEngine';\nfunction getViewportsWithVolumeId(volumeId) {\n    const renderingEngines = getRenderingEngines();\n    const targetViewports = [];\n    renderingEngines.forEach((renderingEngine) => {\n        const viewports = renderingEngine.getVolumeViewports();\n        const filteredViewports = viewports.filter((vp) => vp.hasVolumeId(volumeId));\n        targetViewports.push(...filteredViewports);\n    });\n    return targetViewports;\n}\nexport default getViewportsWithVolumeId;\n","export default function getVoiFromSigmoidRGBTransferFunction(cfun) {\n    let cfunRange = [];\n    const [lower, upper] = cfun.getRange();\n    cfun.getTable(lower, upper, 1024, cfunRange);\n    cfunRange = cfunRange.filter((v, k) => k % 3 === 0);\n    const cfunDomain = [...Array(1024).keys()].map((v, k) => {\n        return lower + ((upper - lower) / (1024 - 1)) * k;\n    });\n    const y1 = cfunRange[256];\n    const logy1 = Math.log((1 - y1) / y1);\n    const x1 = cfunDomain[256];\n    const y2 = cfunRange[256 * 3];\n    const logy2 = Math.log((1 - y2) / y2);\n    const x2 = cfunDomain[256 * 3];\n    const ww = Math.round((4 * (x2 - x1)) / (logy1 - logy2));\n    const wc = Math.round(x1 + (ww * logy1) / 4);\n    return [Math.round(wc - ww / 2), Math.round(wc + ww / 2)];\n}\n","export default function getVolumeActorCorners(volumeActor) {\n    const imageData = volumeActor.getMapper().getInputData();\n    const bounds = imageData.extentToBounds(imageData.getExtent());\n    return [\n        [bounds[0], bounds[2], bounds[4]],\n        [bounds[0], bounds[2], bounds[5]],\n        [bounds[0], bounds[3], bounds[4]],\n        [bounds[0], bounds[3], bounds[5]],\n        [bounds[1], bounds[2], bounds[4]],\n        [bounds[1], bounds[2], bounds[5]],\n        [bounds[1], bounds[3], bounds[4]],\n        [bounds[1], bounds[3], bounds[5]],\n    ];\n}\n","export const getVolumeId = (targetId) => {\n    const prefix = 'volumeId:';\n    const str = targetId.includes(prefix)\n        ? targetId.substring(prefix.length)\n        : targetId;\n    const index = str.indexOf('sliceIndex=');\n    return index === -1 ? str : str.substring(0, index - 1);\n};\n","import getSliceRange from './getSliceRange';\nimport getTargetVolumeAndSpacingInNormalDir from './getTargetVolumeAndSpacingInNormalDir';\nfunction getVolumeSliceRangeInfo(viewport, volumeId, useSlabThickness = false) {\n    const camera = viewport.getCamera();\n    const { focalPoint, viewPlaneNormal } = camera;\n    const { spacingInNormalDirection, actorUID } = getTargetVolumeAndSpacingInNormalDir(viewport, camera, volumeId, useSlabThickness);\n    if (!actorUID) {\n        throw new Error(`Could not find image volume with id ${volumeId} in the viewport`);\n    }\n    const actorEntry = viewport.getActor(actorUID);\n    if (!actorEntry) {\n        console.warn('No actor found for with actorUID of', actorUID);\n        return null;\n    }\n    const volumeActor = actorEntry.actor;\n    const sliceRange = getSliceRange(volumeActor, viewPlaneNormal, focalPoint);\n    return {\n        sliceRange,\n        spacingInNormalDirection,\n        camera,\n    };\n}\nexport default getVolumeSliceRangeInfo;\n","import getVolumeSliceRangeInfo from './getVolumeSliceRangeInfo';\nfunction getVolumeViewportScrollInfo(viewport, volumeId, useSlabThickness = false) {\n    const { sliceRange, spacingInNormalDirection, camera } = getVolumeSliceRangeInfo(viewport, volumeId, useSlabThickness);\n    const { min, max, current } = sliceRange;\n    const numScrollSteps = Math.round((max - min) / spacingInNormalDirection);\n    const fraction = (current - min) / (max - min);\n    const floatingStepNumber = fraction * numScrollSteps;\n    const currentStepIndex = Math.round(floatingStepNumber);\n    return {\n        numScrollSteps,\n        currentStepIndex,\n        sliceRangeInfo: {\n            sliceRange,\n            spacingInNormalDirection,\n            camera,\n        },\n    };\n}\nexport default getVolumeViewportScrollInfo;\n","export const hasFloatScalingParameters = (scalingParameters) => {\n    const hasFloatRescale = Object.values(scalingParameters).some((value) => typeof value === 'number' && !Number.isInteger(value));\n    return hasFloatRescale;\n};\n","export default function hasNaNValues(input) {\n    if (Array.isArray(input)) {\n        return input.some((value) => Number.isNaN(value));\n    }\n    return Number.isNaN(input);\n}\n","export default function imageIdToURI(imageId) {\n    const colonIndex = imageId.indexOf(':');\n    return imageId.substring(colonIndex + 1);\n}\n","import { addProvider } from '../metaData';\nconst retrieveConfigurationState = new Map();\nconst IMAGE_RETRIEVE_CONFIGURATION = 'imageRetrieveConfiguration';\nconst imageRetrieveMetadataProvider = {\n    IMAGE_RETRIEVE_CONFIGURATION,\n    clear: () => {\n        retrieveConfigurationState.clear();\n    },\n    add: (key, payload) => {\n        retrieveConfigurationState.set(key, payload);\n    },\n    get: (type, ...queries) => {\n        if (type === IMAGE_RETRIEVE_CONFIGURATION) {\n            return queries\n                .map((query) => retrieveConfigurationState.get(query))\n                .find((it) => it !== undefined);\n        }\n    },\n};\naddProvider(imageRetrieveMetadataProvider.get.bind(imageRetrieveMetadataProvider));\nexport default imageRetrieveMetadataProvider;\n","var EventListenerPhases;\n(function (EventListenerPhases) {\n    EventListenerPhases[EventListenerPhases[\"None\"] = 0] = \"None\";\n    EventListenerPhases[EventListenerPhases[\"Capture\"] = 1] = \"Capture\";\n    EventListenerPhases[EventListenerPhases[\"Bubble\"] = 2] = \"Bubble\";\n})(EventListenerPhases || (EventListenerPhases = {}));\nclass TargetEventListeners {\n    constructor(target) {\n        this._eventListeners = new Map();\n        this._children = new Map();\n        this._target = target;\n    }\n    get isEmpty() {\n        return this._eventListeners.size === 0 && this._children.size === 0;\n    }\n    addEventListener(type, callback, options) {\n        const dotIndex = type.indexOf('.');\n        const isNamespace = dotIndex !== -1;\n        if (isNamespace) {\n            const namespaceToken = type.substring(0, dotIndex);\n            let childElementEventListener = this._children.get(namespaceToken);\n            if (!childElementEventListener) {\n                childElementEventListener = new TargetEventListeners(this._target);\n                this._children.set(namespaceToken, childElementEventListener);\n            }\n            type = type.substring(dotIndex + 1);\n            childElementEventListener.addEventListener(type, callback, options);\n        }\n        else {\n            this._addEventListener(type, callback, options);\n        }\n    }\n    removeEventListener(type, callback, options) {\n        const dotIndex = type.indexOf('.');\n        const isNamespace = dotIndex !== -1;\n        if (isNamespace) {\n            const namespaceToken = type.substring(0, dotIndex);\n            const childElementEventListener = this._children.get(namespaceToken);\n            if (!childElementEventListener) {\n                return;\n            }\n            type = type.substring(dotIndex + 1);\n            childElementEventListener.removeEventListener(type, callback, options);\n            if (childElementEventListener.isEmpty) {\n                this._children.delete(namespaceToken);\n            }\n        }\n        else {\n            this._removeEventListener(type, callback, options);\n        }\n    }\n    reset() {\n        Array.from(this._children.entries()).forEach(([namespace, child]) => {\n            child.reset();\n            if (child.isEmpty) {\n                this._children.delete(namespace);\n            }\n            else {\n                throw new Error('Child is not empty and cannot be removed');\n            }\n        });\n        this._unregisterAllEvents();\n    }\n    _addEventListener(type, callback, options) {\n        let listenersMap = this._eventListeners.get(type);\n        if (!listenersMap) {\n            listenersMap = new Map();\n            this._eventListeners.set(type, listenersMap);\n        }\n        const useCapture = options?.capture ?? false;\n        const listenerPhase = useCapture\n            ? EventListenerPhases.Capture\n            : EventListenerPhases.Bubble;\n        const registeredPhases = listenersMap.get(callback) ?? EventListenerPhases.None;\n        if (registeredPhases & listenerPhase) {\n            console.warn('A listener is already registered for this phase');\n            return;\n        }\n        listenersMap.set(callback, registeredPhases | listenerPhase);\n        this._target.addEventListener(type, callback, options);\n    }\n    _removeEventListener(type, callback, options) {\n        const useCapture = options?.capture ?? false;\n        const listenerPhase = useCapture\n            ? EventListenerPhases.Capture\n            : EventListenerPhases.Bubble;\n        const listenersMap = this._eventListeners.get(type);\n        if (!listenersMap) {\n            return;\n        }\n        const callbacks = callback ? [callback] : Array.from(listenersMap.keys());\n        callbacks.forEach((callbackItem) => {\n            const registeredPhases = listenersMap.get(callbackItem) ?? EventListenerPhases.None;\n            const phaseRegistered = !!(registeredPhases & listenerPhase);\n            if (!phaseRegistered) {\n                return;\n            }\n            this._target.removeEventListener(type, callbackItem, options);\n            const newListenerPhase = registeredPhases ^ listenerPhase;\n            if (newListenerPhase === EventListenerPhases.None) {\n                listenersMap.delete(callbackItem);\n            }\n            else {\n                listenersMap.set(callbackItem, newListenerPhase);\n            }\n        });\n        if (!listenersMap.size) {\n            this._eventListeners.delete(type);\n        }\n    }\n    _unregisterAllListeners(type, listenersMap) {\n        Array.from(listenersMap.entries()).forEach(([listener, eventPhases]) => {\n            const startPhase = EventListenerPhases.Capture;\n            for (let currentPhase = startPhase; eventPhases; currentPhase <<= 1) {\n                if (!(eventPhases & currentPhase)) {\n                    continue;\n                }\n                const useCapture = currentPhase === EventListenerPhases.Capture ? true : false;\n                this.removeEventListener(type, listener, { capture: useCapture });\n                eventPhases ^= currentPhase;\n            }\n        });\n    }\n    _unregisterAllEvents() {\n        Array.from(this._eventListeners.entries()).forEach(([type, listenersMap]) => {\n            this._unregisterAllListeners(type, listenersMap);\n        });\n    }\n}\nexport { TargetEventListeners as default, TargetEventListeners };\n","import TargetEventListeners from './TargetEventListeners';\nclass MultiTargetEventListenerManager {\n    constructor() {\n        this._targetsEventListeners = new Map();\n    }\n    addEventListener(target, type, callback, options) {\n        let eventListeners = this._targetsEventListeners.get(target);\n        if (!eventListeners) {\n            eventListeners = new TargetEventListeners(target);\n            this._targetsEventListeners.set(target, eventListeners);\n        }\n        eventListeners.addEventListener(type, callback, options);\n    }\n    removeEventListener(target, type, callback, options) {\n        const eventListeners = this._targetsEventListeners.get(target);\n        if (!eventListeners) {\n            return;\n        }\n        eventListeners.removeEventListener(type, callback, options);\n        if (eventListeners.isEmpty) {\n            this._targetsEventListeners.delete(target);\n        }\n    }\n    reset() {\n        Array.from(this._targetsEventListeners.entries()).forEach(([target, targetEventListeners]) => {\n            targetEventListeners.reset();\n            this._targetsEventListeners.delete(target);\n        });\n    }\n}\nexport { MultiTargetEventListenerManager as default, MultiTargetEventListenerManager, };\n","export default function scaleRGBTransferFunction(rgbTransferFunction, scalingFactor) {\n    const size = rgbTransferFunction.getSize();\n    for (let index = 0; index < size; index++) {\n        const nodeValue1 = [];\n        rgbTransferFunction.getNodeValue(index, nodeValue1);\n        nodeValue1[1] = nodeValue1[1] * scalingFactor;\n        nodeValue1[2] = nodeValue1[2] * scalingFactor;\n        nodeValue1[3] = nodeValue1[3] * scalingFactor;\n        rgbTransferFunction.setNodeValue(index, nodeValue1);\n    }\n}\n","const LAST_RUNTIME_ID = Symbol('LastRuntimeId');\nconst GLOBAL_CONTEXT = {};\nconst DEFAULT_MAX = 0xffffffff;\nconst DEFAULT_SEPARATOR = '-';\nexport default function getRuntimeId(context, separator, max) {\n    return getNextRuntimeId(context !== null && typeof context === 'object' ? context : GLOBAL_CONTEXT, LAST_RUNTIME_ID, (typeof max === 'number' && max > 0 ? max : DEFAULT_MAX) >>> 0).join(typeof separator === 'string' ? separator : DEFAULT_SEPARATOR);\n}\nfunction getNextRuntimeId(context, symbol, max) {\n    let idComponents = context[symbol];\n    if (!(idComponents instanceof Array)) {\n        idComponents = [0];\n        Object.defineProperty(context, symbol, { value: idComponents });\n    }\n    for (let carry = true, i = 0; carry && i < idComponents.length; ++i) {\n        let n = idComponents[i] | 0;\n        if (n < max) {\n            carry = false;\n            n = n + 1;\n        }\n        else {\n            n = 0;\n            if (i + 1 === idComponents.length) {\n                idComponents.push(0);\n            }\n        }\n        idComponents[i] = n;\n    }\n    return idComponents;\n}\n","import imageIdToURI from './imageIdToURI';\nconst state = {};\nconst metadataProvider = {\n    add: (imageId, payload) => {\n        const imageURI = imageIdToURI(imageId);\n        state[imageURI] = payload;\n    },\n    get: (type, imageId) => {\n        if (type === 'calibratedPixelSpacing') {\n            const imageURI = imageIdToURI(imageId);\n            return state[imageURI];\n        }\n    },\n};\nexport default metadataProvider;\n","export default function isOpposite(v1, v2, tolerance = 1e-5) {\n    return (Math.abs(v1[0] + v2[0]) < tolerance &&\n        Math.abs(v1[1] + v2[1]) < tolerance &&\n        Math.abs(v1[2] + v2[2]) < tolerance);\n}\n","export default function indexWithinDimensions(index, dimensions) {\n    if (index[0] < 0 ||\n        index[0] >= dimensions[0] ||\n        index[1] < 0 ||\n        index[1] >= dimensions[1] ||\n        index[2] < 0 ||\n        index[2] >= dimensions[2]) {\n        return false;\n    }\n    return true;\n}\n","import { getRenderingEngines, getRenderingEngine, } from '../RenderingEngine/getRenderingEngine';\nfunction getVolumeViewportsContainingSameVolumes(targetViewport, renderingEngineId) {\n    let renderingEngines;\n    if (renderingEngineId) {\n        renderingEngines = [getRenderingEngine(renderingEngineId)];\n    }\n    else {\n        renderingEngines = getRenderingEngines();\n    }\n    const sameVolumesViewports = [];\n    renderingEngines.forEach((renderingEngine) => {\n        const targetActors = targetViewport.getActors();\n        const viewports = renderingEngine.getVolumeViewports();\n        for (const vp of viewports) {\n            const vpActors = vp.getActors();\n            if (vpActors.length !== targetActors.length) {\n                continue;\n            }\n            const sameVolumes = targetActors.every(({ uid }) => vpActors.find((vpActor) => uid === vpActor.uid));\n            if (sameVolumes) {\n                sameVolumesViewports.push(vp);\n            }\n        }\n    });\n    return sameVolumesViewports;\n}\nexport default getVolumeViewportsContainingSameVolumes;\n","const isPTPrescaledWithSUV = (image) => {\n    return image.preScale.scaled && image.preScale.scalingParameters.suvbw;\n};\nexport default isPTPrescaledWithSUV;\n","import getOrCreateCanvas, { EPSILON, } from '../RenderingEngine/helpers/getOrCreateCanvas';\nimport { ViewportType, Events } from '../enums';\nimport { getRenderingEngine } from '../RenderingEngine/getRenderingEngine';\nimport RenderingEngine from '../RenderingEngine';\nimport isPTPrescaledWithSUV from './isPTPrescaledWithSUV';\nexport default function renderToCanvasGPU(canvas, imageOrVolume, modality = undefined, renderingEngineId = '_thumbnails', viewportOptions = {\n    displayArea: { imageArea: [1, 1] },\n}) {\n    if (!canvas || !(canvas instanceof HTMLCanvasElement)) {\n        throw new Error('canvas element is required');\n    }\n    const isVolume = !imageOrVolume.imageId;\n    const image = !isVolume && imageOrVolume;\n    const volume = isVolume && imageOrVolume;\n    const imageIdToPrint = image.imageId || volume.volumeId;\n    const viewportId = `renderGPUViewport-${imageIdToPrint}`;\n    const element = document.createElement('div');\n    const devicePixelRatio = window.devicePixelRatio || 1;\n    if (!viewportOptions.displayArea) {\n        viewportOptions.displayArea = { imageArea: [1, 1] };\n    }\n    const originalWidth = canvas.width;\n    const originalHeight = canvas.height;\n    element.style.width = `${originalWidth / devicePixelRatio + EPSILON}px`;\n    element.style.height = `${originalHeight / devicePixelRatio + EPSILON}px`;\n    element.style.visibility = 'hidden';\n    element.style.position = 'absolute';\n    document.body.appendChild(element);\n    const uniqueId = viewportId.split(':').join('-');\n    element.setAttribute('viewport-id-for-remove', uniqueId);\n    const temporaryCanvas = getOrCreateCanvas(element);\n    const renderingEngine = getRenderingEngine(renderingEngineId) ||\n        new RenderingEngine(renderingEngineId);\n    let viewport = renderingEngine.getViewport(viewportId);\n    if (!viewport) {\n        const viewportInput = {\n            viewportId,\n            type: isVolume ? ViewportType.ORTHOGRAPHIC : ViewportType.STACK,\n            element,\n            defaultOptions: {\n                ...viewportOptions,\n                suppressEvents: true,\n            },\n        };\n        renderingEngine.enableElement(viewportInput);\n        viewport = renderingEngine.getViewport(viewportId);\n    }\n    return new Promise((resolve) => {\n        let elementRendered = false;\n        let { viewReference } = viewportOptions;\n        const onImageRendered = (eventDetail) => {\n            if (elementRendered) {\n                return;\n            }\n            if (viewReference) {\n                const useViewRef = viewReference;\n                viewReference = null;\n                viewport.setViewReference(useViewRef);\n                viewport.render();\n                return;\n            }\n            const context = canvas.getContext('2d');\n            context.drawImage(temporaryCanvas, 0, 0, temporaryCanvas.width, temporaryCanvas.height, 0, 0, canvas.width, canvas.height);\n            const origin = viewport.canvasToWorld([0, 0]);\n            const topRight = viewport.canvasToWorld([\n                temporaryCanvas.width / devicePixelRatio,\n                0,\n            ]);\n            const bottomLeft = viewport.canvasToWorld([\n                0,\n                temporaryCanvas.height / devicePixelRatio,\n            ]);\n            const thicknessMm = 1;\n            elementRendered = true;\n            element.removeEventListener(Events.IMAGE_RENDERED, onImageRendered);\n            setTimeout(() => {\n                renderingEngine.disableElement(viewportId);\n                const elements = document.querySelectorAll(`[viewport-id-for-remove=\"${uniqueId}\"]`);\n                elements.forEach((element) => {\n                    element.remove();\n                });\n            }, 0);\n            resolve({\n                origin,\n                bottomLeft,\n                topRight,\n                thicknessMm,\n            });\n        };\n        element.addEventListener(Events.IMAGE_RENDERED, onImageRendered);\n        if (isVolume) {\n            viewport.setVolumes([volume], false, true);\n        }\n        else {\n            viewport.renderImageObject(imageOrVolume);\n        }\n        viewport.resetCamera();\n        if (modality === 'PT' && !isPTPrescaledWithSUV(image)) {\n            viewport.setProperties({\n                voiRange: {\n                    lower: image.minPixelValue,\n                    upper: image.maxPixelValue,\n                },\n            });\n        }\n        viewport.render();\n    });\n}\n","import getDefaultViewport from '../RenderingEngine/helpers/cpuFallback/rendering/getDefaultViewport';\nimport calculateTransform from '../RenderingEngine/helpers/cpuFallback/rendering/calculateTransform';\nimport drawImageSync from '../RenderingEngine/helpers/cpuFallback/drawImageSync';\nexport default function renderToCanvasCPU(canvas, imageOrVolume, modality, _renderingEngineId, _viewportOptions) {\n    const volume = imageOrVolume;\n    if (volume.volumeId) {\n        throw new Error('Unsupported volume rendering for CPU');\n    }\n    const image = imageOrVolume;\n    const viewport = getDefaultViewport(canvas, image, modality);\n    const enabledElement = {\n        canvas,\n        viewport,\n        image,\n        renderingTools: {},\n    };\n    enabledElement.transform = calculateTransform(enabledElement);\n    const invalidated = true;\n    return new Promise((resolve, reject) => {\n        drawImageSync(enabledElement, invalidated);\n        resolve(null);\n    });\n}\n","import { loadAndCacheImage } from '../loaders/imageLoader';\nimport * as metaData from '../metaData';\nimport { RequestType } from '../enums';\nimport imageLoadPoolManager from '../requestPool/imageLoadPoolManager';\nimport renderToCanvasGPU from './renderToCanvasGPU';\nimport renderToCanvasCPU from './renderToCanvasCPU';\nimport { getConfiguration } from '../init';\nimport cache from '../cache/cache';\nexport default function loadImageToCanvas(options) {\n    const { canvas, imageId, viewReference, requestType = RequestType.Thumbnail, priority = -5, renderingEngineId = '_thumbnails', useCPURendering = false, thumbnail = false, imageAspect = false, viewportOptions: baseViewportOptions, } = options;\n    const volumeId = viewReference?.volumeId;\n    const isVolume = volumeId && !imageId;\n    const viewportOptions = viewReference && baseViewportOptions\n        ? { ...baseViewportOptions, viewReference }\n        : baseViewportOptions;\n    const renderFn = useCPURendering ? renderToCanvasCPU : renderToCanvasGPU;\n    return new Promise((resolve, reject) => {\n        function successCallback(imageOrVolume, imageId) {\n            const { modality } = metaData.get('generalSeriesModule', imageId) || {};\n            const image = !isVolume && imageOrVolume;\n            const volume = isVolume && imageOrVolume;\n            if (image) {\n                image.isPreScaled = image.isPreScaled || image.preScale?.scaled;\n            }\n            if (thumbnail) {\n                canvas.height = 256;\n                canvas.width = 256;\n            }\n            if (imageAspect && image) {\n                canvas.width = image && (canvas.height * image.width) / image.height;\n            }\n            canvas.style.width = `${canvas.width / devicePixelRatio}px`;\n            canvas.style.height = `${canvas.height / devicePixelRatio}px`;\n            if (volume && useCPURendering) {\n                reject(new Error('CPU rendering of volume not supported'));\n            }\n            renderFn(canvas, imageOrVolume, modality, renderingEngineId, viewportOptions).then(resolve);\n        }\n        function errorCallback(error, imageId) {\n            console.error(error, imageId);\n            reject(error);\n        }\n        function sendRequest(imageId, imageIdIndex, options) {\n            return loadAndCacheImage(imageId, options).then((image) => {\n                successCallback.call(this, image, imageId);\n            }, (error) => {\n                errorCallback.call(this, error, imageId);\n            });\n        }\n        const options = {\n            useRGBA: !!useCPURendering,\n            requestType,\n        };\n        if (volumeId) {\n            const volume = cache.getVolume(volumeId);\n            if (!volume) {\n                reject(new Error(`Volume id ${volumeId} not found in cache`));\n            }\n            const useImageId = volume.imageIds[0];\n            successCallback(volume, useImageId);\n        }\n        else {\n            imageLoadPoolManager.addRequest(sendRequest.bind(null, imageId, null, options), requestType, { imageId }, priority);\n        }\n    });\n}\n","import { vec3 } from 'gl-matrix';\nimport { get } from '../metaData';\nfunction worldToImageCoords(imageId, worldCoords) {\n    const imagePlaneModule = get('imagePlaneModule', imageId);\n    if (!imagePlaneModule) {\n        throw new Error(`No imagePlaneModule found for imageId: ${imageId}`);\n    }\n    const { columnCosines, rowCosines, imagePositionPatient: origin, } = imagePlaneModule;\n    let { columnPixelSpacing, rowPixelSpacing } = imagePlaneModule;\n    columnPixelSpacing ||= 1;\n    rowPixelSpacing ||= 1;\n    const newOrigin = vec3.create();\n    vec3.scaleAndAdd(newOrigin, origin, columnCosines, -columnPixelSpacing / 2);\n    vec3.scaleAndAdd(newOrigin, newOrigin, rowCosines, -rowPixelSpacing / 2);\n    const sub = vec3.create();\n    vec3.sub(sub, worldCoords, newOrigin);\n    const rowDistance = vec3.dot(sub, rowCosines);\n    const columnDistance = vec3.dot(sub, columnCosines);\n    const imageCoords = [\n        rowDistance / rowPixelSpacing,\n        columnDistance / columnPixelSpacing,\n    ];\n    return imageCoords;\n}\nexport default worldToImageCoords;\n","import { vec3 } from 'gl-matrix';\nimport { get } from '../metaData';\nexport default function imageToWorldCoords(imageId, imageCoords) {\n    const imagePlaneModule = get('imagePlaneModule', imageId);\n    if (!imagePlaneModule) {\n        throw new Error(`No imagePlaneModule found for imageId: ${imageId}`);\n    }\n    const { columnCosines, rowCosines, imagePositionPatient: origin, } = imagePlaneModule;\n    let { columnPixelSpacing, rowPixelSpacing } = imagePlaneModule;\n    columnPixelSpacing ||= 1;\n    rowPixelSpacing ||= 1;\n    const imageCoordsInWorld = vec3.create();\n    vec3.scaleAndAdd(imageCoordsInWorld, origin, rowCosines, rowPixelSpacing * (imageCoords[0] - 0.5));\n    vec3.scaleAndAdd(imageCoordsInWorld, imageCoordsInWorld, columnCosines, columnPixelSpacing * (imageCoords[1] - 0.5));\n    return Array.from(imageCoordsInWorld);\n}\n","import { getRenderingEngines } from '../RenderingEngine/getRenderingEngine';\nexport default function getViewportsWithImageURI(imageURI) {\n    const renderingEngines = getRenderingEngines();\n    const viewports = [];\n    renderingEngines.forEach((renderingEngine) => {\n        const viewportsForRenderingEngine = renderingEngine.getViewports();\n        viewportsForRenderingEngine.forEach((viewport) => {\n            if (viewport.hasImageURI(imageURI)) {\n                viewports.push(viewport);\n            }\n        });\n    });\n    return viewports;\n}\n","import { vec3 } from 'gl-matrix';\nimport * as planar from './planar';\nimport * as metaData from '../metaData';\nexport default function getClosestStackImageIndexForPoint(point, viewport) {\n    const minimalDistance = calculateMinimalDistanceForStackViewport(point, viewport);\n    return minimalDistance ? minimalDistance.index : null;\n}\nexport function calculateMinimalDistanceForStackViewport(point, viewport) {\n    const imageIds = viewport.getImageIds();\n    const currentImageIdIndex = viewport.getCurrentImageIdIndex();\n    if (imageIds.length === 0) {\n        return null;\n    }\n    const getDistance = (imageId) => {\n        const planeMetadata = getPlaneMetadata(imageId);\n        if (!planeMetadata) {\n            return null;\n        }\n        const plane = planar.planeEquation(planeMetadata.planeNormal, planeMetadata.imagePositionPatient);\n        const distance = planar.planeDistanceToPoint(plane, point);\n        return distance;\n    };\n    const closestStack = {\n        distance: getDistance(imageIds[currentImageIdIndex]) ?? Infinity,\n        index: currentImageIdIndex,\n    };\n    const higherImageIds = imageIds.slice(currentImageIdIndex + 1);\n    for (let i = 0; i < higherImageIds.length; i++) {\n        const id = higherImageIds[i];\n        const distance = getDistance(id);\n        if (distance === null) {\n            continue;\n        }\n        if (distance <= closestStack.distance) {\n            closestStack.distance = distance;\n            closestStack.index = i + currentImageIdIndex + 1;\n        }\n        else {\n            break;\n        }\n    }\n    const lowerImageIds = imageIds.slice(0, currentImageIdIndex);\n    for (let i = lowerImageIds.length - 1; i >= 0; i--) {\n        const id = lowerImageIds[i];\n        const distance = getDistance(id);\n        if (distance === null || distance === closestStack.distance) {\n            continue;\n        }\n        if (distance < closestStack.distance) {\n            closestStack.distance = distance;\n            closestStack.index = i;\n        }\n        else {\n            break;\n        }\n    }\n    return closestStack.distance === Infinity ? null : closestStack;\n}\nfunction getPlaneMetadata(imageId) {\n    const targetImagePlane = metaData.get('imagePlaneModule', imageId);\n    if (!targetImagePlane ||\n        !(targetImagePlane.rowCosines instanceof Array &&\n            targetImagePlane.rowCosines.length === 3) ||\n        !(targetImagePlane.columnCosines instanceof Array &&\n            targetImagePlane.columnCosines.length === 3) ||\n        !(targetImagePlane.imagePositionPatient instanceof Array &&\n            targetImagePlane.imagePositionPatient.length === 3)) {\n        return null;\n    }\n    const { rowCosines, columnCosines, imagePositionPatient, } = targetImagePlane;\n    const rowVec = vec3.set(vec3.create(), ...rowCosines);\n    const colVec = vec3.set(vec3.create(), ...columnCosines);\n    const planeNormal = vec3.cross(vec3.create(), rowVec, colVec);\n    return { rowCosines, columnCosines, imagePositionPatient, planeNormal };\n}\n","import { glMatrix, vec3 } from 'gl-matrix';\nimport { transformCanvasToIJK } from './transformCanvasToIJK';\nfunction getCurrentVolumeViewportSlice(viewport) {\n    const { width: canvasWidth, height: canvasHeight } = viewport.getCanvas();\n    const { sliceToIndexMatrix, indexToSliceMatrix } = viewport.getSliceViewInfo();\n    const ijkOriginPoint = transformCanvasToIJK(viewport, [0, 0]);\n    const ijkRowPoint = transformCanvasToIJK(viewport, [canvasWidth - 1, 0]);\n    const ijkColPoint = transformCanvasToIJK(viewport, [0, canvasHeight - 1]);\n    const ijkRowVec = vec3.sub(vec3.create(), ijkRowPoint, ijkOriginPoint);\n    const ijkColVec = vec3.sub(vec3.create(), ijkColPoint, ijkOriginPoint);\n    const ijkSliceVec = vec3.cross(vec3.create(), ijkRowVec, ijkColVec);\n    vec3.normalize(ijkRowVec, ijkRowVec);\n    vec3.normalize(ijkColVec, ijkColVec);\n    vec3.normalize(ijkSliceVec, ijkSliceVec);\n    const maxIJKRowVec = Math.max(Math.abs(ijkRowVec[0]), Math.abs(ijkRowVec[1]), Math.abs(ijkRowVec[2]));\n    const maxIJKColVec = Math.max(Math.abs(ijkColVec[0]), Math.abs(ijkColVec[1]), Math.abs(ijkColVec[2]));\n    if (!glMatrix.equals(1, maxIJKRowVec) || !glMatrix.equals(1, maxIJKColVec)) {\n        throw new Error('Livewire is not available for rotate/oblique viewports');\n    }\n    const { voxelManager } = viewport.getImageData();\n    const sliceViewInfo = viewport.getSliceViewInfo();\n    const scalarData = voxelManager.getSliceData(sliceViewInfo);\n    return {\n        width: sliceViewInfo.width,\n        height: sliceViewInfo.height,\n        scalarData,\n        sliceToIndexMatrix,\n        indexToSliceMatrix,\n    };\n}\nexport { getCurrentVolumeViewportSlice as default, getCurrentVolumeViewportSlice, };\n","import { mat4 } from 'gl-matrix';\nimport { addProvider } from '../metaData';\nconst state = {};\nconst spatialRegistrationMetadataProvider = {\n    add: (query, payload) => {\n        const [viewportId1, viewportId2] = query;\n        const entryId = `${viewportId1}_${viewportId2}`;\n        if (!state[entryId]) {\n            state[entryId] = {};\n        }\n        state[entryId] = payload;\n    },\n    get: (type, viewportId1, viewportId2) => {\n        if (type !== 'spatialRegistrationModule') {\n            return;\n        }\n        const entryId = `${viewportId1}_${viewportId2}`;\n        if (state[entryId]) {\n            return state[entryId];\n        }\n        const entryIdReverse = `${viewportId2}_${viewportId1}`;\n        if (state[entryIdReverse]) {\n            return mat4.invert(mat4.create(), state[entryIdReverse]);\n        }\n    },\n};\naddProvider(spatialRegistrationMetadataProvider.get.bind(spatialRegistrationMetadataProvider));\nexport default spatialRegistrationMetadataProvider;\n","import { vec3, mat4 } from 'gl-matrix';\nimport spatialRegistrationMetadataProvider from './spatialRegistrationMetadataProvider';\nimport { get } from '../metaData';\nconst ALLOWED_DELTA = 0.05;\nfunction calculateViewportsSpatialRegistration(viewport1, viewport2) {\n    const imageId1 = viewport1.getSliceIndex();\n    const imageId2 = viewport2.getSliceIndex();\n    const imagePlaneModule1 = get('imagePlaneModule', imageId1.toString());\n    const imagePlaneModule2 = get('imagePlaneModule', imageId2.toString());\n    if (!imagePlaneModule1 || !imagePlaneModule2) {\n        console.log('Viewport spatial registration requires image plane module');\n        return;\n    }\n    const { imageOrientationPatient: iop2 } = imagePlaneModule2;\n    const isSameImagePlane = imagePlaneModule1.imageOrientationPatient.every((v, i) => Math.abs(v - iop2[i]) < ALLOWED_DELTA);\n    if (!isSameImagePlane) {\n        console.log('Viewport spatial registration only supported for same orientation (hence translation only) for now', imagePlaneModule1?.imageOrientationPatient, imagePlaneModule2?.imageOrientationPatient);\n        return;\n    }\n    const imagePositionPatient1 = imagePlaneModule1.imagePositionPatient;\n    const imagePositionPatient2 = imagePlaneModule2.imagePositionPatient;\n    const translation = vec3.subtract(vec3.create(), imagePositionPatient1, imagePositionPatient2);\n    const mat = mat4.fromTranslation(mat4.create(), translation);\n    spatialRegistrationMetadataProvider.add([viewport1.id, viewport2.id], mat);\n}\nexport default calculateViewportsSpatialRegistration;\n","export default function getViewportImageCornersInWorld(viewport) {\n    const { imageData, dimensions } = viewport.getImageData();\n    const { canvas } = viewport;\n    const ratio = window.devicePixelRatio;\n    const topLeftCanvas = [0, 0];\n    const topRightCanvas = [canvas.width / ratio, 0];\n    const bottomRightCanvas = [\n        canvas.width / ratio,\n        canvas.height / ratio,\n    ];\n    const bottomLeftCanvas = [0, canvas.height / ratio];\n    const topLeftWorld = viewport.canvasToWorld(topLeftCanvas);\n    const topRightWorld = viewport.canvasToWorld(topRightCanvas);\n    const bottomRightWorld = viewport.canvasToWorld(bottomRightCanvas);\n    const bottomLeftWorld = viewport.canvasToWorld(bottomLeftCanvas);\n    const topLeftImage = imageData.worldToIndex(topLeftWorld);\n    const topRightImage = imageData.worldToIndex(topRightWorld);\n    const bottomRightImage = imageData.worldToIndex(bottomRightWorld);\n    const bottomLeftImage = imageData.worldToIndex(bottomLeftWorld);\n    return _getStackViewportImageCorners({\n        dimensions,\n        imageData,\n        topLeftImage,\n        topRightImage,\n        bottomRightImage,\n        bottomLeftImage,\n        topLeftWorld,\n        topRightWorld,\n        bottomRightWorld,\n        bottomLeftWorld,\n    });\n}\nfunction _getStackViewportImageCorners({ dimensions, imageData, topLeftImage, topRightImage, bottomRightImage, bottomLeftImage, topLeftWorld, topRightWorld, bottomRightWorld, bottomLeftWorld, }) {\n    const topLeftImageWorld = _isInBounds(topLeftImage, dimensions)\n        ? topLeftWorld\n        : imageData.indexToWorld([0, 0, 0]);\n    const topRightImageWorld = _isInBounds(topRightImage, dimensions)\n        ? topRightWorld\n        : imageData.indexToWorld([dimensions[0] - 1, 0, 0]);\n    const bottomRightImageWorld = _isInBounds(bottomRightImage, dimensions)\n        ? bottomRightWorld\n        : imageData.indexToWorld([\n            dimensions[0] - 1,\n            dimensions[1] - 1,\n            0,\n        ]);\n    const bottomLeftImageWorld = _isInBounds(bottomLeftImage, dimensions)\n        ? bottomLeftWorld\n        : imageData.indexToWorld([0, dimensions[1] - 1, 0]);\n    return [\n        topLeftImageWorld,\n        topRightImageWorld,\n        bottomLeftImageWorld,\n        bottomRightImageWorld,\n    ];\n}\nfunction _isInBounds(imageCoord, dimensions) {\n    return (imageCoord[0] > 0 ||\n        imageCoord[0] < dimensions[0] - 1 ||\n        imageCoord[1] > 0 ||\n        imageCoord[1] < dimensions[1] - 1 ||\n        imageCoord[2] > 0 ||\n        imageCoord[2] < dimensions[2] - 1);\n}\n","export default class PointsManager {\n    constructor(configuration = {}) {\n        this._dimensions = 3;\n        this._length = 0;\n        this._byteSize = 4;\n        this.growSize = 128;\n        const { initialSize = 1024, dimensions = 3, growSize = 128, } = configuration;\n        const itemLength = initialSize * dimensions;\n        this.growSize = growSize;\n        this.array = new ArrayBuffer(itemLength * this._byteSize);\n        this.data = new Float32Array(this.array);\n        this._dimensions = dimensions;\n    }\n    forEach(func) {\n        for (let i = 0; i < this._length; i++) {\n            func(this.getPoint(i), i);\n        }\n    }\n    get length() {\n        return this._length;\n    }\n    get dimensions() {\n        return this._dimensions;\n    }\n    get dimensionLength() {\n        return this._length * this._dimensions;\n    }\n    getPoint(index) {\n        if (index < 0) {\n            index += this._length;\n        }\n        if (index < 0 || index >= this._length) {\n            return;\n        }\n        const offset = this._dimensions * index;\n        return this.data.subarray(offset, offset + this._dimensions);\n    }\n    getPointArray(index) {\n        const array = [];\n        if (index < 0) {\n            index += this._length;\n        }\n        if (index < 0 || index >= this._length) {\n            return;\n        }\n        const offset = this._dimensions * index;\n        for (let i = 0; i < this._dimensions; i++) {\n            array.push(this.data[i + offset]);\n        }\n        return array;\n    }\n    grow(additionalSize = 1, growSize = this.growSize) {\n        if (this.dimensionLength + additionalSize * this._dimensions <=\n            this.data.length) {\n            return;\n        }\n        const newSize = this.data.length + growSize;\n        const newArray = new ArrayBuffer(newSize * this._dimensions * this._byteSize);\n        const newData = new Float32Array(newArray);\n        newData.set(this.data);\n        this.data = newData;\n        this.array = newArray;\n    }\n    reverse() {\n        const midLength = Math.floor(this._length / 2);\n        for (let i = 0; i < midLength; i++) {\n            const indexStart = i * this._dimensions;\n            const indexEnd = (this._length - 1 - i) * this._dimensions;\n            for (let dimension = 0; dimension < this._dimensions; dimension++) {\n                const valueStart = this.data[indexStart + dimension];\n                this.data[indexStart + dimension] = this.data[indexEnd + dimension];\n                this.data[indexEnd + dimension] = valueStart;\n            }\n        }\n    }\n    push(point) {\n        this.grow(1);\n        const offset = this.length * this._dimensions;\n        for (let i = 0; i < this._dimensions; i++) {\n            this.data[i + offset] = point[i];\n        }\n        this._length++;\n    }\n    map(f) {\n        const mapData = [];\n        for (let i = 0; i < this._length; i++) {\n            mapData.push(f(this.getPoint(i), i));\n        }\n        return mapData;\n    }\n    get points() {\n        return this.map((p) => p);\n    }\n    toXYZ() {\n        const xyz = { x: [], y: [] };\n        if (this._dimensions >= 3) {\n            xyz.z = [];\n        }\n        const { x, y, z } = xyz;\n        this.forEach((p) => {\n            x.push(p[0]);\n            y.push(p[1]);\n            if (z) {\n                z.push(p[2]);\n            }\n        });\n        return xyz;\n    }\n    static fromXYZ({ x, y, z }) {\n        const array = PointsManager.create3(x.length);\n        let offset = 0;\n        for (let i = 0; i < x.length; i++) {\n            array.data[offset++] = x[i];\n            array.data[offset++] = y[i];\n            array.data[offset++] = z ? z[i] : 0;\n        }\n        array._length = x.length;\n        return array;\n    }\n    subselect(count = 10, offset = 0) {\n        const selected = new PointsManager({\n            initialSize: count,\n            dimensions: this._dimensions,\n        });\n        for (let i = 0; i < count; i++) {\n            const index = (offset + Math.floor((this.length * i) / count)) % this.length;\n            selected.push(this.getPoint(index));\n        }\n        return selected;\n    }\n    static create3(initialSize = 128) {\n        return new PointsManager({ initialSize, dimensions: 3 });\n    }\n    static create2(initialSize = 128) {\n        return new PointsManager({ initialSize, dimensions: 2 });\n    }\n}\n","import StackViewport from '../RenderingEngine/StackViewport';\nimport getEnabledElement from '../getEnabledElement';\nfunction getImageLegacy(element) {\n    const enabledElement = getEnabledElement(element);\n    if (!enabledElement) {\n        return;\n    }\n    const { viewport } = enabledElement;\n    if (!(viewport instanceof StackViewport)) {\n        throw new Error(`An image can only be fetched for a stack viewport and not for a viewport of type: ${viewport.type}`);\n    }\n    return viewport.getCornerstoneImage();\n}\nexport default getImageLegacy;\n","import * as metaData from '../metaData';\nimport isEqual from './isEqual';\nfunction isValidVolume(imageIds) {\n    const imageId0 = imageIds[0];\n    const { modality, seriesInstanceUID } = metaData.get('generalSeriesModule', imageId0);\n    const { imageOrientationPatient, pixelSpacing, frameOfReferenceUID, columns, rows, } = metaData.get('imagePlaneModule', imageId0);\n    const baseMetadata = {\n        modality,\n        imageOrientationPatient,\n        pixelSpacing,\n        frameOfReferenceUID,\n        columns,\n        rows,\n        seriesInstanceUID,\n    };\n    const validVolume = imageIds.every((imageId) => {\n        const { modality, seriesInstanceUID } = metaData.get('generalSeriesModule', imageId);\n        const { imageOrientationPatient, pixelSpacing, columns, rows } = metaData.get('imagePlaneModule', imageId);\n        return (seriesInstanceUID === baseMetadata.seriesInstanceUID &&\n            modality === baseMetadata.modality &&\n            columns === baseMetadata.columns &&\n            rows === baseMetadata.rows &&\n            isEqual(imageOrientationPatient, baseMetadata.imageOrientationPatient) &&\n            isEqual(pixelSpacing, baseMetadata.pixelSpacing));\n    });\n    return validVolume;\n}\nexport { isValidVolume };\n","export const videoUIDs = new Set([\n    '1.2.840.10008.1.2.4.100',\n    '1.2.840.10008.1.2.4.100.1',\n    '1.2.840.10008.1.2.4.101',\n    '1.2.840.10008.1.2.4.101.1',\n    '1.2.840.10008.1.2.4.102',\n    '1.2.840.10008.1.2.4.102.1',\n    '1.2.840.10008.1.2.4.103',\n    '1.2.840.10008.1.2.4.103.1',\n    '1.2.840.10008.1.2.4.104',\n    '1.2.840.10008.1.2.4.104.1',\n    '1.2.840.10008.1.2.4.105',\n    '1.2.840.10008.1.2.4.105.1',\n    '1.2.840.10008.1.2.4.106',\n    '1.2.840.10008.1.2.4.106.1',\n    '1.2.840.10008.1.2.4.107',\n    '1.2.840.10008.1.2.4.108',\n]);\nexport default function isVideoTransferSyntax(uidOrUids) {\n    if (!uidOrUids) {\n        return false;\n    }\n    const uids = Array.isArray(uidOrUids) ? uidOrUids : [uidOrUids];\n    return uids.find((uid) => videoUIDs.has(uid));\n}\n","import { setVolumesForViewports } from '../RenderingEngine/helpers';\nimport { createAndCacheVolume, getUnknownVolumeLoaderSchema, } from '../loaders/volumeLoader';\nimport { Events, ViewportType } from '../enums';\nimport uuidv4 from './uuidv4';\nasync function convertStackToVolumeViewport({ viewport, options = {}, }) {\n    const renderingEngine = viewport.getRenderingEngine();\n    let volumeId = options.volumeId || `${uuidv4()}`;\n    if (volumeId.split(':').length === 0) {\n        const schema = getUnknownVolumeLoaderSchema();\n        volumeId = `${schema}:${volumeId}`;\n    }\n    const { id, element } = viewport;\n    const viewportId = options.viewportId || id;\n    const imageIds = viewport.getImageIds();\n    const prevViewPresentation = viewport.getViewPresentation();\n    const prevViewReference = viewport.getViewReference();\n    renderingEngine.enableElement({\n        viewportId,\n        type: ViewportType.ORTHOGRAPHIC,\n        element,\n        defaultOptions: {\n            background: options.background,\n            orientation: options.orientation,\n        },\n    });\n    const volume = (await createAndCacheVolume(volumeId, {\n        imageIds,\n    }));\n    volume.load();\n    const volumeViewport = renderingEngine.getViewport(viewportId);\n    await setVolumesForViewports(renderingEngine, [\n        {\n            volumeId,\n        },\n    ], [viewportId]);\n    const volumeViewportNewVolumeHandler = () => {\n        volumeViewport.render();\n        element.removeEventListener(Events.VOLUME_VIEWPORT_NEW_VOLUME, volumeViewportNewVolumeHandler);\n    };\n    const addVolumeViewportNewVolumeListener = () => {\n        element.addEventListener(Events.VOLUME_VIEWPORT_NEW_VOLUME, volumeViewportNewVolumeHandler);\n    };\n    addVolumeViewportNewVolumeListener();\n    volumeViewport.setViewPresentation(prevViewPresentation);\n    volumeViewport.setViewReference(prevViewReference);\n    volumeViewport.render();\n    return volumeViewport;\n}\nexport { convertStackToVolumeViewport };\n","import cache from '../cache/cache';\nimport { ImageVolume } from '../cache/classes/ImageVolume';\nimport { ViewportType } from '../enums';\nasync function convertVolumeToStackViewport({ viewport, options, }) {\n    const volumeViewport = viewport;\n    const { id, element } = volumeViewport;\n    const renderingEngine = viewport.getRenderingEngine();\n    const { background } = options;\n    const viewportId = options.viewportId || id;\n    const volume = cache.getVolume(volumeViewport.getVolumeId());\n    if (!(volume instanceof ImageVolume)) {\n        throw new Error('Currently, you cannot decache a volume that is not an ImageVolume. So, unfortunately, volumes such as nifti  (which are basic Volume, without imageIds) cannot be decached.');\n    }\n    const viewportInput = {\n        viewportId,\n        type: ViewportType.STACK,\n        element,\n        defaultOptions: {\n            background,\n        },\n    };\n    const prevView = volumeViewport.getViewReference();\n    renderingEngine.enableElement(viewportInput);\n    const stackViewport = renderingEngine.getViewport(viewportId);\n    await stackViewport.setStack(volume.imageIds);\n    stackViewport.setViewReference(prevView);\n    stackViewport.render();\n    return stackViewport;\n}\nexport { convertVolumeToStackViewport };\n","import { EPSILON } from '../constants';\nfunction roundNumber(value, precision = 2) {\n    if (Array.isArray(value)) {\n        return value.map((v) => roundNumber(v, precision)).join(', ');\n    }\n    if (value === undefined || value === null || value === '') {\n        return 'NaN';\n    }\n    value = Number(value);\n    const absValue = Math.abs(value);\n    if (absValue < 0.0001) {\n        return `${value}`;\n    }\n    const fixedPrecision = absValue >= 100\n        ? precision - 2\n        : absValue >= 10\n            ? precision - 1\n            : absValue >= 1\n                ? precision\n                : absValue >= 0.1\n                    ? precision + 1\n                    : absValue >= 0.01\n                        ? precision + 2\n                        : absValue >= 0.001\n                            ? precision + 3\n                            : precision + 4;\n    return value.toFixed(fixedPrecision);\n}\nfunction roundToPrecision(value) {\n    return Math.round(value / EPSILON) * EPSILON;\n}\nexport { roundToPrecision };\nexport default roundNumber;\n","export default function convertToGrayscale(scalarData, width, height) {\n    const isRGBA = scalarData.length === width * height * 4;\n    const isRGB = scalarData.length === width * height * 3;\n    if (isRGBA || isRGB) {\n        const newScalarData = new Float32Array(width * height);\n        let offset = 0;\n        let destOffset = 0;\n        const increment = isRGBA ? 4 : 3;\n        for (let x = 0; x < width; x++) {\n            for (let y = 0; y < height; y++) {\n                const r = scalarData[offset];\n                const g = scalarData[offset + 1];\n                const b = scalarData[offset + 2];\n                newScalarData[destOffset] = (r + g + b) / 3;\n                offset += increment;\n                destOffset++;\n            }\n        }\n        return newScalarData;\n    }\n    else {\n        return scalarData;\n    }\n}\n","import { VolumeViewport } from '../RenderingEngine';\nimport cache from '../cache/cache';\nfunction getViewportImageIds(viewport) {\n    if (viewport instanceof VolumeViewport) {\n        const volume = cache.getVolume(viewport.getVolumeId());\n        return volume.imageIds;\n    }\n    else if (viewport.getImageIds) {\n        return viewport.getImageIds();\n    }\n}\nexport default getViewportImageIds;\n","export function getRandomSampleFromArray(array, size) {\n    const clonedArray = [...array];\n    if (size >= clonedArray.length) {\n        shuffleArray(clonedArray);\n        return clonedArray;\n    }\n    shuffleArray(clonedArray);\n    return clonedArray.slice(0, size);\n}\nfunction shuffleArray(array) {\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n    }\n}\n","function componentToHex(c) {\n    const hex = c.toString(16);\n    return hex.length == 1 ? '0' + hex : hex;\n}\nfunction rgbToHex(r, g, b) {\n    return '#' + componentToHex(r) + componentToHex(g) + componentToHex(b);\n}\nfunction hexToRgb(hex) {\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result\n        ? {\n            r: parseInt(result[1], 16),\n            g: parseInt(result[2], 16),\n            b: parseInt(result[3], 16),\n        }\n        : null;\n}\nexport { hexToRgb, rgbToHex };\n","export function deepEqual(obj1, obj2) {\n    if (obj1 === obj2) {\n        return true;\n    }\n    if (obj1 == null || obj2 == null) {\n        return false;\n    }\n    try {\n        return JSON.stringify(obj1) === JSON.stringify(obj2);\n    }\n    catch (error) {\n        console.debug('Error in JSON.stringify during deep comparison:', error);\n        return obj1 === obj2;\n    }\n}\n","import * as metaData from '../metaData';\nconst groupBy = (array, key) => {\n    return array.reduce((rv, x) => {\n        (rv[x[key]] = rv[x[key]] || []).push(x);\n        return rv;\n    }, {});\n};\nfunction getIPPGroups(imageIds) {\n    const ippMetadata = imageIds.map((imageId) => {\n        const { imagePositionPatient } = metaData.get('imagePlaneModule', imageId) || {};\n        return { imageId, imagePositionPatient };\n    });\n    if (!ippMetadata.every((item) => item.imagePositionPatient)) {\n        return null;\n    }\n    const positionGroups = groupBy(ippMetadata, 'imagePositionPatient');\n    const positions = Object.keys(positionGroups);\n    const frame_count = positionGroups[positions[0]].length;\n    if (frame_count === 1) {\n        return null;\n    }\n    const frame_count_equal = positions.every((k) => positionGroups[k].length === frame_count);\n    if (!frame_count_equal) {\n        return null;\n    }\n    return positionGroups;\n}\nfunction test4DTag(IPPGroups, value_getter) {\n    const frame_groups = {};\n    let first_frame_value_set = [];\n    const positions = Object.keys(IPPGroups);\n    for (let i = 0; i < positions.length; i++) {\n        const frame_value_set = new Set();\n        const frames = IPPGroups[positions[i]];\n        for (let j = 0; j < frames.length; j++) {\n            const frame_value = value_getter(frames[j].imageId) || 0;\n            frame_groups[frame_value] = frame_groups[frame_value] || [];\n            frame_groups[frame_value].push({ imageId: frames[j].imageId });\n            frame_value_set.add(frame_value);\n            if (frame_value_set.size - 1 < j) {\n                return undefined;\n            }\n        }\n        if (i == 0) {\n            first_frame_value_set = Array.from(frame_value_set);\n        }\n        else if (!setEquals(first_frame_value_set, frame_value_set)) {\n            return undefined;\n        }\n    }\n    return frame_groups;\n}\nfunction getTagValue(imageId, tag) {\n    const value = metaData.get(tag, imageId);\n    try {\n        return parseFloat(value);\n    }\n    catch {\n        return undefined;\n    }\n}\nfunction getPhilipsPrivateBValue(imageId) {\n    const value = metaData.get('20011003', imageId);\n    try {\n        const { InlineBinary } = value;\n        if (InlineBinary) {\n            const value_bytes = atob(InlineBinary);\n            const ary_buf = new ArrayBuffer(value_bytes.length);\n            const dv = new DataView(ary_buf);\n            for (let i = 0; i < value_bytes.length; i++) {\n                dv.setUint8(i, value_bytes.charCodeAt(i));\n            }\n            return new Float32Array(ary_buf)[0];\n        }\n        return parseFloat(value);\n    }\n    catch {\n        return undefined;\n    }\n}\nfunction getSiemensPrivateBValue(imageId) {\n    let value = metaData.get('0019100c', imageId) || metaData.get('0019100C', imageId);\n    try {\n        const { InlineBinary } = value;\n        if (InlineBinary) {\n            value = atob(InlineBinary);\n        }\n        return parseFloat(value);\n    }\n    catch {\n        return undefined;\n    }\n}\nfunction getGEPrivateBValue(imageId) {\n    let value = metaData.get('00431039', imageId);\n    try {\n        const { InlineBinary } = value;\n        if (InlineBinary) {\n            value = atob(InlineBinary).split('//');\n        }\n        return parseFloat(value[0]) % 100000;\n    }\n    catch {\n        return undefined;\n    }\n}\nfunction setEquals(set_a, set_b) {\n    if (set_a.length != set_b.size) {\n        return false;\n    }\n    for (let i = 0; i < set_a.length; i++) {\n        if (!set_b.has(set_a[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction getPetFrameReferenceTime(imageId) {\n    const moduleInfo = metaData.get('petImageModule', imageId);\n    return moduleInfo ? moduleInfo['frameReferenceTime'] : 0;\n}\nfunction splitImageIdsBy4DTags(imageIds) {\n    const positionGroups = getIPPGroups(imageIds);\n    if (!positionGroups) {\n        return { imageIdGroups: [imageIds], splittingTag: null };\n    }\n    const tags = [\n        'TemporalPositionIdentifier',\n        'DiffusionBValue',\n        'TriggerTime',\n        'EchoTime',\n        'EchoNumber',\n        'PhilipsPrivateBValue',\n        'SiemensPrivateBValue',\n        'GEPrivateBValue',\n        'PetFrameReferenceTime',\n    ];\n    const fncList2 = [\n        (imageId) => getTagValue(imageId, tags[0]),\n        (imageId) => getTagValue(imageId, tags[1]),\n        (imageId) => getTagValue(imageId, tags[2]),\n        (imageId) => getTagValue(imageId, tags[3]),\n        (imageId) => getTagValue(imageId, tags[4]),\n        getPhilipsPrivateBValue,\n        getSiemensPrivateBValue,\n        getGEPrivateBValue,\n        getPetFrameReferenceTime,\n    ];\n    for (let i = 0; i < fncList2.length; i++) {\n        const frame_groups = test4DTag(positionGroups, fncList2[i]);\n        if (frame_groups) {\n            const sortedKeys = Object.keys(frame_groups)\n                .map(Number.parseFloat)\n                .sort((a, b) => a - b);\n            const imageIdGroups = sortedKeys.map((key) => frame_groups[key].map((item) => item.imageId));\n            return { imageIdGroups, splittingTag: tags[i] };\n        }\n    }\n    return { imageIdGroups: [imageIds], splittingTag: null };\n}\nexport default splitImageIdsBy4DTags;\n","import splitImageIdsBy4DTags from './splitImageIdsBy4DTags';\nfunction getDynamicVolumeInfo(imageIds) {\n    const { imageIdGroups: timePoints, splittingTag } = splitImageIdsBy4DTags(imageIds);\n    const isDynamicVolume = timePoints.length > 1;\n    return { isDynamicVolume, timePoints, splittingTag };\n}\nexport default getDynamicVolumeInfo;\n","export default function scaleArray(array, scalingParameters) {\n    const arrayLength = array.length;\n    const { rescaleSlope, rescaleIntercept, suvbw } = scalingParameters;\n    if (scalingParameters.modality === 'PT' && typeof suvbw === 'number') {\n        for (let i = 0; i < arrayLength; i++) {\n            array[i] = suvbw * (array[i] * rescaleSlope + rescaleIntercept);\n        }\n    }\n    else {\n        for (let i = 0; i < arrayLength; i++) {\n            array[i] = array[i] * rescaleSlope + rescaleIntercept;\n        }\n    }\n    return array;\n}\n","export function clip(val, low, high) {\n    return Math.min(Math.max(low, val), high);\n}\nexport function clipToBox(point, box) {\n    point.x = clip(point.x, 0, box.width);\n    point.y = clip(point.y, 0, box.height);\n}\nexport default clip;\n","import { Events } from '../enums';\nimport { StackViewport, VolumeViewport } from '../RenderingEngine';\nimport getVolumeViewportScrollInfo from './getVolumeViewportScrollInfo';\nimport snapFocalPointToSlice from './snapFocalPointToSlice';\nimport getEnabledElement from '../getEnabledElement';\nimport triggerEvent from './triggerEvent';\nimport eventTarget from '../eventTarget';\nexport default function scroll(viewport, options) {\n    const enabledElement = getEnabledElement(viewport.element);\n    if (!enabledElement) {\n        throw new Error('Scroll::Viewport is not enabled (it might be disabled)');\n    }\n    if (viewport instanceof StackViewport &&\n        viewport.getImageIds().length === 0) {\n        throw new Error('Scroll::Stack Viewport has no images');\n    }\n    const { volumeId, delta, scrollSlabs } = options;\n    if (viewport instanceof VolumeViewport) {\n        scrollVolume(viewport, volumeId, delta, scrollSlabs);\n    }\n    else {\n        const imageIdIndex = viewport.getCurrentImageIdIndex();\n        if (imageIdIndex + delta >\n            viewport.getImageIds().length - 1 ||\n            imageIdIndex + delta < 0) {\n            const eventData = {\n                imageIdIndex,\n                direction: delta,\n            };\n            triggerEvent(eventTarget, Events.STACK_SCROLL_OUT_OF_BOUNDS, eventData);\n        }\n        viewport.scroll(delta, options.debounceLoading, options.loop);\n    }\n}\nexport function scrollVolume(viewport, volumeId, delta, scrollSlabs = false) {\n    const useSlabThickness = scrollSlabs;\n    const { numScrollSteps, currentStepIndex, sliceRangeInfo } = getVolumeViewportScrollInfo(viewport, volumeId, useSlabThickness);\n    if (!sliceRangeInfo) {\n        return;\n    }\n    const { sliceRange, spacingInNormalDirection, camera } = sliceRangeInfo;\n    const { focalPoint, viewPlaneNormal, position } = camera;\n    const { newFocalPoint, newPosition } = snapFocalPointToSlice(focalPoint, position, sliceRange, viewPlaneNormal, spacingInNormalDirection, delta);\n    viewport.setCamera({\n        focalPoint: newFocalPoint,\n        position: newPosition,\n    });\n    viewport.render();\n    const desiredStepIndex = currentStepIndex + delta;\n    const VolumeScrollEventDetail = {\n        volumeId,\n        viewport,\n        delta,\n        desiredStepIndex,\n        currentStepIndex,\n        numScrollSteps,\n        currentImageId: viewport.getCurrentImageId(),\n    };\n    if ((desiredStepIndex > numScrollSteps || desiredStepIndex < 0) &&\n        viewport.getCurrentImageId()) {\n        triggerEvent(eventTarget, Events.VOLUME_VIEWPORT_SCROLL_OUT_OF_BOUNDS, VolumeScrollEventDetail);\n    }\n    else {\n        triggerEvent(eventTarget, Events.VOLUME_VIEWPORT_SCROLL, VolumeScrollEventDetail);\n    }\n}\n","import clip from './clip';\nimport scroll from './scroll';\nimport getEnabledElement from '../getEnabledElement';\nimport StackViewport from '../RenderingEngine/StackViewport';\nasync function jumpToSlice(element, options = {}) {\n    const { imageIndex, debounceLoading, volumeId } = options;\n    const enabledElement = getEnabledElement(element);\n    if (!enabledElement) {\n        throw new Error('Element has been disabled');\n    }\n    const { viewport } = enabledElement;\n    const { imageIndex: currentImageIndex, numberOfSlices } = _getImageSliceData(viewport, debounceLoading);\n    const imageIndexToJump = _getImageIndexToJump(numberOfSlices, imageIndex);\n    const delta = imageIndexToJump - currentImageIndex;\n    scroll(viewport, { delta, debounceLoading, volumeId });\n}\nfunction _getImageSliceData(viewport, debounceLoading) {\n    if (viewport instanceof StackViewport) {\n        return {\n            numberOfSlices: viewport.getImageIds().length,\n            imageIndex: debounceLoading\n                ? viewport.getTargetImageIdIndex()\n                : viewport.getCurrentImageIdIndex(),\n        };\n    }\n    return {\n        numberOfSlices: viewport.getNumberOfSlices(),\n        imageIndex: viewport.getSliceIndex(),\n    };\n}\nfunction _getImageIndexToJump(numberOfSlices, imageIndex) {\n    const lastSliceIndex = numberOfSlices - 1;\n    return clip(imageIndex, 0, lastSliceIndex);\n}\nexport { jumpToSlice };\n","import * as eventListener from './eventListener';\nimport csUtils from './invertRgbTransferFunction';\nimport createSigmoidRGBTransferFunction from './createSigmoidRGBTransferFunction';\nimport getVoiFromSigmoidRGBTransferFunction from './getVoiFromSigmoidRGBTransferFunction';\nimport createLinearRGBTransferFunction from './createLinearRGBTransferFunction';\nimport scaleRgbTransferFunction from './scaleRgbTransferFunction';\nimport triggerEvent from './triggerEvent';\nimport uuidv4 from './uuidv4';\nimport getMinMax from './getMinMax';\nimport getRuntimeId from './getRuntimeId';\nimport imageIdToURI from './imageIdToURI';\nimport calibratedPixelSpacingMetadataProvider from './calibratedPixelSpacingMetadataProvider';\nimport clamp from './clamp';\nimport { isEqual, isEqualAbs, isEqualNegative } from './isEqual';\nimport isOpposite from './isOpposite';\nimport getClosestImageId from './getClosestImageId';\nimport getSpacingInNormalDirection from './getSpacingInNormalDirection';\nimport getTargetVolumeAndSpacingInNormalDir from './getTargetVolumeAndSpacingInNormalDir';\nimport getVolumeActorCorners from './getVolumeActorCorners';\nimport indexWithinDimensions from './indexWithinDimensions';\nimport getVolumeViewportsContainingSameVolumes from './getVolumeViewportsContainingSameVolumes';\nimport getViewportsWithVolumeId from './getViewportsWithVolumeId';\nimport transformWorldToIndex from './transformWorldToIndex';\nimport transformIndexToWorld from './transformIndexToWorld';\nimport loadImageToCanvas from './loadImageToCanvas';\nimport renderToCanvasCPU from './renderToCanvasCPU';\nimport renderToCanvasGPU from './renderToCanvasGPU';\nimport worldToImageCoords from './worldToImageCoords';\nimport imageToWorldCoords from './imageToWorldCoords';\nimport getVolumeSliceRangeInfo from './getVolumeSliceRangeInfo';\nimport getVolumeViewportScrollInfo from './getVolumeViewportScrollInfo';\nimport getSliceRange from './getSliceRange';\nimport snapFocalPointToSlice from './snapFocalPointToSlice';\nimport getImageSliceDataForVolumeViewport from './getImageSliceDataForVolumeViewport';\nimport { isImageActor, actorIsA } from './actorCheck';\nimport getViewportsWithImageURI from './getViewportsWithImageURI';\nimport getClosestStackImageIndexForPoint from './getClosestStackImageIndexForPoint';\nimport getCurrentVolumeViewportSlice from './getCurrentVolumeViewportSlice';\nimport calculateViewportsSpatialRegistration from './calculateViewportsSpatialRegistration';\nimport spatialRegistrationMetadataProvider from './spatialRegistrationMetadataProvider';\nimport getViewportImageCornersInWorld from './getViewportImageCornersInWorld';\nimport hasNaNValues from './hasNaNValues';\nimport applyPreset from './applyPreset';\nimport PointsManager from './PointsManager';\nimport deepMerge from './deepMerge';\nimport getScalingParameters from './getScalingParameters';\nimport isPTPrescaledWithSUV from './isPTPrescaledWithSUV';\nimport getImageLegacy from './getImageLegacy';\nimport sortImageIdsAndGetSpacing from './sortImageIdsAndGetSpacing';\nimport makeVolumeMetadata from './makeVolumeMetadata';\nimport genericMetadataProvider from './genericMetadataProvider';\nimport { isValidVolume } from './isValidVolume';\nimport { updateVTKImageDataWithCornerstoneImage } from './updateVTKImageDataWithCornerstoneImage';\nimport ProgressiveIterator from './ProgressiveIterator';\nimport decimate from './decimate';\nimport imageRetrieveMetadataProvider from './imageRetrieveMetadataProvider';\nimport isVideoTransferSyntax from './isVideoTransferSyntax';\nimport { getBufferConfiguration } from './getBufferConfiguration';\nimport { generateVolumePropsFromImageIds } from './generateVolumePropsFromImageIds';\nimport { convertStackToVolumeViewport } from './convertStackToVolumeViewport';\nimport { convertVolumeToStackViewport } from './convertVolumeToStackViewport';\nimport VoxelManager from './VoxelManager';\nimport RLEVoxelMap from './RLEVoxelMap';\nimport roundNumber, { roundToPrecision } from './roundNumber';\nimport convertToGrayscale from './convertToGrayscale';\nimport getViewportImageIds from './getViewportImageIds';\nimport { getRandomSampleFromArray } from './getRandomSampleFromArray';\nimport { getVolumeId } from './getVolumeId';\nimport { hasFloatScalingParameters } from './hasFloatScalingParameters';\nimport { pointInShapeCallback } from './pointInShapeCallback';\nimport * as planar from './planar';\nimport * as windowLevel from './windowLevel';\nimport * as colormap from './colormap';\nimport * as transferFunctionUtils from './transferFunctionUtils';\nimport * as color from './color';\nimport { deepEqual } from './deepEqual';\nimport { _getViewportModality } from './getViewportModality';\nimport cache from '../cache/cache';\nimport getDynamicVolumeInfo from './getDynamicVolumeInfo';\nimport autoLoad from './autoLoad';\nimport scaleArray from './scaleArray';\nimport splitImageIdsBy4DTags from './splitImageIdsBy4DTags';\nimport { deepClone } from './deepClone';\nimport { jumpToSlice } from './jumpToSlice';\nimport scroll from './scroll';\nimport clip from './clip';\nconst getViewportModality = (viewport, volumeId) => _getViewportModality(viewport, volumeId, cache.getVolume);\nexport { eventListener, csUtils as invertRgbTransferFunction, createSigmoidRGBTransferFunction, getVoiFromSigmoidRGBTransferFunction, createLinearRGBTransferFunction, scaleRgbTransferFunction, triggerEvent, imageIdToURI, calibratedPixelSpacingMetadataProvider, clamp, uuidv4, planar, getMinMax, getRuntimeId, isEqual, isEqualAbs, isEqualNegative, isOpposite, getViewportModality, windowLevel, convertToGrayscale, getClosestImageId, getSpacingInNormalDirection, getTargetVolumeAndSpacingInNormalDir, getVolumeActorCorners, indexWithinDimensions, getVolumeViewportsContainingSameVolumes, getViewportsWithVolumeId, transformWorldToIndex, transformIndexToWorld, loadImageToCanvas, renderToCanvasCPU, renderToCanvasGPU, worldToImageCoords, imageToWorldCoords, getVolumeSliceRangeInfo, getVolumeViewportScrollInfo, getSliceRange, snapFocalPointToSlice, getImageSliceDataForVolumeViewport, isImageActor, isPTPrescaledWithSUV, actorIsA, getViewportsWithImageURI, getClosestStackImageIndexForPoint, getCurrentVolumeViewportSlice, calculateViewportsSpatialRegistration, spatialRegistrationMetadataProvider, getViewportImageCornersInWorld, hasNaNValues, applyPreset, deepMerge, PointsManager, getScalingParameters, colormap, getImageLegacy, ProgressiveIterator, decimate, imageRetrieveMetadataProvider, transferFunctionUtils, updateVTKImageDataWithCornerstoneImage, sortImageIdsAndGetSpacing, makeVolumeMetadata, isValidVolume, genericMetadataProvider, isVideoTransferSyntax, generateVolumePropsFromImageIds, getBufferConfiguration, VoxelManager, RLEVoxelMap, convertStackToVolumeViewport, convertVolumeToStackViewport, roundNumber, roundToPrecision, getViewportImageIds, getRandomSampleFromArray, getVolumeId, color, hasFloatScalingParameters, getDynamicVolumeInfo, autoLoad, scaleArray, deepClone, splitImageIdsBy4DTags, pointInShapeCallback, deepEqual, jumpToSlice, scroll, clip, };\n","function _getViewportModality(viewport, volumeId, getVolume) {\n    if (!getVolume) {\n        throw new Error('getVolume is required, use the utilities export instead ');\n    }\n    if (viewport.modality) {\n        return viewport.modality;\n    }\n    if (viewport.setVolumes) {\n        volumeId = volumeId ?? viewport.getVolumeId();\n        if (!volumeId || !getVolume) {\n            return;\n        }\n        const volume = getVolume(volumeId);\n        return volume.metadata.Modality;\n    }\n    throw new Error('Invalid viewport type');\n}\nexport { _getViewportModality };\n","export default function invertRgbTransferFunction(rgbTransferFunction) {\n    if (!rgbTransferFunction) {\n        return;\n    }\n    const size = rgbTransferFunction.getSize();\n    for (let index = 0; index < size; index++) {\n        const nodeValue1 = [];\n        rgbTransferFunction.getNodeValue(index, nodeValue1);\n        nodeValue1[1] = 1 - nodeValue1[1];\n        nodeValue1[2] = 1 - nodeValue1[2];\n        nodeValue1[3] = 1 - nodeValue1[3];\n        rgbTransferFunction.setNodeValue(index, nodeValue1);\n    }\n}\n","function areNumbersEqualWithTolerance(num1, num2, tolerance) {\n    return Math.abs(num1 - num2) <= tolerance;\n}\nfunction areArraysEqual(arr1, arr2, tolerance = 1e-5) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        if (!areNumbersEqualWithTolerance(arr1[i], arr2[i], tolerance)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction isNumberType(value) {\n    return typeof value === 'number';\n}\nfunction isNumberArrayLike(value) {\n    return (value &&\n        typeof value === 'object' &&\n        'length' in value &&\n        typeof value.length === 'number' &&\n        value.length > 0 &&\n        typeof value[0] === 'number');\n}\nexport default function isEqual(v1, v2, tolerance = 1e-5) {\n    if (typeof v1 !== typeof v2 || v1 === null || v2 === null) {\n        return false;\n    }\n    if (isNumberType(v1) && isNumberType(v2)) {\n        return areNumbersEqualWithTolerance(v1, v2, tolerance);\n    }\n    if (isNumberArrayLike(v1) && isNumberArrayLike(v2)) {\n        return areArraysEqual(v1, v2, tolerance);\n    }\n    return false;\n}\nconst negative = (v) => typeof v === 'number' ? -v : v?.map ? v.map(negative) : !v;\nconst abs = (v) => typeof v === 'number' ? Math.abs(v) : v?.map ? v.map(abs) : v;\nconst isEqualNegative = (v1, v2, tolerance = undefined) => isEqual(v1, negative(v2), tolerance);\nconst isEqualAbs = (v1, v2, tolerance = undefined) => isEqual(abs(v1), abs(v2), tolerance);\nexport { isEqualNegative, isEqual, isEqualAbs };\n","import { get } from '../metaData';\nexport default function makeVolumeMetadata(imageIds) {\n    const imageId0 = imageIds[0];\n    const { pixelRepresentation, bitsAllocated, bitsStored, highBit, photometricInterpretation, samplesPerPixel, } = get('imagePixelModule', imageId0);\n    const voiLut = [];\n    const voiLutModule = get('voiLutModule', imageId0);\n    let voiLUTFunction;\n    if (voiLutModule) {\n        const { windowWidth, windowCenter } = voiLutModule;\n        voiLUTFunction = voiLutModule?.voiLUTFunction;\n        if (Array.isArray(windowWidth)) {\n            for (let i = 0; i < windowWidth.length; i++) {\n                voiLut.push({\n                    windowWidth: windowWidth[i],\n                    windowCenter: windowCenter[i],\n                });\n            }\n        }\n        else {\n            voiLut.push({\n                windowWidth: windowWidth,\n                windowCenter: windowCenter,\n            });\n        }\n    }\n    else {\n        voiLut.push({\n            windowWidth: undefined,\n            windowCenter: undefined,\n        });\n    }\n    const { modality, seriesInstanceUID } = get('generalSeriesModule', imageId0);\n    const { imageOrientationPatient, pixelSpacing, frameOfReferenceUID, columns, rows, } = get('imagePlaneModule', imageId0);\n    return {\n        BitsAllocated: bitsAllocated,\n        BitsStored: bitsStored,\n        SamplesPerPixel: samplesPerPixel,\n        HighBit: highBit,\n        PhotometricInterpretation: photometricInterpretation,\n        PixelRepresentation: pixelRepresentation,\n        Modality: modality,\n        ImageOrientationPatient: imageOrientationPatient,\n        PixelSpacing: pixelSpacing,\n        FrameOfReferenceUID: frameOfReferenceUID,\n        Columns: columns,\n        Rows: rows,\n        voiLut,\n        VOILUTFunction: voiLUTFunction,\n        SeriesInstanceUID: seriesInstanceUID,\n    };\n}\n","import { mat3 } from 'gl-matrix';\nfunction linePlaneIntersection(p0, p1, plane) {\n    const [x0, y0, z0] = p0;\n    const [x1, y1, z1] = p1;\n    const [A, B, C, D] = plane;\n    const a = x1 - x0;\n    const b = y1 - y0;\n    const c = z1 - z0;\n    const t = (-1 * (A * x0 + B * y0 + C * z0 - D)) / (A * a + B * b + C * c);\n    const X = a * t + x0;\n    const Y = b * t + y0;\n    const Z = c * t + z0;\n    return [X, Y, Z];\n}\nfunction planeEquation(normal, point, normalized = false) {\n    const [A, B, C] = normal;\n    const D = A * point[0] + B * point[1] + C * point[2];\n    if (normalized) {\n        const length = Math.sqrt(A * A + B * B + C * C);\n        return [A / length, B / length, C / length, D / length];\n    }\n    return [A, B, C, D];\n}\nfunction threePlaneIntersection(firstPlane, secondPlane, thirdPlane) {\n    const [A1, B1, C1, D1] = firstPlane;\n    const [A2, B2, C2, D2] = secondPlane;\n    const [A3, B3, C3, D3] = thirdPlane;\n    const m0 = mat3.fromValues(A1, A2, A3, B1, B2, B3, C1, C2, C3);\n    const m1 = mat3.fromValues(D1, D2, D3, B1, B2, B3, C1, C2, C3);\n    const m2 = mat3.fromValues(A1, A2, A3, D1, D2, D3, C1, C2, C3);\n    const m3 = mat3.fromValues(A1, A2, A3, B1, B2, B3, D1, D2, D3);\n    const x = mat3.determinant(m1) / mat3.determinant(m0);\n    const y = mat3.determinant(m2) / mat3.determinant(m0);\n    const z = mat3.determinant(m3) / mat3.determinant(m0);\n    return [x, y, z];\n}\nfunction planeDistanceToPoint(plane, point, signed = false) {\n    const [A, B, C, D] = plane;\n    const [x, y, z] = point;\n    const numerator = A * x + B * y + C * z - D;\n    const distance = Math.abs(numerator) / Math.sqrt(A * A + B * B + C * C);\n    const sign = signed ? Math.sign(numerator) : 1;\n    return sign * distance;\n}\nexport { linePlaneIntersection, planeEquation, threePlaneIntersection, planeDistanceToPoint, };\n","import { vec3 } from 'gl-matrix';\nexport function pointInShapeCallback(imageData, options) {\n    const { pointInShapeFn, callback, boundsIJK, returnPoints = false, } = options;\n    let iMin, iMax, jMin, jMax, kMin, kMax;\n    let scalarData;\n    const { numComps } = imageData;\n    if (imageData.getScalarData) {\n        scalarData = imageData.getScalarData();\n    }\n    else {\n        scalarData = imageData\n            .getPointData()\n            .getScalars()\n            .getData();\n    }\n    if (!scalarData) {\n        console.warn('No scalar data found for imageData', imageData);\n        return;\n    }\n    const dimensions = imageData.getDimensions();\n    if (!boundsIJK) {\n        iMin = 0;\n        iMax = dimensions[0];\n        jMin = 0;\n        jMax = dimensions[1];\n        kMin = 0;\n        kMax = dimensions[2];\n    }\n    else {\n        [[iMin, iMax], [jMin, jMax], [kMin, kMax]] = boundsIJK;\n    }\n    const start = vec3.fromValues(iMin, jMin, kMin);\n    const direction = imageData.getDirection();\n    const rowCosines = direction.slice(0, 3);\n    const columnCosines = direction.slice(3, 6);\n    const scanAxisNormal = direction.slice(6, 9);\n    const spacing = imageData.getSpacing();\n    const [rowSpacing, columnSpacing, scanAxisSpacing] = spacing;\n    const worldPosStart = imageData.indexToWorld(start);\n    const rowStep = vec3.fromValues(rowCosines[0] * rowSpacing, rowCosines[1] * rowSpacing, rowCosines[2] * rowSpacing);\n    const columnStep = vec3.fromValues(columnCosines[0] * columnSpacing, columnCosines[1] * columnSpacing, columnCosines[2] * columnSpacing);\n    const scanAxisStep = vec3.fromValues(scanAxisNormal[0] * scanAxisSpacing, scanAxisNormal[1] * scanAxisSpacing, scanAxisNormal[2] * scanAxisSpacing);\n    const xMultiple = numComps ||\n        scalarData.length / dimensions[2] / dimensions[1] / dimensions[0];\n    const yMultiple = dimensions[0] * xMultiple;\n    const zMultiple = dimensions[1] * yMultiple;\n    const pointsInShape = [];\n    const currentPos = vec3.clone(worldPosStart);\n    for (let k = kMin; k <= kMax; k++) {\n        const startPosJ = vec3.clone(currentPos);\n        for (let j = jMin; j <= jMax; j++) {\n            const startPosI = vec3.clone(currentPos);\n            for (let i = iMin; i <= iMax; i++) {\n                const pointIJK = [i, j, k];\n                if (pointInShapeFn(currentPos, pointIJK)) {\n                    const index = k * zMultiple + j * yMultiple + i * xMultiple;\n                    let value;\n                    if (xMultiple > 2) {\n                        value = [\n                            scalarData[index],\n                            scalarData[index + 1],\n                            scalarData[index + 2],\n                        ];\n                    }\n                    else {\n                        value = scalarData[index];\n                    }\n                    pointsInShape.push({\n                        value,\n                        index,\n                        pointIJK,\n                        pointLPS: currentPos.slice(),\n                    });\n                    if (callback) {\n                        callback({\n                            value,\n                            index,\n                            pointIJK,\n                            pointLPS: currentPos,\n                        });\n                    }\n                }\n                vec3.add(currentPos, currentPos, rowStep);\n            }\n            vec3.copy(currentPos, startPosI);\n            vec3.add(currentPos, currentPos, columnStep);\n        }\n        vec3.copy(currentPos, startPosJ);\n        vec3.add(currentPos, currentPos, scanAxisStep);\n    }\n    return returnPoints ? pointsInShape : undefined;\n}\n","import { vec3 } from 'gl-matrix';\nexport default function snapFocalPointToSlice(focalPoint, position, sliceRange, viewPlaneNormal, spacingInNormalDirection, deltaFrames) {\n    const { min, max, current } = sliceRange;\n    const posDiffFromFocalPoint = vec3.create();\n    vec3.sub(posDiffFromFocalPoint, position, focalPoint);\n    const steps = Math.round((max - min) / spacingInNormalDirection);\n    const fraction = (current - min) / (max - min);\n    const floatingStepNumber = fraction * steps;\n    let frameIndex = Math.round(floatingStepNumber);\n    let newFocalPoint = [\n        focalPoint[0] -\n            viewPlaneNormal[0] * floatingStepNumber * spacingInNormalDirection,\n        focalPoint[1] -\n            viewPlaneNormal[1] * floatingStepNumber * spacingInNormalDirection,\n        focalPoint[2] -\n            viewPlaneNormal[2] * floatingStepNumber * spacingInNormalDirection,\n    ];\n    frameIndex += deltaFrames;\n    if (frameIndex > steps) {\n        frameIndex = steps;\n    }\n    else if (frameIndex < 0) {\n        frameIndex = 0;\n    }\n    const newSlicePosFromMin = frameIndex * spacingInNormalDirection;\n    newFocalPoint = [\n        newFocalPoint[0] + viewPlaneNormal[0] * newSlicePosFromMin,\n        newFocalPoint[1] + viewPlaneNormal[1] * newSlicePosFromMin,\n        newFocalPoint[2] + viewPlaneNormal[2] * newSlicePosFromMin,\n    ];\n    const newPosition = [\n        newFocalPoint[0] + posDiffFromFocalPoint[0],\n        newFocalPoint[1] + posDiffFromFocalPoint[1],\n        newFocalPoint[2] + posDiffFromFocalPoint[2],\n    ];\n    return { newFocalPoint, newPosition };\n}\n","import { vec3 } from 'gl-matrix';\nimport * as metaData from '../metaData';\nimport { getConfiguration } from '../init';\nexport default function sortImageIdsAndGetSpacing(imageIds, scanAxisNormal) {\n    const { imagePositionPatient: referenceImagePositionPatient, imageOrientationPatient, } = metaData.get('imagePlaneModule', imageIds[0]);\n    if (!scanAxisNormal) {\n        const rowCosineVec = vec3.fromValues(imageOrientationPatient[0], imageOrientationPatient[1], imageOrientationPatient[2]);\n        const colCosineVec = vec3.fromValues(imageOrientationPatient[3], imageOrientationPatient[4], imageOrientationPatient[5]);\n        scanAxisNormal = vec3.create();\n        vec3.cross(scanAxisNormal, rowCosineVec, colCosineVec);\n    }\n    const refIppVec = vec3.create();\n    const usingWadoUri = imageIds[0].split(':')[0] === 'wadouri';\n    vec3.set(refIppVec, referenceImagePositionPatient[0], referenceImagePositionPatient[1], referenceImagePositionPatient[2]);\n    let sortedImageIds;\n    let zSpacing;\n    function getDistance(imageId) {\n        const { imagePositionPatient } = metaData.get('imagePlaneModule', imageId);\n        const positionVector = vec3.create();\n        vec3.sub(positionVector, referenceImagePositionPatient, imagePositionPatient);\n        return vec3.dot(positionVector, scanAxisNormal);\n    }\n    if (!usingWadoUri) {\n        const distanceImagePairs = imageIds.map((imageId) => {\n            const distance = getDistance(imageId);\n            return {\n                distance,\n                imageId,\n            };\n        });\n        distanceImagePairs.sort((a, b) => b.distance - a.distance);\n        sortedImageIds = distanceImagePairs.map((a) => a.imageId);\n        const numImages = distanceImagePairs.length;\n        zSpacing =\n            Math.abs(distanceImagePairs[numImages - 1].distance -\n                distanceImagePairs[0].distance) /\n                (numImages - 1);\n    }\n    else {\n        const prefetchedImageIds = [\n            imageIds[0],\n            imageIds[Math.floor(imageIds.length / 2)],\n        ];\n        sortedImageIds = imageIds;\n        const firstImageDistance = getDistance(prefetchedImageIds[0]);\n        const middleImageDistance = getDistance(prefetchedImageIds[1]);\n        if (firstImageDistance - middleImageDistance < 0) {\n            sortedImageIds.reverse();\n        }\n        const metadataForMiddleImage = metaData.get('imagePlaneModule', prefetchedImageIds[1]);\n        if (!metadataForMiddleImage) {\n            throw new Error('Incomplete metadata required for volume construction.');\n        }\n        const positionVector = vec3.create();\n        vec3.sub(positionVector, referenceImagePositionPatient, metadataForMiddleImage.imagePositionPatient);\n        const distanceBetweenFirstAndMiddleImages = vec3.dot(positionVector, scanAxisNormal);\n        zSpacing =\n            Math.abs(distanceBetweenFirstAndMiddleImages) /\n                Math.floor(imageIds.length / 2);\n    }\n    const { imagePositionPatient: origin, sliceThickness, spacingBetweenSlices, } = metaData.get('imagePlaneModule', sortedImageIds[0]);\n    const { strictZSpacingForVolumeViewport } = getConfiguration().rendering;\n    if (zSpacing === 0 && !strictZSpacingForVolumeViewport) {\n        if (sliceThickness && spacingBetweenSlices) {\n            console.log('Could not calculate zSpacing. Using spacingBetweenSlices');\n            zSpacing = spacingBetweenSlices;\n        }\n        else if (sliceThickness) {\n            console.log('Could not calculate zSpacing and no spacingBetweenSlices. Using sliceThickness');\n            zSpacing = sliceThickness;\n        }\n        else {\n            console.log('Could not calculate zSpacing. The VolumeViewport visualization is compromised. Setting zSpacing to 1 to render');\n            zSpacing = 1;\n        }\n    }\n    const result = {\n        zSpacing,\n        origin,\n        sortedImageIds,\n    };\n    return result;\n}\n","function getTransferFunctionNodes(transferFunction) {\n    const size = transferFunction.getSize();\n    const values = [];\n    for (let index = 0; index < size; index++) {\n        const nodeValue1 = [];\n        transferFunction.getNodeValue(index, nodeValue1);\n        values.push(nodeValue1);\n    }\n    return values;\n}\nfunction setTransferFunctionNodes(transferFunction, nodes) {\n    if (!nodes?.length) {\n        return;\n    }\n    transferFunction.removeAllPoints();\n    nodes.forEach((node) => {\n        transferFunction.addRGBPoint(...node);\n    });\n}\nexport { getTransferFunctionNodes, setTransferFunctionNodes };\n","import transformWorldToIndex from './transformWorldToIndex';\nexport function transformCanvasToIJK(viewport, canvasPoint) {\n    const { imageData: vtkImageData } = viewport.getImageData();\n    const worldPoint = viewport.canvasToWorld(canvasPoint);\n    return transformWorldToIndex(vtkImageData, worldPoint);\n}\n","export default function transformIndexToWorld(imageData, voxelPos) {\n    return imageData.indexToWorld(voxelPos);\n}\n","export default function transformWorldToIndex(imageData, worldPos) {\n    const continuousIndex = imageData.worldToIndex(worldPos);\n    const index = continuousIndex.map(Math.round);\n    return index;\n}\n","function updateVTKImageDataWithCornerstoneImage(sourceImageData, image) {\n    const pixelData = image.voxelManager.getScalarData();\n    if (!sourceImageData.getPointData) {\n        return;\n    }\n    const scalarData = sourceImageData\n        .getPointData()\n        .getScalars()\n        .getData();\n    if (image.color && image.rgba) {\n        const newPixelData = new Uint8Array(image.columns * image.rows * 3);\n        for (let i = 0; i < image.columns * image.rows; i++) {\n            newPixelData[i * 3] = pixelData[i * 4];\n            newPixelData[i * 3 + 1] = pixelData[i * 4 + 1];\n            newPixelData[i * 3 + 2] = pixelData[i * 4 + 2];\n        }\n        image.rgba = false;\n        image.getPixelData = () => newPixelData;\n        scalarData.set(newPixelData);\n    }\n    else {\n        scalarData.set(pixelData);\n    }\n    sourceImageData.modified();\n}\nexport { updateVTKImageDataWithCornerstoneImage };\n","function toWindowLevel(low, high) {\n    const windowWidth = Math.abs(high - low) + 1;\n    const windowCenter = (low + high + 1) / 2;\n    return { windowWidth, windowCenter };\n}\nfunction toLowHighRange(windowWidth, windowCenter) {\n    const lower = windowCenter - 0.5 - (windowWidth - 1) / 2;\n    const upper = windowCenter - 0.5 + (windowWidth - 1) / 2;\n    return { lower, upper };\n}\nexport { toWindowLevel, toLowHighRange };\n","const DEFAULT_SETTINGS = Symbol('DefaultSettings');\nconst RUNTIME_SETTINGS = Symbol('RuntimeSettings');\nconst OBJECT_SETTINGS_MAP = Symbol('ObjectSettingsMap');\nconst DICTIONARY = Symbol('Dictionary');\nexport default class Settings {\n    constructor(base) {\n        const dictionary = Object.create((base instanceof Settings && DICTIONARY in base\n            ? base[DICTIONARY]\n            : null));\n        Object.seal(Object.defineProperty(this, DICTIONARY, {\n            value: dictionary,\n        }));\n    }\n    set(key, value) {\n        return set(this[DICTIONARY], key, value, null);\n    }\n    get(key) {\n        return get(this[DICTIONARY], key);\n    }\n    unset(key) {\n        return unset(this[DICTIONARY], key + '');\n    }\n    forEach(callback) {\n        iterate(this[DICTIONARY], callback);\n    }\n    extend() {\n        return new Settings(this);\n    }\n    import(root) {\n        if (isPlainObject(root)) {\n            Object.keys(root).forEach((key) => {\n                set(this[DICTIONARY], key, root[key], null);\n            });\n        }\n    }\n    dump() {\n        const context = {};\n        iterate(this[DICTIONARY], (key, value) => {\n            if (typeof value !== 'undefined') {\n                deepSet(context, key, value);\n            }\n        });\n        return context;\n    }\n    static assert(subject) {\n        return subject instanceof Settings\n            ? subject\n            : Settings.getRuntimeSettings();\n    }\n    static getDefaultSettings(subfield = null) {\n        let defaultSettings = Settings[DEFAULT_SETTINGS];\n        if (!(defaultSettings instanceof Settings)) {\n            defaultSettings = new Settings();\n            Settings[DEFAULT_SETTINGS] = defaultSettings;\n        }\n        if (subfield) {\n            const settingObj = {};\n            defaultSettings.forEach((name) => {\n                if (name.startsWith(subfield)) {\n                    const setting = name.split(`${subfield}.`)[1];\n                    settingObj[setting] = defaultSettings.get(name);\n                }\n            });\n            return settingObj;\n        }\n        return defaultSettings;\n    }\n    static getRuntimeSettings() {\n        let runtimeSettings = Settings[RUNTIME_SETTINGS];\n        if (!(runtimeSettings instanceof Settings)) {\n            runtimeSettings = new Settings(Settings.getDefaultSettings());\n            Settings[RUNTIME_SETTINGS] = runtimeSettings;\n        }\n        return runtimeSettings;\n    }\n    static getObjectSettings(subject, from) {\n        let settings = null;\n        if (subject instanceof Settings) {\n            settings = subject;\n        }\n        else if (typeof subject === 'object' && subject !== null) {\n            let objectSettingsMap = Settings[OBJECT_SETTINGS_MAP];\n            if (!(objectSettingsMap instanceof WeakMap)) {\n                objectSettingsMap = new WeakMap();\n                Settings[OBJECT_SETTINGS_MAP] = objectSettingsMap;\n            }\n            settings = objectSettingsMap.get(subject);\n            if (!(settings instanceof Settings)) {\n                settings = new Settings(Settings.assert(Settings.getObjectSettings(from)));\n                objectSettingsMap.set(subject, settings);\n            }\n        }\n        return settings;\n    }\n    static extendRuntimeSettings() {\n        return Settings.getRuntimeSettings().extend();\n    }\n}\nfunction unset(dictionary, name) {\n    if (name.endsWith('.')) {\n        let deleteCount = 0;\n        const namespace = name;\n        const base = namespace.slice(0, -1);\n        const deleteAll = base.length === 0;\n        for (const key in dictionary) {\n            if (Object.prototype.hasOwnProperty.call(dictionary, key) &&\n                (deleteAll || key.startsWith(namespace) || key === base)) {\n                delete dictionary[key];\n                ++deleteCount;\n            }\n        }\n        return deleteCount > 0;\n    }\n    return delete dictionary[name];\n}\nfunction iterate(dictionary, callback) {\n    for (const key in dictionary) {\n        callback(key, dictionary[key]);\n    }\n}\nfunction setAll(dictionary, prefix, record, references) {\n    let failCount;\n    if (references.has(record)) {\n        return set(dictionary, prefix, null, references);\n    }\n    references.add(record);\n    failCount = 0;\n    for (const field in record) {\n        if (Object.prototype.hasOwnProperty.call(record, field)) {\n            const key = field.length === 0 ? prefix : `${prefix}.${field}`;\n            if (!set(dictionary, key, record[field], references)) {\n                ++failCount;\n            }\n        }\n    }\n    references.delete(record);\n    return failCount === 0;\n}\nfunction set(dictionary, key, value, references) {\n    if (isValidKey(key)) {\n        if (isPlainObject(value)) {\n            return setAll(dictionary, key, value, references instanceof WeakSet ? references : new WeakSet());\n        }\n        dictionary[key] = value;\n        return true;\n    }\n    return false;\n}\nfunction get(dictionary, key) {\n    return dictionary[key];\n}\nfunction isValidKey(key) {\n    let last, current, previous;\n    if (typeof key !== 'string' || (last = key.length - 1) < 0) {\n        return false;\n    }\n    previous = -1;\n    while ((current = key.indexOf('.', previous + 1)) >= 0) {\n        if (current - previous < 2 || current === last) {\n            return false;\n        }\n        previous = current;\n    }\n    return true;\n}\nfunction isPlainObject(subject) {\n    if (typeof subject === 'object' && subject !== null) {\n        const prototype = Object.getPrototypeOf(subject);\n        if (prototype === Object.prototype || prototype === null) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction deepSet(context, key, value) {\n    const separator = key.indexOf('.');\n    if (separator >= 0) {\n        const subKey = key.slice(0, separator);\n        let subContext = context[subKey];\n        if (typeof subContext !== 'object' || subContext === null) {\n            const subContextValue = subContext;\n            subContext = {};\n            if (typeof subContextValue !== 'undefined') {\n                subContext[''] = subContextValue;\n            }\n            context[subKey] = subContext;\n        }\n        deepSet(subContext, key.slice(separator + 1, key.length), value);\n    }\n    else {\n        context[key] = value;\n    }\n}\nSettings.getDefaultSettings().set('useCursors', true);\n","\nvar ICRPolySegApp = (() => {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  \n  return (\nfunction(ICRPolySegApp) {\n  ICRPolySegApp = ICRPolySegApp || {};\n\nvar Module=typeof ICRPolySegApp!=\"undefined\"?ICRPolySegApp:{};var readyPromiseResolve,readyPromiseReject;Module[\"ready\"]=new Promise(function(resolve,reject){readyPromiseResolve=resolve;readyPromiseReject=reject});var moduleOverrides=Object.assign({},Module);var arguments_=[];var thisProgram=\"./this.program\";var quit_=(status,toThrow)=>{throw toThrow};var ENVIRONMENT_IS_WEB=true;var ENVIRONMENT_IS_WORKER=false;var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!=\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}{read_=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=(url,onload,onerror)=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=()=>{if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}setWindowTitle=title=>document.title=title}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.warn.bind(console);Object.assign(Module,moduleOverrides);moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var POINTER_SIZE=4;var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime=Module[\"noExitRuntime\"]||true;if(typeof WebAssembly!=\"object\"){abort(\"no native wasm support detected\")}var wasmMemory;var ABORT=false;var EXITSTATUS;var UTF8Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder(\"utf8\"):undefined;function UTF8ArrayToString(heapOrArray,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heapOrArray[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heapOrArray.buffer&&UTF8Decoder){return UTF8Decoder.decode(heapOrArray.subarray(idx,endPtr))}var str=\"\";while(idx<endPtr){var u0=heapOrArray[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heapOrArray[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heapOrArray[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heapOrArray[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}return str}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\"}function stringToUTF8Array(str,heap,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var c=str.charCodeAt(i);if(c<=127){len++}else if(c<=2047){len+=2}else if(c>=55296&&c<=57343){len+=4;++i}else{len+=3}}return len}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferAndViews(buf){buffer=buf;Module[\"HEAP8\"]=HEAP8=new Int8Array(buf);Module[\"HEAP16\"]=HEAP16=new Int16Array(buf);Module[\"HEAP32\"]=HEAP32=new Int32Array(buf);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buf);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buf);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buf);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buf);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buf)}var INITIAL_MEMORY=Module[\"INITIAL_MEMORY\"]||16777216;var wasmTable;var __ATPRERUN__=[];var __ATINIT__=[];var __ATMAIN__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function keepRuntimeAlive(){return noExitRuntime}function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function preMain(){callRuntimeCallbacks(__ATMAIN__)}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}function abort(what){if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}what=\"Aborted(\"+what+\")\";err(what);ABORT=true;EXITSTATUS=1;what+=\". Build with -sASSERTIONS for more info.\";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return filename.startsWith(dataURIPrefix)}var wasmBinaryFile;wasmBinaryFile=\"ICRPolySeg.wasm\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinary(file){try{if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}throw\"both async and sync fetching of the wasm failed\"}catch(err){abort(err)}}function getBinaryPromise(){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(typeof fetch==\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+wasmBinaryFile+\"'\"}return response[\"arrayBuffer\"]()}).catch(function(){return getBinary(wasmBinaryFile)})}}return Promise.resolve().then(function(){return getBinary(wasmBinaryFile)})}function createWasm(){var info={\"a\":asmLibraryArg};function receiveInstance(instance,module){var exports=instance.exports;Module[\"asm\"]=exports;wasmMemory=Module[\"asm\"][\"Q\"];updateGlobalBufferAndViews(wasmMemory.buffer);wasmTable=Module[\"asm\"][\"T\"];addOnInit(Module[\"asm\"][\"R\"]);removeRunDependency(\"wasm-instantiate\")}addRunDependency(\"wasm-instantiate\");function receiveInstantiationResult(result){receiveInstance(result[\"instance\"])}function instantiateArrayBuffer(receiver){return getBinaryPromise().then(function(binary){return WebAssembly.instantiate(binary,info)}).then(function(instance){return instance}).then(receiver,function(reason){err(\"failed to asynchronously prepare wasm: \"+reason);abort(reason)})}function instantiateAsync(){if(!wasmBinary&&typeof WebAssembly.instantiateStreaming==\"function\"&&!isDataURI(wasmBinaryFile)&&typeof fetch==\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){var result=WebAssembly.instantiateStreaming(response,info);return result.then(receiveInstantiationResult,function(reason){err(\"wasm streaming compile failed: \"+reason);err(\"falling back to ArrayBuffer instantiation\");return instantiateArrayBuffer(receiveInstantiationResult)})})}else{return instantiateArrayBuffer(receiveInstantiationResult)}}if(Module[\"instantiateWasm\"]){try{var exports=Module[\"instantiateWasm\"](info,receiveInstance);return exports}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);readyPromiseReject(e)}}instantiateAsync().catch(readyPromiseReject);return{}}var ASM_CONSTS={638383:$0=>{if(Module.updateProgress){Module.updateProgress($0)}}};function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status}function callRuntimeCallbacks(callbacks){while(callbacks.length>0){callbacks.shift()(Module)}}function ExceptionInfo(excPtr){this.excPtr=excPtr;this.ptr=excPtr-24;this.set_type=function(type){HEAPU32[this.ptr+4>>2]=type};this.get_type=function(){return HEAPU32[this.ptr+4>>2]};this.set_destructor=function(destructor){HEAPU32[this.ptr+8>>2]=destructor};this.get_destructor=function(){return HEAPU32[this.ptr+8>>2]};this.set_refcount=function(refcount){HEAP32[this.ptr>>2]=refcount};this.set_caught=function(caught){caught=caught?1:0;HEAP8[this.ptr+12>>0]=caught};this.get_caught=function(){return HEAP8[this.ptr+12>>0]!=0};this.set_rethrown=function(rethrown){rethrown=rethrown?1:0;HEAP8[this.ptr+13>>0]=rethrown};this.get_rethrown=function(){return HEAP8[this.ptr+13>>0]!=0};this.init=function(type,destructor){this.set_adjusted_ptr(0);this.set_type(type);this.set_destructor(destructor);this.set_refcount(0);this.set_caught(false);this.set_rethrown(false)};this.add_ref=function(){var value=HEAP32[this.ptr>>2];HEAP32[this.ptr>>2]=value+1};this.release_ref=function(){var prev=HEAP32[this.ptr>>2];HEAP32[this.ptr>>2]=prev-1;return prev===1};this.set_adjusted_ptr=function(adjustedPtr){HEAPU32[this.ptr+16>>2]=adjustedPtr};this.get_adjusted_ptr=function(){return HEAPU32[this.ptr+16>>2]};this.get_exception_ptr=function(){var isPointer=___cxa_is_pointer_type(this.get_type());if(isPointer){return HEAPU32[this.excPtr>>2]}var adjusted=this.get_adjusted_ptr();if(adjusted!==0)return adjusted;return this.excPtr}}var exceptionLast=0;var uncaughtExceptionCount=0;function ___cxa_throw(ptr,type,destructor){var info=new ExceptionInfo(ptr);info.init(type,destructor);exceptionLast=ptr;uncaughtExceptionCount++;throw ptr}var SYSCALLS={varargs:undefined,get:function(){SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>2];return ret},getStr:function(ptr){var ret=UTF8ToString(ptr);return ret}};function ___syscall_getcwd(buf,size){}function ___syscall_getdents64(fd,dirp,count){}function ___syscall_openat(dirfd,path,flags,varargs){SYSCALLS.varargs=varargs}function ___syscall_readlinkat(dirfd,path,buf,bufsize){}function ___syscall_stat64(path,buf){}var structRegistrations={};function runDestructors(destructors){while(destructors.length){var ptr=destructors.pop();var del=destructors.pop();del(ptr)}}function simpleReadValueFromPointer(pointer){return this[\"fromWireType\"](HEAP32[pointer>>2])}var awaitingDependencies={};var registeredTypes={};var typeDependencies={};var char_0=48;var char_9=57;function makeLegalFunctionName(name){if(undefined===name){return\"_unknown\"}name=name.replace(/[^a-zA-Z0-9_]/g,\"$\");var f=name.charCodeAt(0);if(f>=char_0&&f<=char_9){return\"_\"+name}return name}function createNamedFunction(name,body){name=makeLegalFunctionName(name);return new Function(\"body\",\"return function \"+name+\"() {\\n\"+'    \"use strict\";'+\"    return body.apply(this, arguments);\\n\"+\"};\\n\")(body)}function extendError(baseErrorType,errorName){var errorClass=createNamedFunction(errorName,function(message){this.name=errorName;this.message=message;var stack=new Error(message).stack;if(stack!==undefined){this.stack=this.toString()+\"\\n\"+stack.replace(/^Error(:[^\\n]*)?\\n/,\"\")}});errorClass.prototype=Object.create(baseErrorType.prototype);errorClass.prototype.constructor=errorClass;errorClass.prototype.toString=function(){if(this.message===undefined){return this.name}else{return this.name+\": \"+this.message}};return errorClass}var InternalError=undefined;function throwInternalError(message){throw new InternalError(message)}function whenDependentTypesAreResolved(myTypes,dependentTypes,getTypeConverters){myTypes.forEach(function(type){typeDependencies[type]=dependentTypes});function onComplete(typeConverters){var myTypeConverters=getTypeConverters(typeConverters);if(myTypeConverters.length!==myTypes.length){throwInternalError(\"Mismatched type converter count\")}for(var i=0;i<myTypes.length;++i){registerType(myTypes[i],myTypeConverters[i])}}var typeConverters=new Array(dependentTypes.length);var unregisteredTypes=[];var registered=0;dependentTypes.forEach((dt,i)=>{if(registeredTypes.hasOwnProperty(dt)){typeConverters[i]=registeredTypes[dt]}else{unregisteredTypes.push(dt);if(!awaitingDependencies.hasOwnProperty(dt)){awaitingDependencies[dt]=[]}awaitingDependencies[dt].push(()=>{typeConverters[i]=registeredTypes[dt];++registered;if(registered===unregisteredTypes.length){onComplete(typeConverters)}})}});if(0===unregisteredTypes.length){onComplete(typeConverters)}}function __embind_finalize_value_object(structType){var reg=structRegistrations[structType];delete structRegistrations[structType];var rawConstructor=reg.rawConstructor;var rawDestructor=reg.rawDestructor;var fieldRecords=reg.fields;var fieldTypes=fieldRecords.map(field=>field.getterReturnType).concat(fieldRecords.map(field=>field.setterArgumentType));whenDependentTypesAreResolved([structType],fieldTypes,fieldTypes=>{var fields={};fieldRecords.forEach((field,i)=>{var fieldName=field.fieldName;var getterReturnType=fieldTypes[i];var getter=field.getter;var getterContext=field.getterContext;var setterArgumentType=fieldTypes[i+fieldRecords.length];var setter=field.setter;var setterContext=field.setterContext;fields[fieldName]={read:ptr=>{return getterReturnType[\"fromWireType\"](getter(getterContext,ptr))},write:(ptr,o)=>{var destructors=[];setter(setterContext,ptr,setterArgumentType[\"toWireType\"](destructors,o));runDestructors(destructors)}}});return[{name:reg.name,\"fromWireType\":function(ptr){var rv={};for(var i in fields){rv[i]=fields[i].read(ptr)}rawDestructor(ptr);return rv},\"toWireType\":function(destructors,o){for(var fieldName in fields){if(!(fieldName in o)){throw new TypeError('Missing field:  \"'+fieldName+'\"')}}var ptr=rawConstructor();for(fieldName in fields){fields[fieldName].write(ptr,o[fieldName])}if(destructors!==null){destructors.push(rawDestructor,ptr)}return ptr},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:rawDestructor}]})}function __embind_register_bigint(primitiveType,name,size,minRange,maxRange){}function getShiftFromSize(size){switch(size){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(\"Unknown type size: \"+size)}}function embind_init_charCodes(){var codes=new Array(256);for(var i=0;i<256;++i){codes[i]=String.fromCharCode(i)}embind_charCodes=codes}var embind_charCodes=undefined;function readLatin1String(ptr){var ret=\"\";var c=ptr;while(HEAPU8[c]){ret+=embind_charCodes[HEAPU8[c++]]}return ret}var BindingError=undefined;function throwBindingError(message){throw new BindingError(message)}function registerType(rawType,registeredInstance,options={}){if(!(\"argPackAdvance\"in registeredInstance)){throw new TypeError(\"registerType registeredInstance requires argPackAdvance\")}var name=registeredInstance.name;if(!rawType){throwBindingError('type \"'+name+'\" must have a positive integer typeid pointer')}if(registeredTypes.hasOwnProperty(rawType)){if(options.ignoreDuplicateRegistrations){return}else{throwBindingError(\"Cannot register type '\"+name+\"' twice\")}}registeredTypes[rawType]=registeredInstance;delete typeDependencies[rawType];if(awaitingDependencies.hasOwnProperty(rawType)){var callbacks=awaitingDependencies[rawType];delete awaitingDependencies[rawType];callbacks.forEach(cb=>cb())}}function __embind_register_bool(rawType,name,size,trueValue,falseValue){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(wt){return!!wt},\"toWireType\":function(destructors,o){return o?trueValue:falseValue},\"argPackAdvance\":8,\"readValueFromPointer\":function(pointer){var heap;if(size===1){heap=HEAP8}else if(size===2){heap=HEAP16}else if(size===4){heap=HEAP32}else{throw new TypeError(\"Unknown boolean type size: \"+name)}return this[\"fromWireType\"](heap[pointer>>shift])},destructorFunction:null})}var emval_free_list=[];var emval_handle_array=[{},{value:undefined},{value:null},{value:true},{value:false}];function __emval_decref(handle){if(handle>4&&0===--emval_handle_array[handle].refcount){emval_handle_array[handle]=undefined;emval_free_list.push(handle)}}function count_emval_handles(){var count=0;for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){++count}}return count}function get_first_emval(){for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){return emval_handle_array[i]}}return null}function init_emval(){Module[\"count_emval_handles\"]=count_emval_handles;Module[\"get_first_emval\"]=get_first_emval}var Emval={toValue:handle=>{if(!handle){throwBindingError(\"Cannot use deleted val. handle = \"+handle)}return emval_handle_array[handle].value},toHandle:value=>{switch(value){case undefined:return 1;case null:return 2;case true:return 3;case false:return 4;default:{var handle=emval_free_list.length?emval_free_list.pop():emval_handle_array.length;emval_handle_array[handle]={refcount:1,value:value};return handle}}}};function __embind_register_emval(rawType,name){name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(handle){var rv=Emval.toValue(handle);__emval_decref(handle);return rv},\"toWireType\":function(destructors,value){return Emval.toHandle(value)},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:null})}function floatReadValueFromPointer(name,shift){switch(shift){case 2:return function(pointer){return this[\"fromWireType\"](HEAPF32[pointer>>2])};case 3:return function(pointer){return this[\"fromWireType\"](HEAPF64[pointer>>3])};default:throw new TypeError(\"Unknown float type: \"+name)}}function __embind_register_float(rawType,name,size){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(value){return value},\"toWireType\":function(destructors,value){return value},\"argPackAdvance\":8,\"readValueFromPointer\":floatReadValueFromPointer(name,shift),destructorFunction:null})}function new_(constructor,argumentList){if(!(constructor instanceof Function)){throw new TypeError(\"new_ called with constructor type \"+typeof constructor+\" which is not a function\")}var dummy=createNamedFunction(constructor.name||\"unknownFunctionName\",function(){});dummy.prototype=constructor.prototype;var obj=new dummy;var r=constructor.apply(obj,argumentList);return r instanceof Object?r:obj}function craftInvokerFunction(humanName,argTypes,classType,cppInvokerFunc,cppTargetFunc){var argCount=argTypes.length;if(argCount<2){throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\")}var isClassMethodFunc=argTypes[1]!==null&&classType!==null;var needsDestructorStack=false;for(var i=1;i<argTypes.length;++i){if(argTypes[i]!==null&&argTypes[i].destructorFunction===undefined){needsDestructorStack=true;break}}var returns=argTypes[0].name!==\"void\";var argsList=\"\";var argsListWired=\"\";for(var i=0;i<argCount-2;++i){argsList+=(i!==0?\", \":\"\")+\"arg\"+i;argsListWired+=(i!==0?\", \":\"\")+\"arg\"+i+\"Wired\"}var invokerFnBody=\"return function \"+makeLegalFunctionName(humanName)+\"(\"+argsList+\") {\\n\"+\"if (arguments.length !== \"+(argCount-2)+\") {\\n\"+\"throwBindingError('function \"+humanName+\" called with ' + arguments.length + ' arguments, expected \"+(argCount-2)+\" args!');\\n\"+\"}\\n\";if(needsDestructorStack){invokerFnBody+=\"var destructors = [];\\n\"}var dtorStack=needsDestructorStack?\"destructors\":\"null\";var args1=[\"throwBindingError\",\"invoker\",\"fn\",\"runDestructors\",\"retType\",\"classParam\"];var args2=[throwBindingError,cppInvokerFunc,cppTargetFunc,runDestructors,argTypes[0],argTypes[1]];if(isClassMethodFunc){invokerFnBody+=\"var thisWired = classParam.toWireType(\"+dtorStack+\", this);\\n\"}for(var i=0;i<argCount-2;++i){invokerFnBody+=\"var arg\"+i+\"Wired = argType\"+i+\".toWireType(\"+dtorStack+\", arg\"+i+\"); // \"+argTypes[i+2].name+\"\\n\";args1.push(\"argType\"+i);args2.push(argTypes[i+2])}if(isClassMethodFunc){argsListWired=\"thisWired\"+(argsListWired.length>0?\", \":\"\")+argsListWired}invokerFnBody+=(returns?\"var rv = \":\"\")+\"invoker(fn\"+(argsListWired.length>0?\", \":\"\")+argsListWired+\");\\n\";if(needsDestructorStack){invokerFnBody+=\"runDestructors(destructors);\\n\"}else{for(var i=isClassMethodFunc?1:2;i<argTypes.length;++i){var paramName=i===1?\"thisWired\":\"arg\"+(i-2)+\"Wired\";if(argTypes[i].destructorFunction!==null){invokerFnBody+=paramName+\"_dtor(\"+paramName+\"); // \"+argTypes[i].name+\"\\n\";args1.push(paramName+\"_dtor\");args2.push(argTypes[i].destructorFunction)}}}if(returns){invokerFnBody+=\"var ret = retType.fromWireType(rv);\\n\"+\"return ret;\\n\"}else{}invokerFnBody+=\"}\\n\";args1.push(invokerFnBody);var invokerFunction=new_(Function,args1).apply(null,args2);return invokerFunction}function ensureOverloadTable(proto,methodName,humanName){if(undefined===proto[methodName].overloadTable){var prevFunc=proto[methodName];proto[methodName]=function(){if(!proto[methodName].overloadTable.hasOwnProperty(arguments.length)){throwBindingError(\"Function '\"+humanName+\"' called with an invalid number of arguments (\"+arguments.length+\") - expects one of (\"+proto[methodName].overloadTable+\")!\")}return proto[methodName].overloadTable[arguments.length].apply(this,arguments)};proto[methodName].overloadTable=[];proto[methodName].overloadTable[prevFunc.argCount]=prevFunc}}function exposePublicSymbol(name,value,numArguments){if(Module.hasOwnProperty(name)){if(undefined===numArguments||undefined!==Module[name].overloadTable&&undefined!==Module[name].overloadTable[numArguments]){throwBindingError(\"Cannot register public name '\"+name+\"' twice\")}ensureOverloadTable(Module,name,name);if(Module.hasOwnProperty(numArguments)){throwBindingError(\"Cannot register multiple overloads of a function with the same number of arguments (\"+numArguments+\")!\")}Module[name].overloadTable[numArguments]=value}else{Module[name]=value;if(undefined!==numArguments){Module[name].numArguments=numArguments}}}function heap32VectorToArray(count,firstElement){var array=[];for(var i=0;i<count;i++){array.push(HEAPU32[firstElement+i*4>>2])}return array}function replacePublicSymbol(name,value,numArguments){if(!Module.hasOwnProperty(name)){throwInternalError(\"Replacing nonexistant public symbol\")}if(undefined!==Module[name].overloadTable&&undefined!==numArguments){Module[name].overloadTable[numArguments]=value}else{Module[name]=value;Module[name].argCount=numArguments}}function dynCallLegacy(sig,ptr,args){var f=Module[\"dynCall_\"+sig];return args&&args.length?f.apply(null,[ptr].concat(args)):f.call(null,ptr)}var wasmTableMirror=[];function getWasmTableEntry(funcPtr){var func=wasmTableMirror[funcPtr];if(!func){if(funcPtr>=wasmTableMirror.length)wasmTableMirror.length=funcPtr+1;wasmTableMirror[funcPtr]=func=wasmTable.get(funcPtr)}return func}function dynCall(sig,ptr,args){if(sig.includes(\"j\")){return dynCallLegacy(sig,ptr,args)}var rtn=getWasmTableEntry(ptr).apply(null,args);return rtn}function getDynCaller(sig,ptr){var argCache=[];return function(){argCache.length=0;Object.assign(argCache,arguments);return dynCall(sig,ptr,argCache)}}function embind__requireFunction(signature,rawFunction){signature=readLatin1String(signature);function makeDynCaller(){if(signature.includes(\"j\")){return getDynCaller(signature,rawFunction)}return getWasmTableEntry(rawFunction)}var fp=makeDynCaller();if(typeof fp!=\"function\"){throwBindingError(\"unknown function pointer with signature \"+signature+\": \"+rawFunction)}return fp}var UnboundTypeError=undefined;function getTypeName(type){var ptr=___getTypeName(type);var rv=readLatin1String(ptr);_free(ptr);return rv}function throwUnboundTypeError(message,types){var unboundTypes=[];var seen={};function visit(type){if(seen[type]){return}if(registeredTypes[type]){return}if(typeDependencies[type]){typeDependencies[type].forEach(visit);return}unboundTypes.push(type);seen[type]=true}types.forEach(visit);throw new UnboundTypeError(message+\": \"+unboundTypes.map(getTypeName).join([\", \"]))}function __embind_register_function(name,argCount,rawArgTypesAddr,signature,rawInvoker,fn){var argTypes=heap32VectorToArray(argCount,rawArgTypesAddr);name=readLatin1String(name);rawInvoker=embind__requireFunction(signature,rawInvoker);exposePublicSymbol(name,function(){throwUnboundTypeError(\"Cannot call \"+name+\" due to unbound types\",argTypes)},argCount-1);whenDependentTypesAreResolved([],argTypes,function(argTypes){var invokerArgsArray=[argTypes[0],null].concat(argTypes.slice(1));replacePublicSymbol(name,craftInvokerFunction(name,invokerArgsArray,null,rawInvoker,fn),argCount-1);return[]})}function integerReadValueFromPointer(name,shift,signed){switch(shift){case 0:return signed?function readS8FromPointer(pointer){return HEAP8[pointer]}:function readU8FromPointer(pointer){return HEAPU8[pointer]};case 1:return signed?function readS16FromPointer(pointer){return HEAP16[pointer>>1]}:function readU16FromPointer(pointer){return HEAPU16[pointer>>1]};case 2:return signed?function readS32FromPointer(pointer){return HEAP32[pointer>>2]}:function readU32FromPointer(pointer){return HEAPU32[pointer>>2]};default:throw new TypeError(\"Unknown integer type: \"+name)}}function __embind_register_integer(primitiveType,name,size,minRange,maxRange){name=readLatin1String(name);if(maxRange===-1){maxRange=4294967295}var shift=getShiftFromSize(size);var fromWireType=value=>value;if(minRange===0){var bitshift=32-8*size;fromWireType=value=>value<<bitshift>>>bitshift}var isUnsignedType=name.includes(\"unsigned\");var checkAssertions=(value,toTypeName)=>{};var toWireType;if(isUnsignedType){toWireType=function(destructors,value){checkAssertions(value,this.name);return value>>>0}}else{toWireType=function(destructors,value){checkAssertions(value,this.name);return value}}registerType(primitiveType,{name:name,\"fromWireType\":fromWireType,\"toWireType\":toWireType,\"argPackAdvance\":8,\"readValueFromPointer\":integerReadValueFromPointer(name,shift,minRange!==0),destructorFunction:null})}function __embind_register_memory_view(rawType,dataTypeIndex,name){var typeMapping=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];var TA=typeMapping[dataTypeIndex];function decodeMemoryView(handle){handle=handle>>2;var heap=HEAPU32;var size=heap[handle];var data=heap[handle+1];return new TA(buffer,data,size)}name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":decodeMemoryView,\"argPackAdvance\":8,\"readValueFromPointer\":decodeMemoryView},{ignoreDuplicateRegistrations:true})}function __embind_register_std_string(rawType,name){name=readLatin1String(name);var stdStringIsUTF8=name===\"std::string\";registerType(rawType,{name:name,\"fromWireType\":function(value){var length=HEAPU32[value>>2];var payload=value+4;var str;if(stdStringIsUTF8){var decodeStartPtr=payload;for(var i=0;i<=length;++i){var currentBytePtr=payload+i;if(i==length||HEAPU8[currentBytePtr]==0){var maxRead=currentBytePtr-decodeStartPtr;var stringSegment=UTF8ToString(decodeStartPtr,maxRead);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+1}}}else{var a=new Array(length);for(var i=0;i<length;++i){a[i]=String.fromCharCode(HEAPU8[payload+i])}str=a.join(\"\")}_free(value);return str},\"toWireType\":function(destructors,value){if(value instanceof ArrayBuffer){value=new Uint8Array(value)}var length;var valueIsOfTypeString=typeof value==\"string\";if(!(valueIsOfTypeString||value instanceof Uint8Array||value instanceof Uint8ClampedArray||value instanceof Int8Array)){throwBindingError(\"Cannot pass non-string to std::string\")}if(stdStringIsUTF8&&valueIsOfTypeString){length=lengthBytesUTF8(value)}else{length=value.length}var base=_malloc(4+length+1);var ptr=base+4;HEAPU32[base>>2]=length;if(stdStringIsUTF8&&valueIsOfTypeString){stringToUTF8(value,ptr,length+1)}else{if(valueIsOfTypeString){for(var i=0;i<length;++i){var charCode=value.charCodeAt(i);if(charCode>255){_free(ptr);throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\")}HEAPU8[ptr+i]=charCode}}else{for(var i=0;i<length;++i){HEAPU8[ptr+i]=value[i]}}}if(destructors!==null){destructors.push(_free,base)}return base},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:function(ptr){_free(ptr)}})}var UTF16Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder(\"utf-16le\"):undefined;function UTF16ToString(ptr,maxBytesToRead){var endPtr=ptr;var idx=endPtr>>1;var maxIdx=idx+maxBytesToRead/2;while(!(idx>=maxIdx)&&HEAPU16[idx])++idx;endPtr=idx<<1;if(endPtr-ptr>32&&UTF16Decoder)return UTF16Decoder.decode(HEAPU8.subarray(ptr,endPtr));var str=\"\";for(var i=0;!(i>=maxBytesToRead/2);++i){var codeUnit=HEAP16[ptr+i*2>>1];if(codeUnit==0)break;str+=String.fromCharCode(codeUnit)}return str}function stringToUTF16(str,outPtr,maxBytesToWrite){if(maxBytesToWrite===undefined){maxBytesToWrite=2147483647}if(maxBytesToWrite<2)return 0;maxBytesToWrite-=2;var startPtr=outPtr;var numCharsToWrite=maxBytesToWrite<str.length*2?maxBytesToWrite/2:str.length;for(var i=0;i<numCharsToWrite;++i){var codeUnit=str.charCodeAt(i);HEAP16[outPtr>>1]=codeUnit;outPtr+=2}HEAP16[outPtr>>1]=0;return outPtr-startPtr}function lengthBytesUTF16(str){return str.length*2}function UTF32ToString(ptr,maxBytesToRead){var i=0;var str=\"\";while(!(i>=maxBytesToRead/4)){var utf32=HEAP32[ptr+i*4>>2];if(utf32==0)break;++i;if(utf32>=65536){var ch=utf32-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}else{str+=String.fromCharCode(utf32)}}return str}function stringToUTF32(str,outPtr,maxBytesToWrite){if(maxBytesToWrite===undefined){maxBytesToWrite=2147483647}if(maxBytesToWrite<4)return 0;var startPtr=outPtr;var endPtr=startPtr+maxBytesToWrite-4;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343){var trailSurrogate=str.charCodeAt(++i);codeUnit=65536+((codeUnit&1023)<<10)|trailSurrogate&1023}HEAP32[outPtr>>2]=codeUnit;outPtr+=4;if(outPtr+4>endPtr)break}HEAP32[outPtr>>2]=0;return outPtr-startPtr}function lengthBytesUTF32(str){var len=0;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343)++i;len+=4}return len}function __embind_register_std_wstring(rawType,charSize,name){name=readLatin1String(name);var decodeString,encodeString,getHeap,lengthBytesUTF,shift;if(charSize===2){decodeString=UTF16ToString;encodeString=stringToUTF16;lengthBytesUTF=lengthBytesUTF16;getHeap=()=>HEAPU16;shift=1}else if(charSize===4){decodeString=UTF32ToString;encodeString=stringToUTF32;lengthBytesUTF=lengthBytesUTF32;getHeap=()=>HEAPU32;shift=2}registerType(rawType,{name:name,\"fromWireType\":function(value){var length=HEAPU32[value>>2];var HEAP=getHeap();var str;var decodeStartPtr=value+4;for(var i=0;i<=length;++i){var currentBytePtr=value+4+i*charSize;if(i==length||HEAP[currentBytePtr>>shift]==0){var maxReadBytes=currentBytePtr-decodeStartPtr;var stringSegment=decodeString(decodeStartPtr,maxReadBytes);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+charSize}}_free(value);return str},\"toWireType\":function(destructors,value){if(!(typeof value==\"string\")){throwBindingError(\"Cannot pass non-string to C++ string type \"+name)}var length=lengthBytesUTF(value);var ptr=_malloc(4+length+charSize);HEAPU32[ptr>>2]=length>>shift;encodeString(value,ptr+4,length+charSize);if(destructors!==null){destructors.push(_free,ptr)}return ptr},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:function(ptr){_free(ptr)}})}function __embind_register_value_object(rawType,name,constructorSignature,rawConstructor,destructorSignature,rawDestructor){structRegistrations[rawType]={name:readLatin1String(name),rawConstructor:embind__requireFunction(constructorSignature,rawConstructor),rawDestructor:embind__requireFunction(destructorSignature,rawDestructor),fields:[]}}function __embind_register_value_object_field(structType,fieldName,getterReturnType,getterSignature,getter,getterContext,setterArgumentType,setterSignature,setter,setterContext){structRegistrations[structType].fields.push({fieldName:readLatin1String(fieldName),getterReturnType:getterReturnType,getter:embind__requireFunction(getterSignature,getter),getterContext:getterContext,setterArgumentType:setterArgumentType,setter:embind__requireFunction(setterSignature,setter),setterContext:setterContext})}function __embind_register_void(rawType,name){name=readLatin1String(name);registerType(rawType,{isVoid:true,name:name,\"argPackAdvance\":0,\"fromWireType\":function(){return undefined},\"toWireType\":function(destructors,o){return undefined}})}function requireRegisteredType(rawType,humanName){var impl=registeredTypes[rawType];if(undefined===impl){throwBindingError(humanName+\" has unknown type \"+getTypeName(rawType))}return impl}function __emval_as(handle,returnType,destructorsRef){handle=Emval.toValue(handle);returnType=requireRegisteredType(returnType,\"emval::as\");var destructors=[];var rd=Emval.toHandle(destructors);HEAPU32[destructorsRef>>2]=rd;return returnType[\"toWireType\"](destructors,handle)}var emval_symbols={};function getStringOrSymbol(address){var symbol=emval_symbols[address];if(symbol===undefined){return readLatin1String(address)}return symbol}var emval_methodCallers=[];function __emval_call_void_method(caller,handle,methodName,args){caller=emval_methodCallers[caller];handle=Emval.toValue(handle);methodName=getStringOrSymbol(methodName);caller(handle,methodName,null,args)}function emval_get_global(){if(typeof globalThis==\"object\"){return globalThis}return function(){return Function}()(\"return this\")()}function __emval_get_global(name){if(name===0){return Emval.toHandle(emval_get_global())}else{name=getStringOrSymbol(name);return Emval.toHandle(emval_get_global()[name])}}function emval_addMethodCaller(caller){var id=emval_methodCallers.length;emval_methodCallers.push(caller);return id}function emval_lookupTypes(argCount,argTypes){var a=new Array(argCount);for(var i=0;i<argCount;++i){a[i]=requireRegisteredType(HEAPU32[argTypes+i*POINTER_SIZE>>2],\"parameter \"+i)}return a}var emval_registeredMethods=[];function __emval_get_method_caller(argCount,argTypes){var types=emval_lookupTypes(argCount,argTypes);var retType=types[0];var signatureName=retType.name+\"_$\"+types.slice(1).map(function(t){return t.name}).join(\"_\")+\"$\";var returnId=emval_registeredMethods[signatureName];if(returnId!==undefined){return returnId}var params=[\"retType\"];var args=[retType];var argsList=\"\";for(var i=0;i<argCount-1;++i){argsList+=(i!==0?\", \":\"\")+\"arg\"+i;params.push(\"argType\"+i);args.push(types[1+i])}var functionName=makeLegalFunctionName(\"methodCaller_\"+signatureName);var functionBody=\"return function \"+functionName+\"(handle, name, destructors, args) {\\n\";var offset=0;for(var i=0;i<argCount-1;++i){functionBody+=\"    var arg\"+i+\" = argType\"+i+\".readValueFromPointer(args\"+(offset?\"+\"+offset:\"\")+\");\\n\";offset+=types[i+1][\"argPackAdvance\"]}functionBody+=\"    var rv = handle[name](\"+argsList+\");\\n\";for(var i=0;i<argCount-1;++i){if(types[i+1][\"deleteObject\"]){functionBody+=\"    argType\"+i+\".deleteObject(arg\"+i+\");\\n\"}}if(!retType.isVoid){functionBody+=\"    return retType.toWireType(destructors, rv);\\n\"}functionBody+=\"};\\n\";params.push(functionBody);var invokerFunction=new_(Function,params).apply(null,args);returnId=emval_addMethodCaller(invokerFunction);emval_registeredMethods[signatureName]=returnId;return returnId}function __emval_get_property(handle,key){handle=Emval.toValue(handle);key=Emval.toValue(key);return Emval.toHandle(handle[key])}function __emval_incref(handle){if(handle>4){emval_handle_array[handle].refcount+=1}}function craftEmvalAllocator(argCount){var argsList=\"\";for(var i=0;i<argCount;++i){argsList+=(i!==0?\", \":\"\")+\"arg\"+i}var getMemory=()=>HEAPU32;var functionBody=\"return function emval_allocator_\"+argCount+\"(constructor, argTypes, args) {\\n\"+\"  var HEAPU32 = getMemory();\\n\";for(var i=0;i<argCount;++i){functionBody+=\"var argType\"+i+\" = requireRegisteredType(HEAPU32[((argTypes)>>2)], 'parameter \"+i+\"');\\n\"+\"var arg\"+i+\" = argType\"+i+\".readValueFromPointer(args);\\n\"+\"args += argType\"+i+\"['argPackAdvance'];\\n\"+\"argTypes += 4;\\n\"}functionBody+=\"var obj = new constructor(\"+argsList+\");\\n\"+\"return valueToHandle(obj);\\n\"+\"}\\n\";return new Function(\"requireRegisteredType\",\"Module\",\"valueToHandle\",\"getMemory\",functionBody)(requireRegisteredType,Module,Emval.toHandle,getMemory)}var emval_newers={};function __emval_new(handle,argCount,argTypes,args){handle=Emval.toValue(handle);var newer=emval_newers[argCount];if(!newer){newer=craftEmvalAllocator(argCount);emval_newers[argCount]=newer}return newer(handle,argTypes,args)}function __emval_new_cstring(v){return Emval.toHandle(getStringOrSymbol(v))}function __emval_run_destructors(handle){var destructors=Emval.toValue(handle);runDestructors(destructors);__emval_decref(handle)}function __emval_take_value(type,arg){type=requireRegisteredType(type,\"_emval_take_value\");var v=type[\"readValueFromPointer\"](arg);return Emval.toHandle(v)}function _abort(){abort(\"\")}var readEmAsmArgsArray=[];function readEmAsmArgs(sigPtr,buf){readEmAsmArgsArray.length=0;var ch;buf>>=2;while(ch=HEAPU8[sigPtr++]){buf+=ch!=105&buf;readEmAsmArgsArray.push(ch==105?HEAP32[buf]:HEAPF64[buf++>>1]);++buf}return readEmAsmArgsArray}function runEmAsmFunction(code,sigPtr,argbuf){var args=readEmAsmArgs(sigPtr,argbuf);return ASM_CONSTS[code].apply(null,args)}function _emscripten_asm_const_int(code,sigPtr,argbuf){return runEmAsmFunction(code,sigPtr,argbuf)}function getHeapMax(){return 2147483648}function _emscripten_get_heap_max(){return getHeapMax()}function _emscripten_memcpy_big(dest,src,num){HEAPU8.copyWithin(dest,src,src+num)}function emscripten_realloc_buffer(size){try{wasmMemory.grow(size-buffer.byteLength+65535>>>16);updateGlobalBufferAndViews(wasmMemory.buffer);return 1}catch(e){}}function _emscripten_resize_heap(requestedSize){var oldSize=HEAPU8.length;requestedSize=requestedSize>>>0;var maxHeapSize=getHeapMax();if(requestedSize>maxHeapSize){return false}let alignUp=(x,multiple)=>x+(multiple-x%multiple)%multiple;for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=emscripten_realloc_buffer(newSize);if(replacement){return true}}return false}var ENV={};function getExecutableName(){return thisProgram||\"./this.program\"}function getEnvStrings(){if(!getEnvStrings.strings){var lang=(typeof navigator==\"object\"&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\";var env={\"USER\":\"web_user\",\"LOGNAME\":\"web_user\",\"PATH\":\"/\",\"PWD\":\"/\",\"HOME\":\"/home/web_user\",\"LANG\":lang,\"_\":getExecutableName()};for(var x in ENV){if(ENV[x]===undefined)delete env[x];else env[x]=ENV[x]}var strings=[];for(var x in env){strings.push(x+\"=\"+env[x])}getEnvStrings.strings=strings}return getEnvStrings.strings}function writeAsciiToMemory(str,buffer,dontAddNull){for(var i=0;i<str.length;++i){HEAP8[buffer++>>0]=str.charCodeAt(i)}if(!dontAddNull)HEAP8[buffer>>0]=0}function _environ_get(__environ,environ_buf){var bufSize=0;getEnvStrings().forEach(function(string,i){var ptr=environ_buf+bufSize;HEAPU32[__environ+i*4>>2]=ptr;writeAsciiToMemory(string,ptr);bufSize+=string.length+1});return 0}function _environ_sizes_get(penviron_count,penviron_buf_size){var strings=getEnvStrings();HEAPU32[penviron_count>>2]=strings.length;var bufSize=0;strings.forEach(function(string){bufSize+=string.length+1});HEAPU32[penviron_buf_size>>2]=bufSize;return 0}function _fd_close(fd){return 52}function _fd_read(fd,iov,iovcnt,pnum){return 52}function _fd_seek(fd,offset_low,offset_high,whence,newOffset){return 70}var printCharBuffers=[null,[],[]];function printChar(stream,curr){var buffer=printCharBuffers[stream];if(curr===0||curr===10){(stream===1?out:err)(UTF8ArrayToString(buffer,0));buffer.length=0}else{buffer.push(curr)}}function _fd_write(fd,iov,iovcnt,pnum){var num=0;for(var i=0;i<iovcnt;i++){var ptr=HEAPU32[iov>>2];var len=HEAPU32[iov+4>>2];iov+=8;for(var j=0;j<len;j++){printChar(fd,HEAPU8[ptr+j])}num+=len}HEAPU32[pnum>>2]=num;return 0}function __isLeapYear(year){return year%4===0&&(year%100!==0||year%400===0)}function __arraySum(array,index){var sum=0;for(var i=0;i<=index;sum+=array[i++]){}return sum}var __MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31];var __MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];function __addDays(date,days){var newDate=new Date(date.getTime());while(days>0){var leap=__isLeapYear(newDate.getFullYear());var currentMonth=newDate.getMonth();var daysInCurrentMonth=(leap?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR)[currentMonth];if(days>daysInCurrentMonth-newDate.getDate()){days-=daysInCurrentMonth-newDate.getDate()+1;newDate.setDate(1);if(currentMonth<11){newDate.setMonth(currentMonth+1)}else{newDate.setMonth(0);newDate.setFullYear(newDate.getFullYear()+1)}}else{newDate.setDate(newDate.getDate()+days);return newDate}}return newDate}function intArrayFromString(stringy,dontAddNull,length){var len=length>0?length:lengthBytesUTF8(stringy)+1;var u8array=new Array(len);var numBytesWritten=stringToUTF8Array(stringy,u8array,0,u8array.length);if(dontAddNull)u8array.length=numBytesWritten;return u8array}function writeArrayToMemory(array,buffer){HEAP8.set(array,buffer)}function _strftime(s,maxsize,format,tm){var tm_zone=HEAP32[tm+40>>2];var date={tm_sec:HEAP32[tm>>2],tm_min:HEAP32[tm+4>>2],tm_hour:HEAP32[tm+8>>2],tm_mday:HEAP32[tm+12>>2],tm_mon:HEAP32[tm+16>>2],tm_year:HEAP32[tm+20>>2],tm_wday:HEAP32[tm+24>>2],tm_yday:HEAP32[tm+28>>2],tm_isdst:HEAP32[tm+32>>2],tm_gmtoff:HEAP32[tm+36>>2],tm_zone:tm_zone?UTF8ToString(tm_zone):\"\"};var pattern=UTF8ToString(format);var EXPANSION_RULES_1={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"};for(var rule in EXPANSION_RULES_1){pattern=pattern.replace(new RegExp(rule,\"g\"),EXPANSION_RULES_1[rule])}var WEEKDAYS=[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"];var MONTHS=[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];function leadingSomething(value,digits,character){var str=typeof value==\"number\"?value.toString():value||\"\";while(str.length<digits){str=character[0]+str}return str}function leadingNulls(value,digits){return leadingSomething(value,digits,\"0\")}function compareByDay(date1,date2){function sgn(value){return value<0?-1:value>0?1:0}var compare;if((compare=sgn(date1.getFullYear()-date2.getFullYear()))===0){if((compare=sgn(date1.getMonth()-date2.getMonth()))===0){compare=sgn(date1.getDate()-date2.getDate())}}return compare}function getFirstWeekStartDate(janFourth){switch(janFourth.getDay()){case 0:return new Date(janFourth.getFullYear()-1,11,29);case 1:return janFourth;case 2:return new Date(janFourth.getFullYear(),0,3);case 3:return new Date(janFourth.getFullYear(),0,2);case 4:return new Date(janFourth.getFullYear(),0,1);case 5:return new Date(janFourth.getFullYear()-1,11,31);case 6:return new Date(janFourth.getFullYear()-1,11,30)}}function getWeekBasedYear(date){var thisDate=__addDays(new Date(date.tm_year+1900,0,1),date.tm_yday);var janFourthThisYear=new Date(thisDate.getFullYear(),0,4);var janFourthNextYear=new Date(thisDate.getFullYear()+1,0,4);var firstWeekStartThisYear=getFirstWeekStartDate(janFourthThisYear);var firstWeekStartNextYear=getFirstWeekStartDate(janFourthNextYear);if(compareByDay(firstWeekStartThisYear,thisDate)<=0){if(compareByDay(firstWeekStartNextYear,thisDate)<=0){return thisDate.getFullYear()+1}return thisDate.getFullYear()}return thisDate.getFullYear()-1}var EXPANSION_RULES_2={\"%a\":function(date){return WEEKDAYS[date.tm_wday].substring(0,3)},\"%A\":function(date){return WEEKDAYS[date.tm_wday]},\"%b\":function(date){return MONTHS[date.tm_mon].substring(0,3)},\"%B\":function(date){return MONTHS[date.tm_mon]},\"%C\":function(date){var year=date.tm_year+1900;return leadingNulls(year/100|0,2)},\"%d\":function(date){return leadingNulls(date.tm_mday,2)},\"%e\":function(date){return leadingSomething(date.tm_mday,2,\" \")},\"%g\":function(date){return getWeekBasedYear(date).toString().substring(2)},\"%G\":function(date){return getWeekBasedYear(date)},\"%H\":function(date){return leadingNulls(date.tm_hour,2)},\"%I\":function(date){var twelveHour=date.tm_hour;if(twelveHour==0)twelveHour=12;else if(twelveHour>12)twelveHour-=12;return leadingNulls(twelveHour,2)},\"%j\":function(date){return leadingNulls(date.tm_mday+__arraySum(__isLeapYear(date.tm_year+1900)?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR,date.tm_mon-1),3)},\"%m\":function(date){return leadingNulls(date.tm_mon+1,2)},\"%M\":function(date){return leadingNulls(date.tm_min,2)},\"%n\":function(){return\"\\n\"},\"%p\":function(date){if(date.tm_hour>=0&&date.tm_hour<12){return\"AM\"}return\"PM\"},\"%S\":function(date){return leadingNulls(date.tm_sec,2)},\"%t\":function(){return\"\\t\"},\"%u\":function(date){return date.tm_wday||7},\"%U\":function(date){var days=date.tm_yday+7-date.tm_wday;return leadingNulls(Math.floor(days/7),2)},\"%V\":function(date){var val=Math.floor((date.tm_yday+7-(date.tm_wday+6)%7)/7);if((date.tm_wday+371-date.tm_yday-2)%7<=2){val++}if(!val){val=52;var dec31=(date.tm_wday+7-date.tm_yday-1)%7;if(dec31==4||dec31==5&&__isLeapYear(date.tm_year%400-1)){val++}}else if(val==53){var jan1=(date.tm_wday+371-date.tm_yday)%7;if(jan1!=4&&(jan1!=3||!__isLeapYear(date.tm_year)))val=1}return leadingNulls(val,2)},\"%w\":function(date){return date.tm_wday},\"%W\":function(date){var days=date.tm_yday+7-(date.tm_wday+6)%7;return leadingNulls(Math.floor(days/7),2)},\"%y\":function(date){return(date.tm_year+1900).toString().substring(2)},\"%Y\":function(date){return date.tm_year+1900},\"%z\":function(date){var off=date.tm_gmtoff;var ahead=off>=0;off=Math.abs(off)/60;off=off/60*100+off%60;return(ahead?\"+\":\"-\")+String(\"0000\"+off).slice(-4)},\"%Z\":function(date){return date.tm_zone},\"%%\":function(){return\"%\"}};pattern=pattern.replace(/%%/g,\"\\0\\0\");for(var rule in EXPANSION_RULES_2){if(pattern.includes(rule)){pattern=pattern.replace(new RegExp(rule,\"g\"),EXPANSION_RULES_2[rule](date))}}pattern=pattern.replace(/\\0\\0/g,\"%\");var bytes=intArrayFromString(pattern,false);if(bytes.length>maxsize){return 0}writeArrayToMemory(bytes,s);return bytes.length-1}function _strftime_l(s,maxsize,format,tm,loc){return _strftime(s,maxsize,format,tm)}function _proc_exit(code){EXITSTATUS=code;if(!keepRuntimeAlive()){if(Module[\"onExit\"])Module[\"onExit\"](code);ABORT=true}quit_(code,new ExitStatus(code))}function exitJS(status,implicit){EXITSTATUS=status;_proc_exit(status)}function handleException(e){if(e instanceof ExitStatus||e==\"unwind\"){return EXITSTATUS}quit_(1,e)}InternalError=Module[\"InternalError\"]=extendError(Error,\"InternalError\");embind_init_charCodes();BindingError=Module[\"BindingError\"]=extendError(Error,\"BindingError\");init_emval();UnboundTypeError=Module[\"UnboundTypeError\"]=extendError(Error,\"UnboundTypeError\");var asmLibraryArg={\"b\":___cxa_throw,\"J\":___syscall_getcwd,\"F\":___syscall_getdents64,\"L\":___syscall_openat,\"E\":___syscall_readlinkat,\"G\":___syscall_stat64,\"x\":__embind_finalize_value_object,\"A\":__embind_register_bigint,\"O\":__embind_register_bool,\"N\":__embind_register_emval,\"v\":__embind_register_float,\"g\":__embind_register_function,\"d\":__embind_register_integer,\"c\":__embind_register_memory_view,\"u\":__embind_register_std_string,\"m\":__embind_register_std_wstring,\"y\":__embind_register_value_object,\"e\":__embind_register_value_object_field,\"P\":__embind_register_void,\"r\":__emval_as,\"i\":__emval_call_void_method,\"a\":__emval_decref,\"p\":__emval_get_global,\"j\":__emval_get_method_caller,\"s\":__emval_get_property,\"f\":__emval_incref,\"o\":__emval_new,\"w\":__emval_new_cstring,\"q\":__emval_run_destructors,\"k\":__emval_take_value,\"n\":_abort,\"h\":_emscripten_asm_const_int,\"D\":_emscripten_get_heap_max,\"M\":_emscripten_memcpy_big,\"C\":_emscripten_resize_heap,\"H\":_environ_get,\"I\":_environ_sizes_get,\"l\":_fd_close,\"K\":_fd_read,\"z\":_fd_seek,\"t\":_fd_write,\"B\":_strftime_l};var asm=createWasm();var ___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=function(){return(___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=Module[\"asm\"][\"R\"]).apply(null,arguments)};var _main=Module[\"_main\"]=function(){return(_main=Module[\"_main\"]=Module[\"asm\"][\"S\"]).apply(null,arguments)};var _malloc=Module[\"_malloc\"]=function(){return(_malloc=Module[\"_malloc\"]=Module[\"asm\"][\"U\"]).apply(null,arguments)};var _free=Module[\"_free\"]=function(){return(_free=Module[\"_free\"]=Module[\"asm\"][\"V\"]).apply(null,arguments)};var ___getTypeName=Module[\"___getTypeName\"]=function(){return(___getTypeName=Module[\"___getTypeName\"]=Module[\"asm\"][\"W\"]).apply(null,arguments)};var __embind_initialize_bindings=Module[\"__embind_initialize_bindings\"]=function(){return(__embind_initialize_bindings=Module[\"__embind_initialize_bindings\"]=Module[\"asm\"][\"X\"]).apply(null,arguments)};var ___cxa_is_pointer_type=Module[\"___cxa_is_pointer_type\"]=function(){return(___cxa_is_pointer_type=Module[\"___cxa_is_pointer_type\"]=Module[\"asm\"][\"Y\"]).apply(null,arguments)};var dynCall_viij=Module[\"dynCall_viij\"]=function(){return(dynCall_viij=Module[\"dynCall_viij\"]=Module[\"asm\"][\"Z\"]).apply(null,arguments)};var dynCall_vij=Module[\"dynCall_vij\"]=function(){return(dynCall_vij=Module[\"dynCall_vij\"]=Module[\"asm\"][\"_\"]).apply(null,arguments)};var dynCall_iij=Module[\"dynCall_iij\"]=function(){return(dynCall_iij=Module[\"dynCall_iij\"]=Module[\"asm\"][\"$\"]).apply(null,arguments)};var dynCall_viji=Module[\"dynCall_viji\"]=function(){return(dynCall_viji=Module[\"dynCall_viji\"]=Module[\"asm\"][\"aa\"]).apply(null,arguments)};var dynCall_jiji=Module[\"dynCall_jiji\"]=function(){return(dynCall_jiji=Module[\"dynCall_jiji\"]=Module[\"asm\"][\"ba\"]).apply(null,arguments)};var dynCall_viijii=Module[\"dynCall_viijii\"]=function(){return(dynCall_viijii=Module[\"dynCall_viijii\"]=Module[\"asm\"][\"ca\"]).apply(null,arguments)};var dynCall_iiiiij=Module[\"dynCall_iiiiij\"]=function(){return(dynCall_iiiiij=Module[\"dynCall_iiiiij\"]=Module[\"asm\"][\"da\"]).apply(null,arguments)};var dynCall_iiiiijj=Module[\"dynCall_iiiiijj\"]=function(){return(dynCall_iiiiijj=Module[\"dynCall_iiiiijj\"]=Module[\"asm\"][\"ea\"]).apply(null,arguments)};var dynCall_iiiiiijj=Module[\"dynCall_iiiiiijj\"]=function(){return(dynCall_iiiiiijj=Module[\"dynCall_iiiiiijj\"]=Module[\"asm\"][\"fa\"]).apply(null,arguments)};var ___start_em_js=Module[\"___start_em_js\"]=638316;var ___stop_em_js=Module[\"___stop_em_js\"]=638383;var calledRun;dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function callMain(args){var entryFunction=Module[\"_main\"];var argc=0;var argv=0;try{var ret=entryFunction(argc,argv);exitJS(ret,true);return ret}catch(e){return handleException(e)}}function run(args){args=args||arguments_;if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();preMain();readyPromiseResolve(Module);if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();if(shouldRunNow)callMain(args);postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}var shouldRunNow=true;if(Module[\"noInitialRun\"])shouldRunNow=false;run();\n\n\n  return ICRPolySegApp.ready\n}\n);\n})();\nexport default ICRPolySegApp;","import launcher from './ICRPolySeg.js';\r\nimport wasm from './ICRPolySeg.wasm';\r\n\r\nexport default class ICRPolySeg {\r\n  constructor() {\r\n    this._instance;\r\n  }\r\n\r\n  get instance() {\r\n    if (this._instance) {\r\n      return this._instance;\r\n    }\r\n\r\n    throw new Error('ICRPolySeg is not initialized.');\r\n  }\r\n\r\n  async initialize(params = {}) {\r\n    this._instance = await launcher({\r\n      locateFile: (f) => {\r\n        if (f.endsWith('.wasm')) {\r\n          return wasm;\r\n        }\r\n        return f;\r\n      },\r\n      ...params\r\n    });\r\n  }\r\n}\r\n","import { m as macro } from '../../macros2.js';\nimport vtkPolyData from '../../Common/DataModel/PolyData.js';\n\nconst Dir = {\n  Forward: 1,\n  Backward: -1\n};\nconst visited = new Set();\nfunction vtkContourLoopExtraction(publicAPI, model) {\n  publicAPI.requestData = (inData, outData) => {\n    const [input] = inData;\n    if (!outData[0]) {\n      outData[0] = vtkPolyData.newInstance();\n    }\n    const [output] = outData;\n    publicAPI.extractContours(input, output);\n    output.modified();\n  };\n  publicAPI.traverseLoop = (pd, dir, startLineId, startPtId, loopPoints) => {\n    let lineId = startLineId;\n    let lastPtId = startPtId;\n    let terminated = false;\n    let numInserted = 0;\n    while (!terminated) {\n      const {\n        cellPointIds\n      } = pd.getCellPoints(lineId);\n      if (!cellPointIds) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n      lastPtId = cellPointIds[0] !== lastPtId ? cellPointIds[0] : cellPointIds[1];\n      numInserted++;\n\n      // parametric point value\n      const t = dir * numInserted;\n      loopPoints.push({\n        t,\n        ptId: lastPtId\n      });\n      const lineCell = pd.getPointCells(lastPtId);\n      if (lineCell.length !== 2 || lastPtId === startPtId) {\n        // looped\n        return lastPtId;\n      }\n      if (lineCell.length === 2) {\n        // continue along loop\n        lineId = lineCell[0] !== lineId ? lineCell[0] : lineCell[1];\n        visited.add(lineId);\n      } else {\n        // empty or invalid cell\n        terminated = true;\n      }\n    }\n    return lastPtId;\n  };\n  publicAPI.extractContours = (input, output) => {\n    const loops = [];\n    visited.clear();\n    const inLines = input.getLines();\n    output.getPoints().setData(Float32Array.from(input.getPoints().getData()));\n\n    // TODO skip if cached input mtime hasn't changed.\n    // iterate over input lines\n    for (let li = 0; li < inLines.getNumberOfCells(); li++) {\n      if (visited.has(li)) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n      const {\n        cellPointIds\n      } = input.getCellPoints(li);\n      if (!cellPointIds) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n      visited.add(li);\n      const startPtId = cellPointIds[0];\n      const loopPoints = [];\n      loopPoints.push({\n        t: 0,\n        ptId: startPtId\n      });\n      const endPtId = publicAPI.traverseLoop(input, Dir.Forward, li, startPtId, loopPoints);\n      if (startPtId !== endPtId) {\n        // didn't find a loop. Go other direction to see where we end up\n        publicAPI.traverseLoop(input, Dir.Backward, li, startPtId, loopPoints);\n        loopPoints.sort((a, b) => a.t < b.t ? -1 : 1);\n        // make closed contour\n        if (loopPoints.length && loopPoints[0].ptId !== loopPoints[loopPoints.length - 1]?.ptId) {\n          loopPoints.push({\n            ...loopPoints[loopPoints.length - 1]\n          });\n        }\n      }\n      if (loopPoints.length) {\n        loops.push(loopPoints);\n      }\n    }\n\n    // clear output lines\n    const outLines = output.getLines();\n    outLines.resize(0);\n    loops.forEach(loop => {\n      outLines.insertNextCell(loop.map(pt => pt.ptId));\n    });\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  macro.obj(publicAPI, model);\n  macro.algo(publicAPI, model, 1, 1);\n  vtkContourLoopExtraction(publicAPI);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkContourLoopExtraction');\n\n// ----------------------------------------------------------------------------\n\nvar index = {\n  newInstance,\n  extend\n};\n\nexport { index as default, extend, newInstance };\n","function extend2DBoundingBoxInViewAxis(boundsIJK, numSlicesToProject) {\n    const sliceNormalIndex = boundsIJK.findIndex(([min, max]) => min === max);\n    if (sliceNormalIndex === -1) {\n        throw new Error('3D bounding boxes not supported in an oblique plane');\n    }\n    boundsIJK[sliceNormalIndex][0] -= numSlicesToProject;\n    boundsIJK[sliceNormalIndex][1] += numSlicesToProject;\n    return boundsIJK;\n}\nexport default extend2DBoundingBoxInViewAxis;\n","import { CONSTANTS } from '@cornerstonejs/core';\nconst { EPSILON } = CONSTANTS;\nfunction calculateBoundingBox(points, dimensions, isWorld = false) {\n    let xMin = Infinity;\n    let xMax = isWorld ? -Infinity : 0;\n    let yMin = Infinity;\n    let yMax = isWorld ? -Infinity : 0;\n    let zMin = Infinity;\n    let zMax = isWorld ? -Infinity : 0;\n    const is3D = points[0]?.length === 3;\n    for (let i = 0; i < points.length; i++) {\n        const p = points[i];\n        xMin = Math.min(p[0], xMin);\n        xMax = Math.max(p[0], xMax);\n        yMin = Math.min(p[1], yMin);\n        yMax = Math.max(p[1], yMax);\n        if (is3D) {\n            zMin = Math.min(p[2] ?? zMin, zMin);\n            zMax = Math.max(p[2] ?? zMax, zMax);\n        }\n    }\n    if (dimensions) {\n        xMin = Math.max(isWorld ? dimensions[0] + EPSILON : 0, xMin);\n        xMax = Math.min(isWorld ? dimensions[0] - EPSILON : dimensions[0] - 1, xMax);\n        yMin = Math.max(isWorld ? dimensions[1] + EPSILON : 0, yMin);\n        yMax = Math.min(isWorld ? dimensions[1] - EPSILON : dimensions[1] - 1, yMax);\n        if (is3D && dimensions.length === 3) {\n            zMin = Math.max(isWorld ? dimensions[2] + EPSILON : 0, zMin);\n            zMax = Math.min(isWorld ? dimensions[2] - EPSILON : dimensions[2] - 1, zMax);\n        }\n    }\n    else if (!isWorld) {\n        xMin = Math.max(0, xMin);\n        xMax = Math.min(Infinity, xMax);\n        yMin = Math.max(0, yMin);\n        yMax = Math.min(Infinity, yMax);\n        if (is3D) {\n            zMin = Math.max(0, zMin);\n            zMax = Math.min(Infinity, zMax);\n        }\n    }\n    return is3D\n        ? [\n            [xMin, xMax],\n            [yMin, yMax],\n            [zMin, zMax],\n        ]\n        : [[xMin, xMax], [yMin, yMax], null];\n}\nexport function getBoundingBoxAroundShapeIJK(points, dimensions) {\n    return calculateBoundingBox(points, dimensions, false);\n}\nexport function getBoundingBoxAroundShapeWorld(points, clipBounds) {\n    return calculateBoundingBox(points, clipBounds, true);\n}\n","import { glMatrix } from 'gl-matrix';\nimport { distanceToPointSquared } from '../point';\nexport default function isClosed(polyline) {\n    if (polyline.length < 3) {\n        return false;\n    }\n    const numPolylinePoints = polyline.length;\n    const firstPoint = polyline[0];\n    const lastPoint = polyline[numPolylinePoints - 1];\n    const distFirstToLastPoints = distanceToPointSquared(firstPoint, lastPoint);\n    return glMatrix.equals(0, distFirstToLastPoints);\n}\n","export default function distanceToPointSquared(p1, p2) {\n    if (p1.length !== p2.length) {\n        throw Error('Both points should have the same dimensionality');\n    }\n    const [x1, y1, z1 = 0] = p1;\n    const [x2, y2, z2 = 0] = p2;\n    const dx = x2 - x1;\n    const dy = y2 - y1;\n    const dz = z2 - z1;\n    return dx * dx + dy * dy + dz * dz;\n}\n","import isClosed from './isClosed';\nexport default function containsPoint(polyline, point, options = {\n    closed: undefined,\n}) {\n    if (polyline.length < 3) {\n        return false;\n    }\n    const numPolylinePoints = polyline.length;\n    let numIntersections = 0;\n    const { closed, holes } = options;\n    if (holes?.length) {\n        for (const hole of holes) {\n            if (containsPoint(hole, point)) {\n                return false;\n            }\n        }\n    }\n    const shouldClose = !(closed === undefined ? isClosed(polyline) : closed);\n    const maxSegmentIndex = polyline.length - (shouldClose ? 1 : 2);\n    for (let i = 0; i <= maxSegmentIndex; i++) {\n        const p1 = polyline[i];\n        const p2Index = i === numPolylinePoints - 1 ? 0 : i + 1;\n        const p2 = polyline[p2Index];\n        const maxX = p1[0] >= p2[0] ? p1[0] : p2[0];\n        const maxY = p1[1] >= p2[1] ? p1[1] : p2[1];\n        const minY = p1[1] <= p2[1] ? p1[1] : p2[1];\n        const mayIntersectLineSegment = point[0] <= maxX && point[1] >= minY && point[1] < maxY;\n        if (mayIntersectLineSegment) {\n            const isVerticalLine = p1[0] === p2[0];\n            let intersects = isVerticalLine;\n            if (!intersects) {\n                const xIntersection = ((point[1] - p1[1]) * (p2[0] - p1[0])) / (p2[1] - p1[1]) + p1[0];\n                intersects = point[0] <= xIntersection;\n            }\n            numIntersections += intersects ? 1 : 0;\n        }\n    }\n    return !!(numIntersections % 2);\n}\n","export default function getAABB(polyline, options) {\n    let polylineToUse = polyline;\n    const numDimensions = options?.numDimensions || 2;\n    const is3D = numDimensions === 3;\n    if (!Array.isArray(polyline[0])) {\n        const currentPolyline = polyline;\n        const totalPoints = currentPolyline.length / numDimensions;\n        polylineToUse = new Array(currentPolyline.length / numDimensions);\n        for (let i = 0, len = totalPoints; i < len; i++) {\n            polylineToUse[i] = [\n                currentPolyline[i * numDimensions],\n                currentPolyline[i * numDimensions + 1],\n            ];\n            if (is3D) {\n                polylineToUse[i].push(currentPolyline[i * numDimensions + 2]);\n            }\n        }\n    }\n    let minX = Infinity;\n    let minY = Infinity;\n    let maxX = -Infinity;\n    let maxY = -Infinity;\n    let minZ = Infinity;\n    let maxZ = -Infinity;\n    polylineToUse = polylineToUse;\n    for (let i = 0, len = polylineToUse.length; i < len; i++) {\n        const [x, y, z] = polylineToUse[i];\n        minX = minX < x ? minX : x;\n        minY = minY < y ? minY : y;\n        maxX = maxX > x ? maxX : x;\n        maxY = maxY > y ? maxY : y;\n        if (is3D) {\n            minZ = minZ < z ? minZ : z;\n            maxZ = maxZ > z ? maxZ : z;\n        }\n    }\n    return is3D\n        ? { minX, maxX, minY, maxY, minZ, maxZ }\n        : { minX, maxX, minY, maxY };\n}\n","import * as mathPoint from '../point';\nimport getLineSegmentIntersectionsIndexes from './getLineSegmentIntersectionsIndexes';\nimport containsPoint from './containsPoint';\nimport getNormal2 from './getNormal2';\nimport { glMatrix, vec3 } from 'gl-matrix';\nimport getLinesIntersection from './getLinesIntersection';\nvar PolylinePointType;\n(function (PolylinePointType) {\n    PolylinePointType[PolylinePointType[\"Vertex\"] = 0] = \"Vertex\";\n    PolylinePointType[PolylinePointType[\"Intersection\"] = 1] = \"Intersection\";\n})(PolylinePointType || (PolylinePointType = {}));\nvar PolylinePointPosition;\n(function (PolylinePointPosition) {\n    PolylinePointPosition[PolylinePointPosition[\"Outside\"] = -1] = \"Outside\";\n    PolylinePointPosition[PolylinePointPosition[\"Edge\"] = 0] = \"Edge\";\n    PolylinePointPosition[PolylinePointPosition[\"Inside\"] = 1] = \"Inside\";\n})(PolylinePointPosition || (PolylinePointPosition = {}));\nvar PolylinePointDirection;\n(function (PolylinePointDirection) {\n    PolylinePointDirection[PolylinePointDirection[\"Exiting\"] = -1] = \"Exiting\";\n    PolylinePointDirection[PolylinePointDirection[\"Unknown\"] = 0] = \"Unknown\";\n    PolylinePointDirection[PolylinePointDirection[\"Entering\"] = 1] = \"Entering\";\n})(PolylinePointDirection || (PolylinePointDirection = {}));\nfunction ensuresNextPointers(polylinePoints) {\n    for (let i = 0, len = polylinePoints.length; i < len; i++) {\n        const currentPoint = polylinePoints[i];\n        if (!currentPoint.next) {\n            currentPoint.next = polylinePoints[i === len - 1 ? 0 : i + 1];\n        }\n    }\n}\nfunction getSourceAndTargetPointsList(targetPolyline, sourcePolyline) {\n    const targetPolylinePoints = [];\n    const sourcePolylinePoints = [];\n    const sourceIntersectionsCache = new Map();\n    const isFirstPointInside = containsPoint(sourcePolyline, targetPolyline[0]);\n    let intersectionPointDirection = isFirstPointInside\n        ? PolylinePointDirection.Exiting\n        : PolylinePointDirection.Entering;\n    for (let i = 0, len = targetPolyline.length; i < len; i++) {\n        const p1 = targetPolyline[i];\n        const pointInside = containsPoint(sourcePolyline, p1);\n        const vertexPoint = {\n            type: PolylinePointType.Vertex,\n            coordinates: p1,\n            position: pointInside\n                ? PolylinePointPosition.Inside\n                : PolylinePointPosition.Outside,\n            visited: false,\n            next: null,\n        };\n        targetPolylinePoints.push(vertexPoint);\n        const q1 = targetPolyline[i === len - 1 ? 0 : i + 1];\n        const intersectionsInfo = getLineSegmentIntersectionsIndexes(sourcePolyline, p1, q1).map((intersectedLineSegment) => {\n            const sourceLineSegmentId = intersectedLineSegment[0];\n            const p2 = sourcePolyline[intersectedLineSegment[0]];\n            const q2 = sourcePolyline[intersectedLineSegment[1]];\n            const intersectionCoordinate = getLinesIntersection(p1, q1, p2, q2);\n            const targetStartPointDistSquared = mathPoint.distanceToPointSquared(p1, intersectionCoordinate);\n            return {\n                sourceLineSegmentId,\n                coordinate: intersectionCoordinate,\n                targetStartPointDistSquared,\n            };\n        });\n        intersectionsInfo.sort((left, right) => left.targetStartPointDistSquared - right.targetStartPointDistSquared);\n        intersectionsInfo.forEach((intersectionInfo) => {\n            const { sourceLineSegmentId, coordinate: intersectionCoordinate } = intersectionInfo;\n            const targetEdgePoint = {\n                type: PolylinePointType.Intersection,\n                coordinates: intersectionCoordinate,\n                position: PolylinePointPosition.Edge,\n                direction: intersectionPointDirection,\n                visited: false,\n                next: null,\n            };\n            const sourceEdgePoint = {\n                ...targetEdgePoint,\n                direction: PolylinePointDirection.Unknown,\n                cloned: true,\n            };\n            if (intersectionPointDirection === PolylinePointDirection.Entering) {\n                targetEdgePoint.next = sourceEdgePoint;\n            }\n            else {\n                sourceEdgePoint.next = targetEdgePoint;\n            }\n            let sourceIntersectionPoints = sourceIntersectionsCache.get(sourceLineSegmentId);\n            if (!sourceIntersectionPoints) {\n                sourceIntersectionPoints = [];\n                sourceIntersectionsCache.set(sourceLineSegmentId, sourceIntersectionPoints);\n            }\n            targetPolylinePoints.push(targetEdgePoint);\n            sourceIntersectionPoints.push(sourceEdgePoint);\n            intersectionPointDirection *= -1;\n        });\n    }\n    for (let i = 0, len = sourcePolyline.length; i < len; i++) {\n        const lineSegmentId = i;\n        const p1 = sourcePolyline[i];\n        const vertexPoint = {\n            type: PolylinePointType.Vertex,\n            coordinates: p1,\n            visited: false,\n            next: null,\n        };\n        sourcePolylinePoints.push(vertexPoint);\n        const sourceIntersectionPoints = sourceIntersectionsCache.get(lineSegmentId);\n        if (!sourceIntersectionPoints?.length) {\n            continue;\n        }\n        sourceIntersectionPoints\n            .map((intersectionPoint) => ({\n            intersectionPoint,\n            lineSegStartDistSquared: mathPoint.distanceToPointSquared(p1, intersectionPoint.coordinates),\n        }))\n            .sort((left, right) => left.lineSegStartDistSquared - right.lineSegStartDistSquared)\n            .map(({ intersectionPoint }) => intersectionPoint)\n            .forEach((intersectionPoint) => sourcePolylinePoints.push(intersectionPoint));\n    }\n    ensuresNextPointers(targetPolylinePoints);\n    ensuresNextPointers(sourcePolylinePoints);\n    return { targetPolylinePoints, sourcePolylinePoints };\n}\nfunction getUnvisitedOutsidePoint(polylinePoints) {\n    for (let i = 0, len = polylinePoints.length; i < len; i++) {\n        const point = polylinePoints[i];\n        if (!point.visited && point.position === PolylinePointPosition.Outside) {\n            return point;\n        }\n    }\n}\nfunction mergePolylines(targetPolyline, sourcePolyline) {\n    const targetNormal = getNormal2(targetPolyline);\n    const sourceNormal = getNormal2(sourcePolyline);\n    const dotNormals = vec3.dot(sourceNormal, targetNormal);\n    if (!glMatrix.equals(1, dotNormals)) {\n        sourcePolyline = sourcePolyline.slice().reverse();\n    }\n    const { targetPolylinePoints } = getSourceAndTargetPointsList(targetPolyline, sourcePolyline);\n    const startPoint = getUnvisitedOutsidePoint(targetPolylinePoints);\n    if (!startPoint) {\n        return targetPolyline.slice();\n    }\n    const mergedPolyline = [startPoint.coordinates];\n    let currentPoint = startPoint.next;\n    while (currentPoint !== startPoint) {\n        if (currentPoint.type === PolylinePointType.Intersection &&\n            currentPoint.cloned) {\n            currentPoint = currentPoint.next;\n            continue;\n        }\n        mergedPolyline.push(currentPoint.coordinates);\n        currentPoint = currentPoint.next;\n    }\n    return mergedPolyline;\n}\nfunction subtractPolylines(targetPolyline, sourcePolyline) {\n    const targetNormal = getNormal2(targetPolyline);\n    const sourceNormal = getNormal2(sourcePolyline);\n    const dotNormals = vec3.dot(sourceNormal, targetNormal);\n    if (!glMatrix.equals(-1, dotNormals)) {\n        sourcePolyline = sourcePolyline.slice().reverse();\n    }\n    const { targetPolylinePoints } = getSourceAndTargetPointsList(targetPolyline, sourcePolyline);\n    let startPoint = null;\n    const subtractedPolylines = [];\n    while ((startPoint = getUnvisitedOutsidePoint(targetPolylinePoints))) {\n        const subtractedPolyline = [startPoint.coordinates];\n        let currentPoint = startPoint.next;\n        startPoint.visited = true;\n        while (currentPoint !== startPoint) {\n            currentPoint.visited = true;\n            if (currentPoint.type === PolylinePointType.Intersection &&\n                currentPoint.cloned) {\n                currentPoint = currentPoint.next;\n                continue;\n            }\n            subtractedPolyline.push(currentPoint.coordinates);\n            currentPoint = currentPoint.next;\n        }\n        subtractedPolylines.push(subtractedPolyline);\n    }\n    return subtractedPolylines;\n}\nexport { mergePolylines, subtractPolylines };\n","import { utilities } from '@cornerstonejs/core';\nconst epsilon = 1e-6;\nexport function projectTo2D(polyline) {\n    let sharedDimensionIndex;\n    const testPoints = utilities.getRandomSampleFromArray(polyline, 50);\n    for (let i = 0; i < 3; i++) {\n        if (testPoints.every((point, index, array) => Math.abs(point[i] - array[0][i]) < epsilon)) {\n            sharedDimensionIndex = i;\n            break;\n        }\n    }\n    if (sharedDimensionIndex === undefined) {\n        throw new Error('Cannot find a shared dimension index for polyline, probably oblique plane');\n    }\n    const points2D = [];\n    const firstDim = (sharedDimensionIndex + 1) % 3;\n    const secondDim = (sharedDimensionIndex + 2) % 3;\n    for (let i = 0; i < polyline.length; i++) {\n        points2D.push([polyline[i][firstDim], polyline[i][secondDim]]);\n    }\n    return {\n        sharedDimensionIndex,\n        projectedPolyline: points2D,\n    };\n}\n","import { vec3 } from 'gl-matrix';\nimport { CONSTANTS, metaData } from '@cornerstonejs/core';\nconst { EPSILON } = CONSTANTS;\nconst PARALLEL_THRESHOLD = 1 - EPSILON;\nexport default function filterAnnotationsWithinSlice(annotations, camera, spacingInNormalDirection) {\n    const { viewPlaneNormal } = camera;\n    const annotationsWithParallelNormals = annotations.filter((td) => {\n        let annotationViewPlaneNormal = td.metadata.viewPlaneNormal;\n        if (!annotationViewPlaneNormal) {\n            const { referencedImageId } = td.metadata;\n            const { imageOrientationPatient } = metaData.get('imagePlaneModule', referencedImageId);\n            const rowCosineVec = vec3.fromValues(imageOrientationPatient[0], imageOrientationPatient[1], imageOrientationPatient[2]);\n            const colCosineVec = vec3.fromValues(imageOrientationPatient[3], imageOrientationPatient[4], imageOrientationPatient[5]);\n            annotationViewPlaneNormal = vec3.create();\n            vec3.cross(annotationViewPlaneNormal, rowCosineVec, colCosineVec);\n            td.metadata.viewPlaneNormal = annotationViewPlaneNormal;\n        }\n        const isParallel = Math.abs(vec3.dot(viewPlaneNormal, annotationViewPlaneNormal)) >\n            PARALLEL_THRESHOLD;\n        return annotationViewPlaneNormal && isParallel;\n    });\n    if (!annotationsWithParallelNormals.length) {\n        return [];\n    }\n    const halfSpacingInNormalDirection = spacingInNormalDirection / 2;\n    const { focalPoint } = camera;\n    const annotationsWithinSlice = [];\n    for (const annotation of annotationsWithParallelNormals) {\n        const data = annotation.data;\n        const point = data.handles.points[0];\n        if (!annotation.isVisible) {\n            continue;\n        }\n        const dir = vec3.create();\n        vec3.sub(dir, focalPoint, point);\n        const dot = vec3.dot(dir, viewPlaneNormal);\n        if (Math.abs(dot) < halfSpacingInNormalDirection) {\n            annotationsWithinSlice.push(annotation);\n        }\n    }\n    return annotationsWithinSlice;\n}\n","import vtkMath from '@kitware/vtk.js/Common/Core/Math';\nimport { utilities as csUtils } from '@cornerstonejs/core';\nexport default function getPointInLineOfSightWithCriteria(viewport, worldPos, targetVolumeId, criteriaFunction, stepSize = 0.25) {\n    const camera = viewport.getCamera();\n    const { position: cameraPosition } = camera;\n    const { spacingInNormalDirection } = csUtils.getTargetVolumeAndSpacingInNormalDir(viewport, camera, targetVolumeId);\n    const step = spacingInNormalDirection * stepSize;\n    const bounds = viewport.getBounds();\n    const xMin = bounds[0];\n    const xMax = bounds[1];\n    const vector = [0, 0, 0];\n    let point = [0, 0, 0];\n    vtkMath.subtract(worldPos, cameraPosition, vector);\n    let pickedPoint;\n    for (let pointT = xMin; pointT <= xMax; pointT = pointT + step) {\n        point = [pointT, 0, 0];\n        const t = (pointT - cameraPosition[0]) / vector[0];\n        point[1] = t * vector[1] + cameraPosition[1];\n        point[2] = t * vector[2] + cameraPosition[2];\n        if (_inBounds(point, bounds)) {\n            const intensity = viewport.getIntensityFromWorld(point);\n            const pointToPick = criteriaFunction(intensity, point);\n            if (pointToPick) {\n                pickedPoint = pointToPick;\n            }\n        }\n    }\n    return pickedPoint;\n}\nconst _inBounds = function (point, bounds) {\n    const [xMin, xMax, yMin, yMax, zMin, zMax] = bounds;\n    return (point[0] > xMin &&\n        point[0] < xMax &&\n        point[1] > yMin &&\n        point[1] < yMax &&\n        point[2] > zMin &&\n        point[2] < zMax);\n};\n","import { vec3 } from 'gl-matrix';\nexport const isPlaneIntersectingAABB = (origin, normal, minX, minY, minZ, maxX, maxY, maxZ) => {\n    const vertices = [\n        vec3.fromValues(minX, minY, minZ),\n        vec3.fromValues(maxX, minY, minZ),\n        vec3.fromValues(minX, maxY, minZ),\n        vec3.fromValues(maxX, maxY, minZ),\n        vec3.fromValues(minX, minY, maxZ),\n        vec3.fromValues(maxX, minY, maxZ),\n        vec3.fromValues(minX, maxY, maxZ),\n        vec3.fromValues(maxX, maxY, maxZ),\n    ];\n    const normalVec = vec3.fromValues(normal[0], normal[1], normal[2]);\n    const originVec = vec3.fromValues(origin[0], origin[1], origin[2]);\n    const planeDistance = -vec3.dot(normalVec, originVec);\n    let initialSign = null;\n    for (const vertex of vertices) {\n        const distance = vec3.dot(normalVec, vertex) + planeDistance;\n        if (initialSign === null) {\n            initialSign = Math.sign(distance);\n        }\n        else if (Math.sign(distance) !== initialSign) {\n            return true;\n        }\n    }\n    return false;\n};\n","import { vec3 } from 'gl-matrix';\nimport { CONSTANTS, metaData } from '@cornerstonejs/core';\nconst { EPSILON } = CONSTANTS;\nconst PARALLEL_THRESHOLD = 1 - EPSILON;\nexport function filterAnnotationsWithinSamePlane(annotations, camera) {\n    const { viewPlaneNormal } = camera;\n    const annotationsWithParallelNormals = annotations.filter((td) => {\n        let annotationViewPlaneNormal = td.metadata.viewPlaneNormal;\n        if (!annotationViewPlaneNormal) {\n            const { referencedImageId } = td.metadata;\n            const { imageOrientationPatient } = metaData.get('imagePlaneModule', referencedImageId);\n            const rowCosineVec = vec3.fromValues(imageOrientationPatient[0], imageOrientationPatient[1], imageOrientationPatient[2]);\n            const colCosineVec = vec3.fromValues(imageOrientationPatient[3], imageOrientationPatient[4], imageOrientationPatient[5]);\n            annotationViewPlaneNormal = vec3.create();\n            vec3.cross(annotationViewPlaneNormal, rowCosineVec, colCosineVec);\n            td.metadata.viewPlaneNormal = annotationViewPlaneNormal;\n        }\n        const isParallel = Math.abs(vec3.dot(viewPlaneNormal, annotationViewPlaneNormal)) >\n            PARALLEL_THRESHOLD;\n        return annotationViewPlaneNormal && isParallel;\n    });\n    if (!annotationsWithParallelNormals.length) {\n        return [];\n    }\n    return annotationsWithParallelNormals;\n}\n","import filterAnnotationsWithinSlice from './filterAnnotationsWithinSlice';\nimport getWorldWidthAndHeightFromCorners from './getWorldWidthAndHeightFromCorners';\nimport filterAnnotationsForDisplay from './filterAnnotationsForDisplay';\nimport getPointInLineOfSightWithCriteria from './getPointInLineOfSightWithCriteria';\nimport { isPlaneIntersectingAABB } from './isPlaneIntersectingAABB';\nimport { filterAnnotationsWithinSamePlane } from './filterAnnotationsWithinPlane';\nexport default {\n    filterAnnotationsWithinSlice,\n    getWorldWidthAndHeightFromCorners,\n    filterAnnotationsForDisplay,\n    getPointInLineOfSightWithCriteria,\n    isPlaneIntersectingAABB,\n    filterAnnotationsWithinSamePlane,\n};\nexport { filterAnnotationsWithinSlice, getWorldWidthAndHeightFromCorners, filterAnnotationsForDisplay, getPointInLineOfSightWithCriteria, isPlaneIntersectingAABB, filterAnnotationsWithinSamePlane, };\n","import { expose } from 'comlink';\nimport { utilities } from '@cornerstonejs/core';\nimport vtkImageData from '@kitware/vtk.js/Common/DataModel/ImageData';\nimport vtkDataArray from '@kitware/vtk.js/Common/Core/DataArray';\nimport ICRPolySeg from '@icr/polyseg-wasm';\nimport vtkPlane from '@kitware/vtk.js/Common/DataModel/Plane';\nimport vtkPolyData from '@kitware/vtk.js/Common/DataModel/PolyData';\nimport vtkContourLoopExtraction from '@kitware/vtk.js/Filters/General/ContourLoopExtraction';\nimport vtkCutter from '@kitware/vtk.js/Filters/Core/Cutter';\nimport { getBoundingBoxAroundShapeWorld } from '../utilities/boundingBox';\nimport { containsPoint, getAABB, projectTo2D, } from '../utilities/math/polyline';\nimport { isPlaneIntersectingAABB } from '../utilities/planar';\nconst polySegConverters = {\n    polySeg: null,\n    polySegInitializing: false,\n    polySegInitializingPromise: null,\n    async initializePolySeg(progressCallback) {\n        if (this.polySegInitializing) {\n            await this.polySegInitializingPromise;\n            return;\n        }\n        if (this.polySeg?.instance) {\n            return;\n        }\n        this.polySegInitializing = true;\n        this.polySegInitializingPromise = new Promise((resolve) => {\n            this.polySeg = new ICRPolySeg();\n            this.polySeg\n                .initialize({\n                updateProgress: progressCallback,\n            })\n                .then(() => {\n                this.polySegInitializing = false;\n                resolve();\n            });\n        });\n        await this.polySegInitializingPromise;\n    },\n    async convertContourToSurface(args, ...callbacks) {\n        const { polylines, numPointsArray } = args;\n        const [progressCallback] = callbacks;\n        await this.initializePolySeg(progressCallback);\n        const results = await this.polySeg.instance.convertContourRoiToSurface(polylines, numPointsArray);\n        return results;\n    },\n    async convertLabelmapToSurface(args, ...callbacks) {\n        const [progressCallback] = callbacks;\n        await this.initializePolySeg(progressCallback);\n        const results = this.polySeg.instance.convertLabelmapToSurface(args.scalarData, args.dimensions, args.spacing, args.direction, args.origin, [args.segmentIndex]);\n        return results;\n    },\n    async convertContourToVolumeLabelmap(args, ...callbacks) {\n        const [progressCallback] = callbacks;\n        const polySeg = await new ICRPolySeg();\n        await polySeg.initialize({\n            updateProgress: progressCallback,\n        });\n        const { segmentIndices, scalarData, annotationUIDsInSegmentMap, dimensions, origin, direction, spacing, } = args;\n        const segmentationVoxelManager = utilities.VoxelManager.createScalarVolumeVoxelManager({\n            dimensions,\n            scalarData,\n        });\n        const imageData = vtkImageData.newInstance();\n        imageData.setDimensions(dimensions);\n        imageData.setOrigin(origin);\n        imageData.setDirection(direction);\n        imageData.setSpacing(spacing);\n        const scalarArray = vtkDataArray.newInstance({\n            name: 'Pixels',\n            numberOfComponents: 1,\n            values: scalarData,\n        });\n        imageData.getPointData().setScalars(scalarArray);\n        imageData.modified();\n        for (const index of segmentIndices) {\n            const annotations = annotationUIDsInSegmentMap.get(index);\n            for (const annotation of annotations) {\n                if (!annotation.polyline) {\n                    continue;\n                }\n                const { polyline, holesPolyline } = annotation;\n                const bounds = getBoundingBoxAroundShapeWorld(polyline);\n                const [iMin, jMin, kMin] = utilities.transformWorldToIndex(imageData, [\n                    bounds[0][0],\n                    bounds[1][0],\n                    bounds[2][0],\n                ]);\n                const [iMax, jMax, kMax] = utilities.transformWorldToIndex(imageData, [\n                    bounds[0][1],\n                    bounds[1][1],\n                    bounds[2][1],\n                ]);\n                const { projectedPolyline, sharedDimensionIndex } = projectTo2D(polyline);\n                const holes = holesPolyline?.map((hole) => {\n                    const { projectedPolyline: projectedHole } = projectTo2D(hole);\n                    return projectedHole;\n                });\n                const firstDim = (sharedDimensionIndex + 1) % 3;\n                const secondDim = (sharedDimensionIndex + 2) % 3;\n                const voxels = utilities.VoxelManager.createScalarVolumeVoxelManager({\n                    dimensions,\n                    scalarData,\n                });\n                voxels.forEach(({ pointIJK }) => {\n                    segmentationVoxelManager.setAtIJKPoint(pointIJK, index);\n                }, {\n                    imageData,\n                    isInObject: (pointLPS) => {\n                        const point2D = [pointLPS[firstDim], pointLPS[secondDim]];\n                        const isInside = containsPoint(projectedPolyline, point2D, {\n                            holes,\n                        });\n                        return isInside;\n                    },\n                    boundsIJK: [\n                        [iMin, iMax],\n                        [jMin, jMax],\n                        [kMin, kMax],\n                    ],\n                });\n            }\n        }\n        return segmentationVoxelManager.scalarData;\n    },\n    async convertContourToStackLabelmap(args, ...callbacks) {\n        const [progressCallback] = callbacks;\n        const polySeg = await new ICRPolySeg();\n        await polySeg.initialize({\n            updateProgress: progressCallback,\n        });\n        const { segmentationsInfo, annotationUIDsInSegmentMap, segmentIndices } = args;\n        const segmentationVoxelManagers = new Map();\n        segmentationsInfo.forEach((segmentationInfo, referencedImageId) => {\n            const { dimensions, scalarData, direction, spacing, origin } = segmentationInfo;\n            const manager = utilities.VoxelManager.createScalarVolumeVoxelManager({\n                dimensions,\n                scalarData,\n            });\n            const imageData = vtkImageData.newInstance();\n            imageData.setDimensions(dimensions);\n            imageData.setOrigin(origin);\n            imageData.setDirection(direction);\n            imageData.setSpacing(spacing);\n            const scalarArray = vtkDataArray.newInstance({\n                name: 'Pixels',\n                numberOfComponents: 1,\n                values: scalarData,\n            });\n            imageData.getPointData().setScalars(scalarArray);\n            imageData.modified();\n            segmentationVoxelManagers.set(referencedImageId, { manager, imageData });\n        });\n        for (const index of segmentIndices) {\n            const annotations = annotationUIDsInSegmentMap.get(index);\n            for (const annotation of annotations) {\n                if (!annotation.polyline) {\n                    continue;\n                }\n                const { polyline, holesPolyline, referencedImageId } = annotation;\n                const bounds = getBoundingBoxAroundShapeWorld(polyline);\n                const { manager: segmentationVoxelManager, imageData } = segmentationVoxelManagers.get(referencedImageId);\n                const [iMin, jMin, kMin] = utilities.transformWorldToIndex(imageData, [\n                    bounds[0][0],\n                    bounds[1][0],\n                    bounds[2][0],\n                ]);\n                const [iMax, jMax, kMax] = utilities.transformWorldToIndex(imageData, [\n                    bounds[0][1],\n                    bounds[1][1],\n                    bounds[2][1],\n                ]);\n                const { projectedPolyline, sharedDimensionIndex } = projectTo2D(polyline);\n                const holes = holesPolyline?.map((hole) => {\n                    const { projectedPolyline: projectedHole } = projectTo2D(hole);\n                    return projectedHole;\n                });\n                const firstDim = (sharedDimensionIndex + 1) % 3;\n                const secondDim = (sharedDimensionIndex + 2) % 3;\n                const voxels = utilities.VoxelManager.createImageVoxelManager({\n                    width: imageData.getDimensions()[0],\n                    height: imageData.getDimensions()[1],\n                    scalarData: imageData.getPointData().getScalars().getData(),\n                });\n                voxels.forEach(({ pointIJK }) => {\n                    segmentationVoxelManager.setAtIJKPoint(pointIJK, index);\n                }, {\n                    imageData,\n                    isInObject: (pointLPS) => {\n                        const point2D = [pointLPS[firstDim], pointLPS[secondDim]];\n                        const isInside = containsPoint(projectedPolyline, point2D, {\n                            holes,\n                        });\n                        return isInside;\n                    },\n                    boundsIJK: [\n                        [iMin, iMax],\n                        [jMin, jMax],\n                        [kMin, kMax],\n                    ],\n                });\n            }\n        }\n        segmentationsInfo.forEach((segmentationInfo, referencedImageId) => {\n            const { manager: segmentationVoxelManager } = segmentationVoxelManagers.get(referencedImageId);\n            segmentationInfo.scalarData = segmentationVoxelManager.scalarData;\n        });\n        return segmentationsInfo;\n    },\n    async convertSurfaceToVolumeLabelmap(args, ...callbacks) {\n        const [progressCallback] = callbacks;\n        await this.initializePolySeg(progressCallback);\n        const results = this.polySeg.instance.convertSurfaceToLabelmap(args.points, args.polys, args.dimensions, args.spacing, args.direction, args.origin);\n        return results;\n    },\n    async convertSurfacesToVolumeLabelmap(args, ...callbacks) {\n        const [progressCallback] = callbacks;\n        await this.initializePolySeg(progressCallback);\n        const { segmentsInfo } = args;\n        const promises = Array.from(segmentsInfo.keys()).map((segmentIndex) => {\n            const { points, polys } = segmentsInfo.get(segmentIndex);\n            const result = this.polySeg.instance.convertSurfaceToLabelmap(points, polys, args.dimensions, args.spacing, args.direction, args.origin);\n            return {\n                ...result,\n                segmentIndex,\n            };\n        });\n        const results = await Promise.all(promises);\n        const targetImageData = vtkImageData.newInstance();\n        targetImageData.setDimensions(args.dimensions);\n        targetImageData.setOrigin(args.origin);\n        targetImageData.setSpacing(args.spacing);\n        targetImageData.setDirection(args.direction);\n        const totalSize = args.dimensions[0] * args.dimensions[1] * args.dimensions[2];\n        const scalarArray = vtkDataArray.newInstance({\n            name: 'Pixels',\n            numberOfComponents: 1,\n            values: new Uint8Array(totalSize),\n        });\n        targetImageData.getPointData().setScalars(scalarArray);\n        targetImageData.modified();\n        const { dimensions } = args;\n        const scalarData = targetImageData.getPointData().getScalars().getData();\n        const segmentationVoxelManager = utilities.VoxelManager.createScalarVolumeVoxelManager({\n            dimensions,\n            scalarData,\n        });\n        const outputVolumesInfo = results.map((result) => {\n            const { data, dimensions, direction, origin, spacing } = result;\n            const volume = vtkImageData.newInstance();\n            volume.setDimensions(dimensions);\n            volume.setOrigin(origin);\n            volume.setSpacing(spacing);\n            volume.setDirection(direction);\n            const scalarArray = vtkDataArray.newInstance({\n                name: 'Pixels',\n                numberOfComponents: 1,\n                values: data,\n            });\n            volume.getPointData().setScalars(scalarArray);\n            volume.modified();\n            const voxelManager = utilities.VoxelManager.createScalarVolumeVoxelManager({\n                dimensions,\n                scalarData: data,\n            });\n            const extent = volume.getExtent();\n            return {\n                volume,\n                voxelManager,\n                extent,\n                scalarData: data,\n                segmentIndex: result.segmentIndex,\n            };\n        });\n        const voxels = utilities.VoxelManager.createScalarVolumeVoxelManager({\n            dimensions: targetImageData.getDimensions(),\n            scalarData: targetImageData.getPointData().getScalars().getData(),\n        });\n        voxels.forEach(({ pointIJK, pointLPS }) => {\n            try {\n                for (const volumeInfo of outputVolumesInfo) {\n                    const { volume, extent, voxelManager, segmentIndex } = volumeInfo;\n                    const index = volume.worldToIndex(pointLPS);\n                    if (index[0] < extent[0] ||\n                        index[0] > extent[1] ||\n                        index[1] < extent[2] ||\n                        index[1] > extent[3] ||\n                        index[2] < extent[4] ||\n                        index[2] > extent[5]) {\n                        continue;\n                    }\n                    const roundedIndex = index.map(Math.round);\n                    const value = voxelManager.getAtIJK(...roundedIndex);\n                    if (value > 0) {\n                        segmentationVoxelManager.setAtIJKPoint(pointIJK, segmentIndex);\n                        break;\n                    }\n                }\n            }\n            catch (error) {\n            }\n        }, { imageData: targetImageData });\n        return segmentationVoxelManager.scalarData;\n    },\n    getSurfacesAABBs({ surfacesInfo }) {\n        const aabbs = new Map();\n        for (const { points, id } of surfacesInfo) {\n            const aabb = getAABB(points, { numDimensions: 3 });\n            aabbs.set(id, aabb);\n        }\n        return aabbs;\n    },\n    cutSurfacesIntoPlanes({ planesInfo, surfacesInfo, surfacesAABB = new Map() }, progressCallback, updateCacheCallback) {\n        const numberOfPlanes = planesInfo.length;\n        const cutter = vtkCutter.newInstance();\n        const plane1 = vtkPlane.newInstance();\n        cutter.setCutFunction(plane1);\n        const surfacePolyData = vtkPolyData.newInstance();\n        try {\n            for (const [index, planeInfo] of planesInfo.entries()) {\n                const { sliceIndex, planes } = planeInfo;\n                const polyDataResults = new Map();\n                for (const polyDataInfo of surfacesInfo) {\n                    const { points, polys, id, segmentIndex } = polyDataInfo;\n                    const aabb3 = surfacesAABB.get(id) || getAABB(points, { numDimensions: 3 });\n                    if (!surfacesAABB.has(id)) {\n                        surfacesAABB.set(id, aabb3);\n                    }\n                    const { minX, minY, minZ, maxX, maxY, maxZ } = aabb3;\n                    const { origin, normal } = planes[0];\n                    if (!isPlaneIntersectingAABB(origin, normal, minX, minY, minZ, maxX, maxY, maxZ)) {\n                        continue;\n                    }\n                    surfacePolyData.getPoints().setData(points, 3);\n                    surfacePolyData.getPolys().setData(polys, 3);\n                    surfacePolyData.modified();\n                    cutter.setInputData(surfacePolyData);\n                    plane1.setOrigin(origin);\n                    plane1.setNormal(normal);\n                    try {\n                        cutter.update();\n                    }\n                    catch (e) {\n                        console.warn('Error during clipping', e);\n                        continue;\n                    }\n                    const polyData = cutter.getOutputData();\n                    const cutterOutput = polyData;\n                    cutterOutput.buildLinks();\n                    const loopExtraction = vtkContourLoopExtraction.newInstance();\n                    loopExtraction.setInputData(cutterOutput);\n                    const loopOutput = loopExtraction.getOutputData();\n                    if (polyData) {\n                        polyDataResults.set(segmentIndex, {\n                            points: loopOutput.getPoints().getData(),\n                            lines: loopOutput.getLines().getData(),\n                            numberOfCells: loopOutput.getLines().getNumberOfCells(),\n                            segmentIndex,\n                        });\n                    }\n                }\n                progressCallback({ progress: (index + 1) / numberOfPlanes });\n                updateCacheCallback({ sliceIndex, polyDataResults });\n            }\n        }\n        catch (e) {\n            console.warn('Error during processing', e);\n        }\n        finally {\n            surfacesInfo = null;\n            plane1.delete();\n        }\n    },\n};\nexpose(polySegConverters);\n","import { m as macro } from '../../macros2.js';\nimport vtkDataArray from './DataArray.js';\nimport { VtkDataTypes } from './DataArray/Constants.js';\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\nfunction extractCellSizes(cellArray) {\n  let currentIdx = 0;\n  return cellArray.filter((value, index) => {\n    if (index === currentIdx) {\n      currentIdx += value + 1;\n      return true;\n    }\n    return false;\n  });\n}\nfunction getNumberOfCells(cellArray) {\n  let cellId = 0;\n  for (let cellArrayIndex = 0; cellArrayIndex < cellArray.length;) {\n    cellArrayIndex += cellArray[cellArrayIndex] + 1;\n    cellId++;\n  }\n  return cellId;\n}\n\n// ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\nconst STATIC = {\n  extractCellSizes,\n  getNumberOfCells\n};\n\n// ----------------------------------------------------------------------------\n// vtkCellArray methods\n// ----------------------------------------------------------------------------\n\nfunction vtkCellArray(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkCellArray');\n  const superClass = {\n    ...publicAPI\n  };\n  publicAPI.getNumberOfCells = recompute => {\n    if (model.numberOfCells !== undefined && !recompute) {\n      return model.numberOfCells;\n    }\n    if (model.cellSizes) {\n      model.numberOfCells = model.cellSizes.length;\n    } else {\n      model.numberOfCells = getNumberOfCells(publicAPI.getData());\n    }\n    return model.numberOfCells;\n  };\n  publicAPI.getCellSizes = recompute => {\n    if (model.cellSizes !== undefined && !recompute) {\n      return model.cellSizes;\n    }\n    model.cellSizes = extractCellSizes(publicAPI.getData());\n    return model.cellSizes;\n  };\n\n  /**\n   * When `resize()` is being used, you then MUST use `insertNextCell()`.\n   */\n  publicAPI.resize = requestedNumTuples => {\n    const oldNumTuples = publicAPI.getNumberOfTuples();\n    superClass.resize(requestedNumTuples);\n    const newNumTuples = publicAPI.getNumberOfTuples();\n    if (newNumTuples < oldNumTuples) {\n      if (newNumTuples === 0) {\n        model.numberOfCells = 0;\n        model.cellSizes = [];\n      } else {\n        // We do not know how many cells are left.\n        // Set to undefined to ensure insertNextCell works correctly.\n        model.numberOfCells = undefined;\n        model.cellSizes = undefined;\n      }\n    }\n  };\n  publicAPI.setData = typedArray => {\n    superClass.setData(typedArray, 1);\n    model.numberOfCells = undefined;\n    model.cellSizes = undefined;\n  };\n  publicAPI.getCell = loc => {\n    let cellLoc = loc;\n    const numberOfPoints = model.values[cellLoc++];\n    return model.values.subarray(cellLoc, cellLoc + numberOfPoints);\n  };\n  publicAPI.insertNextCell = cellPointIds => {\n    const cellId = publicAPI.getNumberOfCells();\n    publicAPI.insertNextTuples([cellPointIds.length, ...cellPointIds]);\n    // By computing the number of cells earlier, we made sure that numberOfCells is defined\n    ++model.numberOfCells;\n    if (model.cellSizes != null) {\n      model.cellSizes.push(cellPointIds.length);\n    }\n    return cellId;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nfunction defaultValues(initialValues) {\n  return {\n    empty: true,\n    numberOfComponents: 1,\n    dataType: VtkDataTypes.UNSIGNED_INT,\n    ...initialValues\n  };\n}\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  vtkDataArray.extend(publicAPI, model, defaultValues(initialValues));\n  vtkCellArray(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkCellArray');\n\n// ----------------------------------------------------------------------------\n\nvar vtkCellArray$1 = {\n  newInstance,\n  extend,\n  ...STATIC\n};\n\nexport { STATIC, vtkCellArray$1 as default, extend, newInstance };\n","const DataTypeByteSize = {\n  Int8Array: 1,\n  Uint8Array: 1,\n  Uint8ClampedArray: 1,\n  Int16Array: 2,\n  Uint16Array: 2,\n  Int32Array: 4,\n  Uint32Array: 4,\n  Float32Array: 4,\n  Float64Array: 8\n};\nconst VtkDataTypes = {\n  VOID: '',\n  // not sure to know what that should be\n  CHAR: 'Int8Array',\n  SIGNED_CHAR: 'Int8Array',\n  UNSIGNED_CHAR: 'Uint8Array',\n  UNSIGNED_CHAR_CLAMPED: 'Uint8ClampedArray',\n  // should be used for VTK.js internal purpose only\n  SHORT: 'Int16Array',\n  UNSIGNED_SHORT: 'Uint16Array',\n  INT: 'Int32Array',\n  UNSIGNED_INT: 'Uint32Array',\n  FLOAT: 'Float32Array',\n  DOUBLE: 'Float64Array'\n};\nconst DefaultDataType = VtkDataTypes.FLOAT;\nvar Constants = {\n  DefaultDataType,\n  DataTypeByteSize,\n  VtkDataTypes\n};\n\nexport { DataTypeByteSize, DefaultDataType, VtkDataTypes, Constants as default };\n","const AttributeTypes = {\n  SCALARS: 0,\n  VECTORS: 1,\n  NORMALS: 2,\n  TCOORDS: 3,\n  TENSORS: 4,\n  GLOBALIDS: 5,\n  PEDIGREEIDS: 6,\n  EDGEFLAG: 7,\n  NUM_ATTRIBUTES: 8\n};\nconst AttributeLimitTypes = {\n  MAX: 0,\n  EXACT: 1,\n  NOLIMIT: 2\n};\nconst CellGhostTypes = {\n  DUPLICATECELL: 1,\n  // the cell is present on multiple processors\n  HIGHCONNECTIVITYCELL: 2,\n  // the cell has more neighbors than in a regular mesh\n  LOWCONNECTIVITYCELL: 4,\n  // the cell has less neighbors than in a regular mesh\n  REFINEDCELL: 8,\n  // other cells are present that refines it.\n  EXTERIORCELL: 16,\n  // the cell is on the exterior of the data set\n  HIDDENCELL: 32 // the cell is needed to maintain connectivity, but the data values should be ignored.\n};\n\nconst PointGhostTypes = {\n  DUPLICATEPOINT: 1,\n  // the cell is present on multiple processors\n  HIDDENPOINT: 2 // the point is needed to maintain connectivity, but the data values should be ignored.\n};\n\nconst AttributeCopyOperations = {\n  COPYTUPLE: 0,\n  INTERPOLATE: 1,\n  PASSDATA: 2,\n  ALLCOPY: 3 // all of the above\n};\n\nconst ghostArrayName = 'vtkGhostType';\nconst DesiredOutputPrecision = {\n  DEFAULT: 0,\n  // use the point type that does not truncate any data\n  SINGLE: 1,\n  // use Float32Array\n  DOUBLE: 2 // use Float64Array\n};\n\nvar Constants = {\n  AttributeCopyOperations,\n  AttributeLimitTypes,\n  AttributeTypes,\n  CellGhostTypes,\n  DesiredOutputPrecision,\n  PointGhostTypes,\n  ghostArrayName\n};\n\nexport { AttributeCopyOperations, AttributeLimitTypes, AttributeTypes, CellGhostTypes, DesiredOutputPrecision, PointGhostTypes, Constants as default, ghostArrayName };\n","import { m as macro } from '../../macros2.js';\nimport { b as roundVector, c as clampVector } from '../Core/Math/index.js';\nimport vtkBoundingBox from './BoundingBox.js';\nimport vtkDataSet from './DataSet.js';\nimport vtkStructuredData from './StructuredData.js';\nimport { StructuredType } from './StructuredData/Constants.js';\nimport { mat3, mat4, vec3 } from 'gl-matrix';\n\nconst {\n  vtkErrorMacro\n} = macro;\n\n// ----------------------------------------------------------------------------\n// vtkImageData methods\n// ----------------------------------------------------------------------------\n\nfunction vtkImageData(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkImageData');\n  publicAPI.setExtent = function () {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return false;\n    }\n    for (var _len = arguments.length, inExtent = new Array(_len), _key = 0; _key < _len; _key++) {\n      inExtent[_key] = arguments[_key];\n    }\n    const extentArray = inExtent.length === 1 ? inExtent[0] : inExtent;\n    if (extentArray.length !== 6) {\n      return false;\n    }\n    const changeDetected = model.extent.some((item, index) => item !== extentArray[index]);\n    if (changeDetected) {\n      model.extent = extentArray.slice();\n      model.dataDescription = vtkStructuredData.getDataDescriptionFromExtent(model.extent);\n      publicAPI.modified();\n    }\n    return changeDetected;\n  };\n  publicAPI.setDimensions = function () {\n    let i;\n    let j;\n    let k;\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return;\n    }\n    if (arguments.length === 1) {\n      const array = arguments.length <= 0 ? undefined : arguments[0];\n      i = array[0];\n      j = array[1];\n      k = array[2];\n    } else if (arguments.length === 3) {\n      i = arguments.length <= 0 ? undefined : arguments[0];\n      j = arguments.length <= 1 ? undefined : arguments[1];\n      k = arguments.length <= 2 ? undefined : arguments[2];\n    } else {\n      vtkErrorMacro('Bad dimension specification');\n      return;\n    }\n    publicAPI.setExtent(0, i - 1, 0, j - 1, 0, k - 1);\n  };\n  publicAPI.getDimensions = () => [model.extent[1] - model.extent[0] + 1, model.extent[3] - model.extent[2] + 1, model.extent[5] - model.extent[4] + 1];\n  publicAPI.getNumberOfCells = () => {\n    const dims = publicAPI.getDimensions();\n    let nCells = 1;\n    for (let i = 0; i < 3; i++) {\n      if (dims[i] === 0) {\n        return 0;\n      }\n      if (dims[i] > 1) {\n        nCells *= dims[i] - 1;\n      }\n    }\n    return nCells;\n  };\n  publicAPI.getNumberOfPoints = () => {\n    const dims = publicAPI.getDimensions();\n    return dims[0] * dims[1] * dims[2];\n  };\n  publicAPI.getPoint = index => {\n    const dims = publicAPI.getDimensions();\n    if (dims[0] === 0 || dims[1] === 0 || dims[2] === 0) {\n      vtkErrorMacro('Requesting a point from an empty image.');\n      return null;\n    }\n    const ijk = new Float64Array(3);\n    switch (model.dataDescription) {\n      case StructuredType.EMPTY:\n        return null;\n      case StructuredType.SINGLE_POINT:\n        break;\n      case StructuredType.X_LINE:\n        ijk[0] = index;\n        break;\n      case StructuredType.Y_LINE:\n        ijk[1] = index;\n        break;\n      case StructuredType.Z_LINE:\n        ijk[2] = index;\n        break;\n      case StructuredType.XY_PLANE:\n        ijk[0] = index % dims[0];\n        ijk[1] = index / dims[0];\n        break;\n      case StructuredType.YZ_PLANE:\n        ijk[1] = index % dims[1];\n        ijk[2] = index / dims[1];\n        break;\n      case StructuredType.XZ_PLANE:\n        ijk[0] = index % dims[0];\n        ijk[2] = index / dims[0];\n        break;\n      case StructuredType.XYZ_GRID:\n        ijk[0] = index % dims[0];\n        ijk[1] = index / dims[0] % dims[1];\n        ijk[2] = index / (dims[0] * dims[1]);\n        break;\n      default:\n        vtkErrorMacro('Invalid dataDescription');\n        break;\n    }\n    const coords = [0, 0, 0];\n    publicAPI.indexToWorld(ijk, coords);\n    return coords;\n  };\n\n  // vtkCell *GetCell(vtkIdType cellId) VTK_OVERRIDE;\n  // void GetCell(vtkIdType cellId, vtkGenericCell *cell) VTK_OVERRIDE;\n  // void GetCellBounds(vtkIdType cellId, double bounds[6]) VTK_OVERRIDE;\n  // virtual vtkIdType FindPoint(double x, double y, double z)\n  // {\n  //   return this->vtkDataSet::FindPoint(x, y, z);\n  // }\n  // vtkIdType FindPoint(double x[3]) VTK_OVERRIDE;\n  // vtkIdType FindCell(\n  //   double x[3], vtkCell *cell, vtkIdType cellId, double tol2,\n  //   int& subId, double pcoords[3], double *weights) VTK_OVERRIDE;\n  // vtkIdType FindCell(\n  //   double x[3], vtkCell *cell, vtkGenericCell *gencell,\n  //   vtkIdType cellId, double tol2, int& subId,\n  //   double pcoords[3], double *weights) VTK_OVERRIDE;\n  // vtkCell *FindAndGetCell(double x[3], vtkCell *cell, vtkIdType cellId,\n  //                                 double tol2, int& subId, double pcoords[3],\n  //                                 double *weights) VTK_OVERRIDE;\n  // int GetCellType(vtkIdType cellId) VTK_OVERRIDE;\n  // void GetCellPoints(vtkIdType cellId, vtkIdList *ptIds) VTK_OVERRIDE\n  //   {vtkStructuredData::GetCellPoints(cellId,ptIds,this->DataDescription,\n  //                                     this->GetDimensions());}\n  // void GetPointCells(vtkIdType ptId, vtkIdList *cellIds) VTK_OVERRIDE\n  //   {vtkStructuredData::GetPointCells(ptId,cellIds,this->GetDimensions());}\n  // void ComputeBounds() VTK_OVERRIDE;\n  // int GetMaxCellSize() VTK_OVERRIDE {return 8;}; //voxel is the largest\n\n  publicAPI.getBounds = () => publicAPI.extentToBounds(publicAPI.getSpatialExtent());\n  publicAPI.extentToBounds = ex => vtkBoundingBox.transformBounds(ex, model.indexToWorld);\n  publicAPI.getSpatialExtent = () => vtkBoundingBox.inflate([...model.extent], 0.5);\n\n  // Internal, shouldn't need to call this manually.\n  publicAPI.computeTransforms = () => {\n    mat4.fromTranslation(model.indexToWorld, model.origin);\n    model.indexToWorld[0] = model.direction[0];\n    model.indexToWorld[1] = model.direction[1];\n    model.indexToWorld[2] = model.direction[2];\n    model.indexToWorld[4] = model.direction[3];\n    model.indexToWorld[5] = model.direction[4];\n    model.indexToWorld[6] = model.direction[5];\n    model.indexToWorld[8] = model.direction[6];\n    model.indexToWorld[9] = model.direction[7];\n    model.indexToWorld[10] = model.direction[8];\n    mat4.scale(model.indexToWorld, model.indexToWorld, model.spacing);\n    mat4.invert(model.worldToIndex, model.indexToWorld);\n  };\n  publicAPI.indexToWorld = function (ain) {\n    let aout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    vec3.transformMat4(aout, ain, model.indexToWorld);\n    return aout;\n  };\n  publicAPI.indexToWorldVec3 = publicAPI.indexToWorld;\n  publicAPI.worldToIndex = function (ain) {\n    let aout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    vec3.transformMat4(aout, ain, model.worldToIndex);\n    return aout;\n  };\n  publicAPI.worldToIndexVec3 = publicAPI.worldToIndex;\n  publicAPI.indexToWorldBounds = function (bin) {\n    let bout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    return vtkBoundingBox.transformBounds(bin, model.indexToWorld, bout);\n  };\n  publicAPI.worldToIndexBounds = function (bin) {\n    let bout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    return vtkBoundingBox.transformBounds(bin, model.worldToIndex, bout);\n  };\n\n  // Make sure the transform is correct\n  publicAPI.onModified(publicAPI.computeTransforms);\n  publicAPI.computeTransforms();\n  publicAPI.getCenter = () => vtkBoundingBox.getCenter(publicAPI.getBounds());\n  publicAPI.computeHistogram = function (worldBounds) {\n    let voxelFunction = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    const bounds = [0, 0, 0, 0, 0, 0];\n    publicAPI.worldToIndexBounds(worldBounds, bounds);\n    const point1 = [0, 0, 0];\n    const point2 = [0, 0, 0];\n    vtkBoundingBox.computeCornerPoints(bounds, point1, point2);\n    roundVector(point1, point1);\n    roundVector(point2, point2);\n    const dimensions = publicAPI.getDimensions();\n    clampVector(point1, [0, 0, 0], [dimensions[0] - 1, dimensions[1] - 1, dimensions[2] - 1], point1);\n    clampVector(point2, [0, 0, 0], [dimensions[0] - 1, dimensions[1] - 1, dimensions[2] - 1], point2);\n    const yStride = dimensions[0];\n    const zStride = dimensions[0] * dimensions[1];\n    const pixels = publicAPI.getPointData().getScalars().getData();\n    let maximum = -Infinity;\n    let minimum = Infinity;\n    let sumOfSquares = 0;\n    let isum = 0;\n    let inum = 0;\n    for (let z = point1[2]; z <= point2[2]; z++) {\n      for (let y = point1[1]; y <= point2[1]; y++) {\n        let index = point1[0] + y * yStride + z * zStride;\n        for (let x = point1[0]; x <= point2[0]; x++) {\n          if (!voxelFunction || voxelFunction([x, y, z], bounds)) {\n            const pixel = pixels[index];\n            if (pixel > maximum) maximum = pixel;\n            if (pixel < minimum) minimum = pixel;\n            sumOfSquares += pixel * pixel;\n            isum += pixel;\n            inum += 1;\n          }\n          ++index;\n        }\n      }\n    }\n    const average = inum > 0 ? isum / inum : 0;\n    const variance = inum ? Math.abs(sumOfSquares / inum - average * average) : 0;\n    const sigma = Math.sqrt(variance);\n    return {\n      minimum,\n      maximum,\n      average,\n      variance,\n      sigma,\n      count: inum\n    };\n  };\n\n  // TODO: use the unimplemented `vtkDataSetAttributes` for scalar length, that is currently also a TODO (GetNumberOfComponents).\n  // Scalar data could be tuples for color information?\n  publicAPI.computeIncrements = function (extent) {\n    let numberOfComponents = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    const increments = [];\n    let incr = numberOfComponents;\n\n    // Calculate array increment offsets\n    // similar to c++ vtkImageData::ComputeIncrements\n    for (let idx = 0; idx < 3; ++idx) {\n      increments[idx] = incr;\n      incr *= extent[idx * 2 + 1] - extent[idx * 2] + 1;\n    }\n    return increments;\n  };\n\n  /**\n   * @param {Number[]} index the localized `[i,j,k]` pixel array position. Float values will be rounded.\n   * @return {Number} the corresponding flattened index in the scalar array\n   */\n  publicAPI.computeOffsetIndex = _ref => {\n    let [i, j, k] = _ref;\n    const extent = publicAPI.getExtent();\n    const numberOfComponents = publicAPI.getPointData().getScalars().getNumberOfComponents();\n    const increments = publicAPI.computeIncrements(extent, numberOfComponents);\n    // Use the array increments to find the pixel index\n    // similar to c++ vtkImageData::GetArrayPointer\n    // Math.floor to catch \"practically 0\" e^-15 scenarios.\n    return Math.floor((Math.round(i) - extent[0]) * increments[0] + (Math.round(j) - extent[2]) * increments[1] + (Math.round(k) - extent[4]) * increments[2]);\n  };\n\n  /**\n   * @param {Number[]} xyz the [x,y,z] Array in world coordinates\n   * @return {Number|NaN} the corresponding pixel's index in the scalar array\n   */\n  publicAPI.getOffsetIndexFromWorld = xyz => {\n    const extent = publicAPI.getExtent();\n    const index = publicAPI.worldToIndex(xyz);\n\n    // Confirm indexed i,j,k coords are within the bounds of the volume\n    for (let idx = 0; idx < 3; ++idx) {\n      if (index[idx] < extent[idx * 2] || index[idx] > extent[idx * 2 + 1]) {\n        vtkErrorMacro(`GetScalarPointer: Pixel ${index} is not in memory. Current extent = ${extent}`);\n        return NaN;\n      }\n    }\n\n    // Assumed the index here is within 0 <-> scalarData.length, but doesn't hurt to check upstream\n    return publicAPI.computeOffsetIndex(index);\n  };\n  /**\n   * @param {Number[]} xyz the [x,y,z] Array in world coordinates\n   * @param {Number?} comp the scalar component index for multi-component scalars\n   * @return {Number|NaN} the corresponding pixel's scalar value\n   */\n  publicAPI.getScalarValueFromWorld = function (xyz) {\n    let comp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    const numberOfComponents = publicAPI.getPointData().getScalars().getNumberOfComponents();\n    if (comp < 0 || comp >= numberOfComponents) {\n      vtkErrorMacro(`GetScalarPointer: Scalar Component ${comp} is not within bounds. Current Scalar numberOfComponents: ${numberOfComponents}`);\n      return NaN;\n    }\n    const offsetIndex = publicAPI.getOffsetIndexFromWorld(xyz);\n    if (Number.isNaN(offsetIndex)) {\n      // VTK Error Macro will have been tripped already, no need to do it again,\n      return offsetIndex;\n    }\n    return publicAPI.getPointData().getScalars().getComponent(offsetIndex, comp);\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  direction: null,\n  // a mat3\n  indexToWorld: null,\n  // a mat4\n  worldToIndex: null,\n  // a mat4\n  spacing: [1.0, 1.0, 1.0],\n  origin: [0.0, 0.0, 0.0],\n  extent: [0, -1, 0, -1, 0, -1],\n  dataDescription: StructuredType.EMPTY\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkDataSet.extend(publicAPI, model, initialValues);\n  if (!model.direction) {\n    model.direction = mat3.identity(new Float64Array(9));\n  } else if (Array.isArray(model.direction)) {\n    model.direction = new Float64Array(model.direction.slice(0, 9));\n  }\n  model.indexToWorld = new Float64Array(16);\n  model.worldToIndex = new Float64Array(16);\n\n  // Set/Get methods\n  macro.get(publicAPI, model, ['indexToWorld', 'worldToIndex']);\n  macro.setGetArray(publicAPI, model, ['origin', 'spacing'], 3);\n  macro.setGetArray(publicAPI, model, ['direction'], 9);\n  macro.getArray(publicAPI, model, ['extent'], 6);\n\n  // Object specific methods\n  vtkImageData(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkImageData');\n\n// ----------------------------------------------------------------------------\n\nvar vtkImageData$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkImageData$1 as default, extend, newInstance };\n","/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nconst proxyMarker = Symbol(\"Comlink.proxy\");\nconst createEndpoint = Symbol(\"Comlink.endpoint\");\nconst releaseProxy = Symbol(\"Comlink.releaseProxy\");\nconst finalizer = Symbol(\"Comlink.finalizer\");\nconst throwMarker = Symbol(\"Comlink.thrown\");\nconst isObject = (val) => (typeof val === \"object\" && val !== null) || typeof val === \"function\";\n/**\n * Internal transfer handle to handle objects marked to proxy.\n */\nconst proxyTransferHandler = {\n    canHandle: (val) => isObject(val) && val[proxyMarker],\n    serialize(obj) {\n        const { port1, port2 } = new MessageChannel();\n        expose(obj, port1);\n        return [port2, [port2]];\n    },\n    deserialize(port) {\n        port.start();\n        return wrap(port);\n    },\n};\n/**\n * Internal transfer handler to handle thrown exceptions.\n */\nconst throwTransferHandler = {\n    canHandle: (value) => isObject(value) && throwMarker in value,\n    serialize({ value }) {\n        let serialized;\n        if (value instanceof Error) {\n            serialized = {\n                isError: true,\n                value: {\n                    message: value.message,\n                    name: value.name,\n                    stack: value.stack,\n                },\n            };\n        }\n        else {\n            serialized = { isError: false, value };\n        }\n        return [serialized, []];\n    },\n    deserialize(serialized) {\n        if (serialized.isError) {\n            throw Object.assign(new Error(serialized.value.message), serialized.value);\n        }\n        throw serialized.value;\n    },\n};\n/**\n * Allows customizing the serialization of certain values.\n */\nconst transferHandlers = new Map([\n    [\"proxy\", proxyTransferHandler],\n    [\"throw\", throwTransferHandler],\n]);\nfunction isAllowedOrigin(allowedOrigins, origin) {\n    for (const allowedOrigin of allowedOrigins) {\n        if (origin === allowedOrigin || allowedOrigin === \"*\") {\n            return true;\n        }\n        if (allowedOrigin instanceof RegExp && allowedOrigin.test(origin)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction expose(obj, ep = globalThis, allowedOrigins = [\"*\"]) {\n    ep.addEventListener(\"message\", function callback(ev) {\n        if (!ev || !ev.data) {\n            return;\n        }\n        if (!isAllowedOrigin(allowedOrigins, ev.origin)) {\n            console.warn(`Invalid origin '${ev.origin}' for comlink proxy`);\n            return;\n        }\n        const { id, type, path } = Object.assign({ path: [] }, ev.data);\n        const argumentList = (ev.data.argumentList || []).map(fromWireValue);\n        let returnValue;\n        try {\n            const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\n            const rawValue = path.reduce((obj, prop) => obj[prop], obj);\n            switch (type) {\n                case \"GET\" /* MessageType.GET */:\n                    {\n                        returnValue = rawValue;\n                    }\n                    break;\n                case \"SET\" /* MessageType.SET */:\n                    {\n                        parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\n                        returnValue = true;\n                    }\n                    break;\n                case \"APPLY\" /* MessageType.APPLY */:\n                    {\n                        returnValue = rawValue.apply(parent, argumentList);\n                    }\n                    break;\n                case \"CONSTRUCT\" /* MessageType.CONSTRUCT */:\n                    {\n                        const value = new rawValue(...argumentList);\n                        returnValue = proxy(value);\n                    }\n                    break;\n                case \"ENDPOINT\" /* MessageType.ENDPOINT */:\n                    {\n                        const { port1, port2 } = new MessageChannel();\n                        expose(obj, port2);\n                        returnValue = transfer(port1, [port1]);\n                    }\n                    break;\n                case \"RELEASE\" /* MessageType.RELEASE */:\n                    {\n                        returnValue = undefined;\n                    }\n                    break;\n                default:\n                    return;\n            }\n        }\n        catch (value) {\n            returnValue = { value, [throwMarker]: 0 };\n        }\n        Promise.resolve(returnValue)\n            .catch((value) => {\n            return { value, [throwMarker]: 0 };\n        })\n            .then((returnValue) => {\n            const [wireValue, transferables] = toWireValue(returnValue);\n            ep.postMessage(Object.assign(Object.assign({}, wireValue), { id }), transferables);\n            if (type === \"RELEASE\" /* MessageType.RELEASE */) {\n                // detach and deactive after sending release response above.\n                ep.removeEventListener(\"message\", callback);\n                closeEndPoint(ep);\n                if (finalizer in obj && typeof obj[finalizer] === \"function\") {\n                    obj[finalizer]();\n                }\n            }\n        })\n            .catch((error) => {\n            // Send Serialization Error To Caller\n            const [wireValue, transferables] = toWireValue({\n                value: new TypeError(\"Unserializable return value\"),\n                [throwMarker]: 0,\n            });\n            ep.postMessage(Object.assign(Object.assign({}, wireValue), { id }), transferables);\n        });\n    });\n    if (ep.start) {\n        ep.start();\n    }\n}\nfunction isMessagePort(endpoint) {\n    return endpoint.constructor.name === \"MessagePort\";\n}\nfunction closeEndPoint(endpoint) {\n    if (isMessagePort(endpoint))\n        endpoint.close();\n}\nfunction wrap(ep, target) {\n    return createProxy(ep, [], target);\n}\nfunction throwIfProxyReleased(isReleased) {\n    if (isReleased) {\n        throw new Error(\"Proxy has been released and is not useable\");\n    }\n}\nfunction releaseEndpoint(ep) {\n    return requestResponseMessage(ep, {\n        type: \"RELEASE\" /* MessageType.RELEASE */,\n    }).then(() => {\n        closeEndPoint(ep);\n    });\n}\nconst proxyCounter = new WeakMap();\nconst proxyFinalizers = \"FinalizationRegistry\" in globalThis &&\n    new FinalizationRegistry((ep) => {\n        const newCount = (proxyCounter.get(ep) || 0) - 1;\n        proxyCounter.set(ep, newCount);\n        if (newCount === 0) {\n            releaseEndpoint(ep);\n        }\n    });\nfunction registerProxy(proxy, ep) {\n    const newCount = (proxyCounter.get(ep) || 0) + 1;\n    proxyCounter.set(ep, newCount);\n    if (proxyFinalizers) {\n        proxyFinalizers.register(proxy, ep, proxy);\n    }\n}\nfunction unregisterProxy(proxy) {\n    if (proxyFinalizers) {\n        proxyFinalizers.unregister(proxy);\n    }\n}\nfunction createProxy(ep, path = [], target = function () { }) {\n    let isProxyReleased = false;\n    const proxy = new Proxy(target, {\n        get(_target, prop) {\n            throwIfProxyReleased(isProxyReleased);\n            if (prop === releaseProxy) {\n                return () => {\n                    unregisterProxy(proxy);\n                    releaseEndpoint(ep);\n                    isProxyReleased = true;\n                };\n            }\n            if (prop === \"then\") {\n                if (path.length === 0) {\n                    return { then: () => proxy };\n                }\n                const r = requestResponseMessage(ep, {\n                    type: \"GET\" /* MessageType.GET */,\n                    path: path.map((p) => p.toString()),\n                }).then(fromWireValue);\n                return r.then.bind(r);\n            }\n            return createProxy(ep, [...path, prop]);\n        },\n        set(_target, prop, rawValue) {\n            throwIfProxyReleased(isProxyReleased);\n            // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\n            // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\n            const [value, transferables] = toWireValue(rawValue);\n            return requestResponseMessage(ep, {\n                type: \"SET\" /* MessageType.SET */,\n                path: [...path, prop].map((p) => p.toString()),\n                value,\n            }, transferables).then(fromWireValue);\n        },\n        apply(_target, _thisArg, rawArgumentList) {\n            throwIfProxyReleased(isProxyReleased);\n            const last = path[path.length - 1];\n            if (last === createEndpoint) {\n                return requestResponseMessage(ep, {\n                    type: \"ENDPOINT\" /* MessageType.ENDPOINT */,\n                }).then(fromWireValue);\n            }\n            // We just pretend that `bind()` didn’t happen.\n            if (last === \"bind\") {\n                return createProxy(ep, path.slice(0, -1));\n            }\n            const [argumentList, transferables] = processArguments(rawArgumentList);\n            return requestResponseMessage(ep, {\n                type: \"APPLY\" /* MessageType.APPLY */,\n                path: path.map((p) => p.toString()),\n                argumentList,\n            }, transferables).then(fromWireValue);\n        },\n        construct(_target, rawArgumentList) {\n            throwIfProxyReleased(isProxyReleased);\n            const [argumentList, transferables] = processArguments(rawArgumentList);\n            return requestResponseMessage(ep, {\n                type: \"CONSTRUCT\" /* MessageType.CONSTRUCT */,\n                path: path.map((p) => p.toString()),\n                argumentList,\n            }, transferables).then(fromWireValue);\n        },\n    });\n    registerProxy(proxy, ep);\n    return proxy;\n}\nfunction myFlat(arr) {\n    return Array.prototype.concat.apply([], arr);\n}\nfunction processArguments(argumentList) {\n    const processed = argumentList.map(toWireValue);\n    return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];\n}\nconst transferCache = new WeakMap();\nfunction transfer(obj, transfers) {\n    transferCache.set(obj, transfers);\n    return obj;\n}\nfunction proxy(obj) {\n    return Object.assign(obj, { [proxyMarker]: true });\n}\nfunction windowEndpoint(w, context = globalThis, targetOrigin = \"*\") {\n    return {\n        postMessage: (msg, transferables) => w.postMessage(msg, targetOrigin, transferables),\n        addEventListener: context.addEventListener.bind(context),\n        removeEventListener: context.removeEventListener.bind(context),\n    };\n}\nfunction toWireValue(value) {\n    for (const [name, handler] of transferHandlers) {\n        if (handler.canHandle(value)) {\n            const [serializedValue, transferables] = handler.serialize(value);\n            return [\n                {\n                    type: \"HANDLER\" /* WireValueType.HANDLER */,\n                    name,\n                    value: serializedValue,\n                },\n                transferables,\n            ];\n        }\n    }\n    return [\n        {\n            type: \"RAW\" /* WireValueType.RAW */,\n            value,\n        },\n        transferCache.get(value) || [],\n    ];\n}\nfunction fromWireValue(value) {\n    switch (value.type) {\n        case \"HANDLER\" /* WireValueType.HANDLER */:\n            return transferHandlers.get(value.name).deserialize(value.value);\n        case \"RAW\" /* WireValueType.RAW */:\n            return value.value;\n    }\n}\nfunction requestResponseMessage(ep, msg, transfers) {\n    return new Promise((resolve) => {\n        const id = generateUUID();\n        ep.addEventListener(\"message\", function l(ev) {\n            if (!ev.data || !ev.data.id || ev.data.id !== id) {\n                return;\n            }\n            ep.removeEventListener(\"message\", l);\n            resolve(ev.data);\n        });\n        if (ep.start) {\n            ep.start();\n        }\n        ep.postMessage(Object.assign({ id }, msg), transfers);\n    });\n}\nfunction generateUUID() {\n    return new Array(4)\n        .fill(0)\n        .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\n        .join(\"-\");\n}\n\nexport { createEndpoint, expose, finalizer, proxy, proxyMarker, releaseProxy, transfer, transferHandlers, windowEndpoint, wrap };\n//# sourceMappingURL=comlink.mjs.map\n"],"names":["enabledElement","invalidated","image","canvas","start","stats","lastGetPixelDataTime","lastStoredPixelDataToCanvasImageDataTime","lastPutImageDataTime","lastRenderTime","lastLutGenerateTime","render","viewport","colormap","color","renderTimeInMs","invalid","needsRedraw","scale","transform","displayedArea","translate","width","height","angle","rotation","rotate","Math","PI","widthScale","heightScale","brhc","x","tlhc","y","presentationSizeMode","rowPixelSpacing","columnPixelSpacing","verticalScale","horizontalScale","min","translation","undefined","hflip","vflip","modality","Error","scaleFactor","voi","isPreScaled","windowWidth","windowCenter","Array","isArray","invert","pixelReplication","modalityLUT","voiLUT","columns","rows","BlendMode","BlendModes","COMPOSITE_BLEND","MAXIMUM_INTENSITY_BLEND","MINIMUM_INTENSITY_BLEND","AVERAGE_INTENSITY_BLEND","GeometryType","CalibrationTypes","GenerateImageType","getEnabledElement","element","viewportUid","renderingEngineUid","dataset","getEnabledElementByIds","viewportId","renderingEngineId","renderingEngine","hasBeenDestroyed","getViewport","FrameOfReferenceUID","getFrameOfReferenceUID","csRenderInitialized","defaultConfig","gpuTier","tier","isMobile","rendering","useCPURendering","preferSizeOverAccuracy","strictZSpacingForVolumeViewport","peerImport","moduleId","config","isIOS","test","navigator","platform","maxTouchPoints","includes","canRenderFloatTextures","getShouldUseCPURendering","isCornerstoneInitialized","getConfiguration","imageLoaders","unknownImageLoader","loadImageFromImageLoader","imageId","options","cachedImageLoadObject","getImageLoadObject","handleImageLoadPromise","promise","scheme","split","loader","imageLoadObject","imagePromise","Promise","resolve","then","voxelManager","numberOfComponents","createImageVoxelManager","scalarData","getPixelData","getScalarData","imageFrame","pixelData","ensureVoxelManager","IMAGE_LOADED","catch","error","errorDetails","IMAGE_LOAD_FAILED","loadImage","priority","requestType","loadAndCacheImage","putImageLoadObject","volumeLoaders","unknownVolumeLoader","loadVolumeFromVolumeLoader","volumeId","colonIndex","indexOf","substring","volumeLoadObject","volume","VOLUME_LOADED","errorObject","VOLUME_LOADED_FAILED","loadVolume","imageIds","getVolumeLoadObject","async","createAndCacheVolume","putVolumeLoadObject","getVolumeLoaderSchemes","Object","keys","getUnknownVolumeLoaderSchema","name","ProgressiveIterator","constructor","this","as","iterator","v","add","e","reject","reason","done","nextValue","waiting","rejectReason","getRecent","Symbol","asyncIterator","forEach","callback","errorCallback","index","value","console","warn","generate","processFunction","bind","nextPromise","i","donePromise","getNextPromise","getDonePromise","RLEVoxelMap","depth","Map","jMultiple","kMultiple","defaultValue","pixelDataConstructor","Uint8Array","get","j","rle","getRLE","getRun","k","runIndex","set","row","end","rleIndex","findIndex","rle1","rle0","oldValue","rleInsert","isAfter","insertIndex","rlePrev","rleNext","splice","nextnext","length","iEnd","clear","fill","rowOffset","comp","isImageActor","actorEntry","actorIsA","actorType","actor","isA","applyPreset","preset","colorTransferArray","colorTransfer","map","parseFloat","shiftRange","Infinity","max","center","getShiftRange","cfun","normColorTransferValuePoints","r","g","b","push","points","range","rescaled","removeAllPoints","addRGBPoint","applyPointsToRGBFunction","getProperty","setRGBTransferFunction","scalarOpacityArray","scalarOpacity","ofun","normPoints","opacity","pwf","addPoint","applyPointsToPiecewiseFunction","property","setScalarOpacity","gradientMinValue","gradientMinOpacity","gradientMaxValue","gradientMaxOpacity","gradientOpacity","setUseGradientOpacity","setGradientOpacityMinimumValue","setGradientOpacityMinimumOpacity","setGradientOpacityMaximumValue","setGradientOpacityMaximumOpacity","interpolation","setInterpolationTypeToFastLinear","setShade","shade","ambient","diffuse","specular","specularPower","setAmbient","setDiffuse","setSpecular","setSpecularPower","renderingEngineAndViewportIds","renderingEnginesArray","viewports","viewportIds","id","getRenderingEngineAndViewportsContainingVolume","renderViewports","clamp","_colormaps","registerColormap","Name","getColormap","getColormapNames","from","findMatchingColormap","rgbPoints","colormapsVTK","rgbPresetNames","presetName","getPresetByName","colormapsCS3D","colormapName","matchedColormap","concat","find","RGBPoints","presetRGBPoints","slice","opacityPoints","getScalarOpacity","getDataPointer","createLinearRGBTransferFunction","voiRange","lower","upper","createSigmoidRGBTransferFunction","approximationNodes","table","_","flatMap","wc","ww","log","logit","buildFunctionFromArray","values","decimate","list","interleave","offset","interleaveIndices","deepClone","obj","structuredClone","clonedObj","key","prototype","hasOwnProperty","call","getClosestImageId","imageVolume","worldPos","viewPlaneNormal","direction","spacing","kVector","dotProducts","abs","EPSILON","halfSpacingInNormalDirection","imageIdForTool","imagePositionPatient","dir","dot","camera","getCamera","spacingInNormalDirection","focalPoint","getActors","a","referencedId","uid","volumeActor","sliceRange","current","numberOfSlices","round","imageIndex","floor","getMinMax","storedPixelData","storedPixel","numPixels","getScalingParameters","modalityLutModule","generalSeriesModule","scalingParameters","rescaleSlope","rescaleIntercept","suvFactor","suvbw","suvbsa","suvlbm","SMALL_EPSILON","isOne","isUnit","off","isOrthonormal","getSliceRange","imageData","getMapper","getInputData","corners","getDirection","dx","dy","dz","getDimensions","it","indexToWorld","buildFromDegree","identity","rotateFromDirections","pt","apply","transformedFocalPoint","currentSlice","minX","maxX","getSpacingInNormalDirection","iVector","jVector","projectedSpacing","EPSILON_PART","isPrimaryVolume","startsWith","str","starts","getTargetVolumeAndSpacingInNormalDir","targetId","useSlabThickness","volumeActors","actorUID","imageVolumes","va","getVolume","filter","iv","targetVolumeId","imageVolumeIndex","getSpacingInNormal","smallest","hasPrimaryVolume","slabThickness","getProperties","renderingEngines","targetViewports","filteredViewports","getVolumeViewports","vp","hasVolumeId","getVoiFromSigmoidRGBTransferFunction","cfunRange","getRange","getTable","cfunDomain","y1","logy1","x1","y2","logy2","x2","getVolumeActorCorners","bounds","extentToBounds","getExtent","getVolumeId","prefix","getActor","numScrollSteps","floatingStepNumber","currentStepIndex","sliceRangeInfo","hasFloatScalingParameters","some","Number","isInteger","hasNaNValues","input","isNaN","imageIdToURI","retrieveConfigurationState","IMAGE_RETRIEVE_CONFIGURATION","imageRetrieveMetadataProvider","payload","type","queries","query","addProvider","EventListenerPhases","TargetEventListeners","target","_eventListeners","_children","_target","isEmpty","size","addEventListener","dotIndex","namespaceToken","childElementEventListener","_addEventListener","removeEventListener","delete","_removeEventListener","reset","entries","namespace","child","_unregisterAllEvents","listenersMap","listenerPhase","capture","Capture","Bubble","registeredPhases","None","callbackItem","newListenerPhase","_unregisterAllListeners","listener","eventPhases","currentPhase","useCapture","MultiTargetEventListenerManager","_targetsEventListeners","eventListeners","targetEventListeners","scaleRGBTransferFunction","rgbTransferFunction","scalingFactor","getSize","nodeValue1","getNodeValue","setNodeValue","LAST_RUNTIME_ID","GLOBAL_CONTEXT","DEFAULT_MAX","DEFAULT_SEPARATOR","getRuntimeId","context","separator","symbol","idComponents","defineProperty","carry","n","getNextRuntimeId","join","state","imageURI","isOpposite","v1","v2","tolerance","indexWithinDimensions","dimensions","targetViewport","getRenderingEngine","sameVolumesViewports","targetActors","vpActors","every","vpActor","preScale","scaled","renderToCanvasGPU","imageOrVolume","viewportOptions","displayArea","imageArea","HTMLCanvasElement","isVolume","document","createElement","devicePixelRatio","window","originalWidth","originalHeight","style","visibility","position","body","appendChild","uniqueId","setAttribute","temporaryCanvas","getOrCreateCanvas","RenderingEngine","viewportInput","ViewportType","ORTHOGRAPHIC","STACK","defaultOptions","suppressEvents","enableElement","elementRendered","viewReference","onImageRendered","eventDetail","useViewRef","setViewReference","getContext","drawImage","origin","canvasToWorld","topRight","bottomLeft","Events","IMAGE_RENDERED","setTimeout","disableElement","querySelectorAll","remove","thicknessMm","setVolumes","renderImageObject","resetCamera","setProperties","minPixelValue","maxPixelValue","renderToCanvasCPU","_renderingEngineId","_viewportOptions","getDefaultViewport","renderingTools","calculateTransform","drawImageSync","loadImageToCanvas","RequestType","Thumbnail","thumbnail","imageAspect","baseViewportOptions","renderFn","successCallback","metaData","useRGBA","cache","imageLoadPoolManager","addRequest","imageIdIndex","worldCoords","imagePlaneModule","columnCosines","rowCosines","newOrigin","sub","imageToWorldCoords","imageCoords","imageCoordsInWorld","getViewportsWithImageURI","getViewports","hasImageURI","getClosestStackImageIndexForPoint","point","minimalDistance","getImageIds","currentImageIdIndex","getCurrentImageIdIndex","getDistance","planeMetadata","targetImagePlane","rowVec","colVec","planeNormal","getPlaneMetadata","plane","planar","planeEquation","planeDistanceToPoint","closestStack","distance","higherImageIds","lowerImageIds","calculateMinimalDistanceForStackViewport","getCurrentVolumeViewportSlice","canvasWidth","canvasHeight","getCanvas","sliceToIndexMatrix","indexToSliceMatrix","getSliceViewInfo","ijkOriginPoint","transformCanvasToIJK","ijkRowPoint","ijkColPoint","ijkRowVec","ijkColVec","ijkSliceVec","maxIJKRowVec","maxIJKColVec","getImageData","sliceViewInfo","getSliceData","spatialRegistrationMetadataProvider","viewportId1","viewportId2","entryId","entryIdReverse","viewport1","viewport2","imageId1","getSliceIndex","imageId2","imagePlaneModule1","toString","imagePlaneModule2","imageOrientationPatient","iop2","imagePositionPatient1","imagePositionPatient2","mat","getViewportImageCornersInWorld","ratio","topRightCanvas","bottomRightCanvas","bottomLeftCanvas","topLeftWorld","topRightWorld","bottomRightWorld","bottomLeftWorld","topLeftImage","worldToIndex","topRightImage","bottomRightImage","bottomLeftImage","topLeftImageWorld","_isInBounds","topRightImageWorld","bottomRightImageWorld","bottomLeftImageWorld","_getStackViewportImageCorners","imageCoord","PointsManager","configuration","_dimensions","_length","_byteSize","growSize","initialSize","itemLength","array","ArrayBuffer","data","Float32Array","func","getPoint","dimensionLength","subarray","getPointArray","grow","additionalSize","newSize","newArray","newData","reverse","midLength","indexStart","indexEnd","dimension","valueStart","f","mapData","p","toXYZ","xyz","z","fromXYZ","create3","subselect","count","selected","create2","StackViewport","getCornerstoneImage","isValidVolume","imageId0","seriesInstanceUID","pixelSpacing","frameOfReferenceUID","baseMetadata","validVolume","isEqual","videoUIDs","Set","isVideoTransferSyntax","uidOrUids","has","convertStackToVolumeViewport","uuidv4","prevViewPresentation","getViewPresentation","prevViewReference","getViewReference","background","orientation","load","volumeViewport","volumeViewportNewVolumeHandler","VOLUME_VIEWPORT_NEW_VOLUME","setViewPresentation","convertVolumeToStackViewport","ImageVolume","prevView","stackViewport","setStack","roundToPrecision","roundNumber","precision","absValue","fixedPrecision","toFixed","convertToGrayscale","isRGBA","isRGB","newScalarData","destOffset","increment","getRandomSampleFromArray","clonedArray","shuffleArray","random","componentToHex","c","hex","rgbToHex","hexToRgb","result","exec","parseInt","deepEqual","obj1","obj2","JSON","stringify","debug","groupBy","reduce","rv","test4DTag","IPPGroups","value_getter","frame_groups","first_frame_value_set","positions","frame_value_set","frames","frame_value","setEquals","getTagValue","tag","getPhilipsPrivateBValue","InlineBinary","value_bytes","atob","ary_buf","dv","DataView","setUint8","charCodeAt","getSiemensPrivateBValue","getGEPrivateBValue","set_a","set_b","getPetFrameReferenceTime","moduleInfo","positionGroups","ippMetadata","item","frame_count","getIPPGroups","imageIdGroups","splittingTag","tags","fncList2","sort","timePoints","isDynamicVolume","scaleArray","arrayLength","clip","val","low","high","delta","scrollSlabs","getVolumeViewportScrollInfo","newFocalPoint","newPosition","snapFocalPointToSlice","setCamera","desiredStepIndex","VolumeScrollEventDetail","currentImageId","getCurrentImageId","triggerEvent","eventTarget","VOLUME_VIEWPORT_SCROLL_OUT_OF_BOUNDS","VOLUME_VIEWPORT_SCROLL","scrollVolume","eventData","STACK_SCROLL_OUT_OF_BOUNDS","scroll","debounceLoading","loop","jumpToSlice","currentImageIndex","getTargetImageIdIndex","getNumberOfSlices","_getImageSliceData","imageIndexToJump","lastSliceIndex","_getImageIndexToJump","getViewportModality","metadata","Modality","_getViewportModality","invertRgbTransferFunction","areNumbersEqualWithTolerance","num1","num2","isNumberType","isNumberArrayLike","arr1","arr2","areArraysEqual","negative","isEqualNegative","isEqualAbs","makeVolumeMetadata","pixelRepresentation","bitsAllocated","bitsStored","highBit","photometricInterpretation","samplesPerPixel","voiLut","voiLutModule","voiLUTFunction","BitsAllocated","BitsStored","SamplesPerPixel","HighBit","PhotometricInterpretation","PixelRepresentation","ImageOrientationPatient","PixelSpacing","Columns","Rows","VOILUTFunction","SeriesInstanceUID","linePlaneIntersection","p0","p1","x0","y0","z0","z1","A","B","C","D","t","normal","normalized","sqrt","threePlaneIntersection","firstPlane","secondPlane","thirdPlane","A1","B1","C1","D1","A2","B2","C2","D2","A3","B3","C3","D3","m0","m1","m2","m3","signed","numerator","sign","pointInShapeCallback","pointInShapeFn","boundsIJK","returnPoints","iMin","iMax","jMin","jMax","kMin","kMax","numComps","getPointData","getScalars","getData","scanAxisNormal","getSpacing","rowSpacing","columnSpacing","scanAxisSpacing","worldPosStart","rowStep","columnStep","scanAxisStep","xMultiple","yMultiple","zMultiple","pointsInShape","currentPos","startPosJ","startPosI","pointIJK","pointLPS","deltaFrames","posDiffFromFocalPoint","steps","frameIndex","newSlicePosFromMin","sortImageIdsAndGetSpacing","referenceImagePositionPatient","rowCosineVec","colCosineVec","refIppVec","usingWadoUri","sortedImageIds","zSpacing","positionVector","prefetchedImageIds","metadataForMiddleImage","distanceBetweenFirstAndMiddleImages","distanceImagePairs","numImages","sliceThickness","spacingBetweenSlices","getTransferFunctionNodes","transferFunction","setTransferFunctionNodes","nodes","node","canvasPoint","vtkImageData","worldPoint","transformIndexToWorld","voxelPos","transformWorldToIndex","updateVTKImageDataWithCornerstoneImage","sourceImageData","rgba","newPixelData","modified","toWindowLevel","toLowHighRange","DEFAULT_SETTINGS","RUNTIME_SETTINGS","OBJECT_SETTINGS_MAP","DICTIONARY","Settings","base","dictionary","create","seal","unset","endsWith","deleteCount","deleteAll","iterate","extend","import","root","isPlainObject","dump","deepSet","assert","subject","getRuntimeSettings","getDefaultSettings","subfield","defaultSettings","settingObj","setting","runtimeSettings","getObjectSettings","settings","objectSettingsMap","WeakMap","extendRuntimeSettings","references","last","previous","isValidKey","record","failCount","field","setAll","WeakSet","getPrototypeOf","subKey","subContext","subContextValue","_scriptDir","currentScript","src","ICRPolySegApp","readyPromiseResolve","readyPromiseReject","Module","readBinary","moduleOverrides","assign","arguments_","thisProgram","quit_","status","toThrow","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","scriptDirectory","self","location","href","substr","replace","lastIndexOf","url","xhr","XMLHttpRequest","open","responseType","send","response","out","err","wasmBinary","POINTER_SIZE","wasmMemory","noExitRuntime","WebAssembly","abort","EXITSTATUS","buffer","HEAP8","HEAPU8","HEAP16","HEAPU16","HEAP32","HEAPU32","HEAPF32","HEAPF64","ABORT","UTF8Decoder","TextDecoder","UTF8ArrayToString","heapOrArray","idx","maxBytesToRead","endIdx","endPtr","decode","u0","u1","u2","String","fromCharCode","ch","UTF8ToString","ptr","stringToUTF8Array","heap","outIdx","maxBytesToWrite","startIdx","u","lengthBytesUTF8","len","updateGlobalBufferAndViews","buf","Int8Array","Int16Array","Int32Array","Uint16Array","Uint32Array","Float64Array","wasmTable","__ATPRERUN__","__ATINIT__","__ATMAIN__","__ATPOSTRUN__","runDependencies","runDependencyWatcher","dependenciesFulfilled","what","RuntimeError","wasmBinaryFile","path","dataURIPrefix","isDataURI","filename","getBinary","file","ASM_CONSTS","$0","updateProgress","ExitStatus","message","callRuntimeCallbacks","callbacks","shift","ExceptionInfo","excPtr","set_type","get_type","set_destructor","destructor","get_destructor","set_refcount","refcount","set_caught","caught","get_caught","set_rethrown","rethrown","get_rethrown","init","set_adjusted_ptr","add_ref","release_ref","prev","adjustedPtr","get_adjusted_ptr","get_exception_ptr","___cxa_is_pointer_type","adjusted","SYSCALLS","varargs","getStr","structRegistrations","runDestructors","destructors","pop","del","simpleReadValueFromPointer","pointer","awaitingDependencies","registeredTypes","typeDependencies","char_0","char_9","makeLegalFunctionName","createNamedFunction","Function","extendError","baseErrorType","errorName","errorClass","stack","InternalError","throwInternalError","whenDependentTypesAreResolved","myTypes","dependentTypes","getTypeConverters","onComplete","typeConverters","myTypeConverters","registerType","unregisteredTypes","registered","dt","getShiftFromSize","TypeError","embind_charCodes","readLatin1String","ret","BindingError","throwBindingError","rawType","registeredInstance","ignoreDuplicateRegistrations","cb","emval_free_list","emval_handle_array","__emval_decref","handle","count_emval_handles","get_first_emval","Emval","toValue","toHandle","floatReadValueFromPointer","new_","argumentList","dummy","exposePublicSymbol","numArguments","overloadTable","proto","methodName","humanName","prevFunc","arguments","argCount","ensureOverloadTable","wasmTableMirror","getWasmTableEntry","funcPtr","dynCall","sig","args","dynCallLegacy","embind__requireFunction","signature","rawFunction","argCache","fp","UnboundTypeError","getTypeName","___getTypeName","_free","integerReadValueFromPointer","UTF16Decoder","UTF16ToString","maxIdx","codeUnit","stringToUTF16","outPtr","startPtr","numCharsToWrite","lengthBytesUTF16","UTF32ToString","utf32","stringToUTF32","lengthBytesUTF32","requireRegisteredType","impl","emval_symbols","getStringOrSymbol","address","emval_methodCallers","emval_get_global","globalThis","emval_registeredMethods","emval_newers","readEmAsmArgsArray","runEmAsmFunction","code","sigPtr","argbuf","readEmAsmArgs","emscripten_realloc_buffer","byteLength","ENV","getEnvStrings","strings","env","languages","printCharBuffers","printChar","stream","curr","__isLeapYear","year","__MONTH_DAYS_LEAP","__MONTH_DAYS_REGULAR","_strftime","s","maxsize","format","tm","tm_zone","date","tm_sec","tm_min","tm_hour","tm_mday","tm_mon","tm_year","tm_wday","tm_yday","tm_isdst","tm_gmtoff","pattern","EXPANSION_RULES_1","rule","RegExp","WEEKDAYS","MONTHS","leadingSomething","digits","character","leadingNulls","compareByDay","date1","date2","sgn","compare","getFullYear","getMonth","getDate","getFirstWeekStartDate","janFourth","getDay","Date","getWeekBasedYear","thisDate","days","newDate","getTime","leap","currentMonth","daysInCurrentMonth","setDate","setMonth","setFullYear","__addDays","janFourthThisYear","janFourthNextYear","firstWeekStartThisYear","firstWeekStartNextYear","EXPANSION_RULES_2","twelveHour","sum","__arraySum","jan1","dec31","ahead","stringy","dontAddNull","u8array","numBytesWritten","bytes","writeArrayToMemory","_proc_exit","codes","embind_init_charCodes","calledRun","asmLibraryArg","fd","dirp","dirfd","flags","bufsize","structType","reg","rawConstructor","rawDestructor","fieldRecords","fields","getterReturnType","setterArgumentType","fieldTypes","fieldName","getter","getterContext","setter","setterContext","read","write","o","destructorFunction","primitiveType","minRange","maxRange","trueValue","falseValue","wt","rawArgTypesAddr","rawInvoker","fn","argTypes","firstElement","heap32VectorToArray","types","unboundTypes","seen","visit","throwUnboundTypeError","invokerArgsArray","replacePublicSymbol","classType","cppInvokerFunc","cppTargetFunc","isClassMethodFunc","needsDestructorStack","returns","argsList","argsListWired","invokerFnBody","dtorStack","args1","args2","paramName","craftInvokerFunction","fromWireType","bitshift","isUnsignedType","dataTypeIndex","TA","decodeMemoryView","stdStringIsUTF8","decodeStartPtr","currentBytePtr","stringSegment","valueIsOfTypeString","Uint8ClampedArray","_malloc","charCode","charSize","decodeString","encodeString","getHeap","lengthBytesUTF","HEAP","constructorSignature","destructorSignature","getterSignature","setterSignature","isVoid","returnType","destructorsRef","rd","caller","emval_lookupTypes","retType","signatureName","returnId","params","functionBody","invokerFunction","newer","craftEmvalAllocator","arg","dest","num","copyWithin","requestedSize","multiple","oldSize","maxHeapSize","cutDown","overGrownHeapSize","__environ","environ_buf","bufSize","string","writeAsciiToMemory","penviron_count","penviron_buf_size","iov","iovcnt","pnum","offset_low","offset_high","whence","newOffset","loc","info","receiveInstance","instance","module","exports","unshift","clearInterval","removeRunDependency","receiveInstantiationResult","instantiateArrayBuffer","receiver","fetch","credentials","binary","instantiate","instantiateStreaming","createWasm","callMain","entryFunction","handleException","run","doRun","shouldRunNow","postRun","preRun","runCaller","ready","ICRPolySeg","_instance","initialize","locateFile","Dir","Forward","Backward","visited","DEFAULT_VALUES","publicAPI","model","initialValues","m","algo","requestData","inData","outData","output","extractContours","traverseLoop","pd","startLineId","startPtId","loopPoints","lineId","lastPtId","terminated","numInserted","cellPointIds","getCellPoints","ptId","lineCell","getPointCells","loops","inLines","getLines","getPoints","setData","li","getNumberOfCells","outLines","resize","insertNextCell","vtkContourLoopExtraction","newInstance","calculateBoundingBox","isWorld","xMin","xMax","yMin","yMax","zMin","zMax","is3D","getBoundingBoxAroundShapeWorld","clipBounds","isClosed","polyline","numPolylinePoints","distFirstToLastPoints","p2","z2","closed","numIntersections","holes","hole","shouldClose","maxSegmentIndex","maxY","minY","intersects","xIntersection","getAABB","polylineToUse","numDimensions","currentPolyline","totalPoints","minZ","maxZ","PolylinePointType","PolylinePointPosition","PolylinePointDirection","sharedDimensionIndex","testPoints","utilities","points2D","firstDim","secondDim","projectedPolyline","isPlaneIntersectingAABB","vertices","normalVec","originVec","planeDistance","initialSign","vertex","polySegConverters","polySeg","polySegInitializing","polySegInitializingPromise","initializePolySeg","progressCallback","convertContourToSurface","polylines","numPointsArray","convertContourRoiToSurface","convertLabelmapToSurface","segmentIndex","convertContourToVolumeLabelmap","segmentIndices","annotationUIDsInSegmentMap","segmentationVoxelManager","VoxelManager","createScalarVolumeVoxelManager","setDimensions","setOrigin","setDirection","setSpacing","scalarArray","setScalars","annotations","annotation","holesPolyline","projectedHole","setAtIJKPoint","isInObject","point2D","convertContourToStackLabelmap","segmentationsInfo","segmentationVoxelManagers","segmentationInfo","referencedImageId","manager","convertSurfaceToVolumeLabelmap","convertSurfaceToLabelmap","polys","convertSurfacesToVolumeLabelmap","segmentsInfo","promises","results","all","targetImageData","totalSize","outputVolumesInfo","extent","volumeInfo","roundedIndex","getAtIJK","getSurfacesAABBs","surfacesInfo","aabbs","aabb","cutSurfacesIntoPlanes","planesInfo","surfacesAABB","updateCacheCallback","numberOfPlanes","cutter","plane1","setCutFunction","surfacePolyData","planeInfo","sliceIndex","planes","polyDataResults","polyDataInfo","aabb3","getPolys","setInputData","setNormal","update","polyData","getOutputData","cutterOutput","buildLinks","loopExtraction","loopOutput","lines","numberOfCells","progress","extractCellSizes","cellArray","currentIdx","cellId","cellArrayIndex","STATIC","empty","dataType","UNSIGNED_INT","defaultValues","classHierarchy","superClass","recompute","cellSizes","getCellSizes","requestedNumTuples","oldNumTuples","getNumberOfTuples","newNumTuples","typedArray","getCell","cellLoc","numberOfPoints","insertNextTuples","vtkCellArray","vtkCellArray$1","VtkDataTypes","VOID","CHAR","SIGNED_CHAR","UNSIGNED_CHAR","UNSIGNED_CHAR_CLAMPED","SHORT","UNSIGNED_SHORT","INT","FLOAT","DOUBLE","Constants","DefaultDataType","DataTypeByteSize","AttributeCopyOperations","COPYTUPLE","INTERPOLATE","PASSDATA","ALLCOPY","AttributeLimitTypes","MAX","EXACT","NOLIMIT","AttributeTypes","SCALARS","VECTORS","NORMALS","TCOORDS","TENSORS","GLOBALIDS","PEDIGREEIDS","EDGEFLAG","NUM_ATTRIBUTES","CellGhostTypes","DUPLICATECELL","HIGHCONNECTIVITYCELL","LOWCONNECTIVITYCELL","REFINEDCELL","EXTERIORCELL","HIDDENCELL","DesiredOutputPrecision","DEFAULT","SINGLE","PointGhostTypes","DUPLICATEPOINT","HIDDENPOINT","ghostArrayName","vtkErrorMacro","dataDescription","EMPTY","setGetArray","getArray","setExtent","deleted","_len","inExtent","_key","extentArray","changeDetected","dims","nCells","getNumberOfPoints","ijk","SINGLE_POINT","X_LINE","Y_LINE","Z_LINE","XY_PLANE","YZ_PLANE","XZ_PLANE","XYZ_GRID","coords","getBounds","getSpatialExtent","ex","computeTransforms","ain","aout","indexToWorldVec3","worldToIndexVec3","indexToWorldBounds","bin","bout","worldToIndexBounds","onModified","getCenter","computeHistogram","worldBounds","voxelFunction","point1","point2","yStride","zStride","pixels","maximum","minimum","sumOfSquares","isum","inum","pixel","average","variance","sigma","computeIncrements","increments","incr","computeOffsetIndex","_ref","getNumberOfComponents","getOffsetIndexFromWorld","NaN","getScalarValueFromWorld","offsetIndex","getComponent","vtkImageData$1","proxyMarker","createEndpoint","releaseProxy","finalizer","throwMarker","isObject","transferHandlers","canHandle","serialize","port1","port2","MessageChannel","expose","deserialize","port","createProxy","serialized","isError","ep","allowedOrigins","ev","allowedOrigin","isAllowedOrigin","fromWireValue","returnValue","parent","prop","rawValue","proxy","transfers","transferCache","transfer","wireValue","transferables","toWireValue","postMessage","closeEndPoint","endpoint","isMessagePort","close","throwIfProxyReleased","isReleased","releaseEndpoint","requestResponseMessage","proxyCounter","proxyFinalizers","FinalizationRegistry","newCount","isProxyReleased","Proxy","unregister","unregisterProxy","_thisArg","rawArgumentList","processArguments","construct","register","registerProxy","processed","arr","handler","serializedValue","msg","MAX_SAFE_INTEGER","l"],"sourceRoot":""}