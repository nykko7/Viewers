{"version":3,"file":"5594.bundle.645b0472d5cc309a1a8d.js","mappings":"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","sources":["webpack:///../../../node_modules/classcat/index.js","webpack:///../../../node_modules/@xyflow/system/dist/esm/index.js","webpack:///../../../node_modules/zustand/esm/traditional.mjs","webpack:///../../../node_modules/zustand/esm/shallow.mjs","webpack:///../../../node_modules/@xyflow/react/dist/esm/index.js"],"sourcesContent":["export default function cc(names) {\n  if (typeof names === \"string\" || typeof names === \"number\") return \"\" + names\n\n  let out = \"\"\n\n  if (Array.isArray(names)) {\n    for (let i = 0, tmp; i < names.length; i++) {\n      if ((tmp = cc(names[i])) !== \"\") {\n        out += (out && \" \") + tmp\n      }\n    }\n  } else {\n    for (let k in names) {\n      if (names[k]) out += (out && \" \") + k\n    }\n  }\n\n  return out\n}\n","import { drag } from 'd3-drag';\nimport { select, pointer } from 'd3-selection';\nimport { zoom, zoomIdentity, zoomTransform } from 'd3-zoom';\n\nconst errorMessages = {\n    error001: () => '[React Flow]: Seems like you have not used zustand provider as an ancestor. Help: https://reactflow.dev/error#001',\n    error002: () => \"It looks like you've created a new nodeTypes or edgeTypes object. If this wasn't on purpose please define the nodeTypes/edgeTypes outside of the component or memoize them.\",\n    error003: (nodeType) => `Node type \"${nodeType}\" not found. Using fallback type \"default\".`,\n    error004: () => 'The React Flow parent container needs a width and a height to render the graph.',\n    error005: () => 'Only child nodes can use a parent extent.',\n    error006: () => \"Can't create edge. An edge needs a source and a target.\",\n    error007: (id) => `The old edge with id=${id} does not exist.`,\n    error009: (type) => `Marker type \"${type}\" doesn't exist.`,\n    error008: (handleType, { id, sourceHandle, targetHandle }) => `Couldn't create edge for ${handleType} handle id: \"${handleType === 'source' ? sourceHandle : targetHandle}\", edge id: ${id}.`,\n    error010: () => 'Handle: No node id found. Make sure to only use a Handle inside a custom Node.',\n    error011: (edgeType) => `Edge type \"${edgeType}\" not found. Using fallback type \"default\".`,\n    error012: (id) => `Node with id \"${id}\" does not exist, it may have been removed. This can happen when a node is deleted before the \"onNodeClick\" handler is called.`,\n    error013: (lib = 'react') => `It seems that you haven't loaded the styles. Please import '@xyflow/${lib}/dist/style.css' or base.css to make sure everything is working properly.`,\n};\nconst infiniteExtent = [\n    [Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY],\n    [Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY],\n];\nconst elementSelectionKeys = ['Enter', ' ', 'Escape'];\n\nvar ConnectionMode;\n(function (ConnectionMode) {\n    ConnectionMode[\"Strict\"] = \"strict\";\n    ConnectionMode[\"Loose\"] = \"loose\";\n})(ConnectionMode || (ConnectionMode = {}));\nvar PanOnScrollMode;\n(function (PanOnScrollMode) {\n    PanOnScrollMode[\"Free\"] = \"free\";\n    PanOnScrollMode[\"Vertical\"] = \"vertical\";\n    PanOnScrollMode[\"Horizontal\"] = \"horizontal\";\n})(PanOnScrollMode || (PanOnScrollMode = {}));\nvar SelectionMode;\n(function (SelectionMode) {\n    SelectionMode[\"Partial\"] = \"partial\";\n    SelectionMode[\"Full\"] = \"full\";\n})(SelectionMode || (SelectionMode = {}));\nconst initialConnection = {\n    inProgress: false,\n    isValid: null,\n    from: null,\n    fromHandle: null,\n    fromPosition: null,\n    fromNode: null,\n    to: null,\n    toHandle: null,\n    toPosition: null,\n    toNode: null,\n};\n\nvar ConnectionLineType;\n(function (ConnectionLineType) {\n    ConnectionLineType[\"Bezier\"] = \"default\";\n    ConnectionLineType[\"Straight\"] = \"straight\";\n    ConnectionLineType[\"Step\"] = \"step\";\n    ConnectionLineType[\"SmoothStep\"] = \"smoothstep\";\n    ConnectionLineType[\"SimpleBezier\"] = \"simplebezier\";\n})(ConnectionLineType || (ConnectionLineType = {}));\nvar MarkerType;\n(function (MarkerType) {\n    MarkerType[\"Arrow\"] = \"arrow\";\n    MarkerType[\"ArrowClosed\"] = \"arrowclosed\";\n})(MarkerType || (MarkerType = {}));\n\nvar Position;\n(function (Position) {\n    Position[\"Left\"] = \"left\";\n    Position[\"Top\"] = \"top\";\n    Position[\"Right\"] = \"right\";\n    Position[\"Bottom\"] = \"bottom\";\n})(Position || (Position = {}));\nconst oppositePosition = {\n    [Position.Left]: Position.Right,\n    [Position.Right]: Position.Left,\n    [Position.Top]: Position.Bottom,\n    [Position.Bottom]: Position.Top,\n};\n\n/**\n * @internal\n */\nfunction areConnectionMapsEqual(a, b) {\n    if (!a && !b) {\n        return true;\n    }\n    if (!a || !b || a.size !== b.size) {\n        return false;\n    }\n    if (!a.size && !b.size) {\n        return true;\n    }\n    for (const key of a.keys()) {\n        if (!b.has(key)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * We call the callback for all connections in a that are not in b\n *\n * @internal\n */\nfunction handleConnectionChange(a, b, cb) {\n    if (!cb) {\n        return;\n    }\n    const diff = [];\n    a.forEach((connection, key) => {\n        if (!b?.has(key)) {\n            diff.push(connection);\n        }\n    });\n    if (diff.length) {\n        cb(diff);\n    }\n}\nfunction getConnectionStatus(isValid) {\n    return isValid === null ? null : isValid ? 'valid' : 'invalid';\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n * Test whether an object is useable as an Edge\n * @public\n * @remarks In TypeScript this is a type guard that will narrow the type of whatever you pass in to Edge if it returns true\n * @param element - The element to test\n * @returns A boolean indicating whether the element is an Edge\n */\nconst isEdgeBase = (element) => 'id' in element && 'source' in element && 'target' in element;\n/**\n * Test whether an object is useable as a Node\n * @public\n * @remarks In TypeScript this is a type guard that will narrow the type of whatever you pass in to Node if it returns true\n * @param element - The element to test\n * @returns A boolean indicating whether the element is an Node\n */\nconst isNodeBase = (element) => 'id' in element && 'position' in element && !('source' in element) && !('target' in element);\nconst isInternalNodeBase = (element) => 'id' in element && 'internals' in element && !('source' in element) && !('target' in element);\n/**\n * Pass in a node, and get connected nodes where edge.source === node.id\n * @public\n * @param node - The node to get the connected nodes from\n * @param nodes - The array of all nodes\n * @param edges - The array of all edges\n * @returns An array of nodes that are connected over eges where the source is the given node\n */\nconst getOutgoers = (node, nodes, edges) => {\n    if (!node.id) {\n        return [];\n    }\n    const outgoerIds = new Set();\n    edges.forEach((edge) => {\n        if (edge.source === node.id) {\n            outgoerIds.add(edge.target);\n        }\n    });\n    return nodes.filter((n) => outgoerIds.has(n.id));\n};\n/**\n * Pass in a node, and get connected nodes where edge.target === node.id\n * @public\n * @param node - The node to get the connected nodes from\n * @param nodes - The array of all nodes\n * @param edges - The array of all edges\n * @returns An array of nodes that are connected over eges where the target is the given node\n */\nconst getIncomers = (node, nodes, edges) => {\n    if (!node.id) {\n        return [];\n    }\n    const incomersIds = new Set();\n    edges.forEach((edge) => {\n        if (edge.target === node.id) {\n            incomersIds.add(edge.source);\n        }\n    });\n    return nodes.filter((n) => incomersIds.has(n.id));\n};\nconst getNodePositionWithOrigin = (node, nodeOrigin = [0, 0]) => {\n    const { width, height } = getNodeDimensions(node);\n    const origin = node.origin ?? nodeOrigin;\n    const offsetX = width * origin[0];\n    const offsetY = height * origin[1];\n    return {\n        x: node.position.x - offsetX,\n        y: node.position.y - offsetY,\n    };\n};\n/**\n * Internal function for determining a bounding box that contains all given nodes in an array.\n * @public\n * @remarks Useful when combined with {@link getViewportForBounds} to calculate the correct transform to fit the given nodes in a viewport.\n * @param nodes - Nodes to calculate the bounds for\n * @param params.nodeOrigin - Origin of the nodes: [0, 0] - top left, [0.5, 0.5] - center\n * @returns Bounding box enclosing all nodes\n */\nconst getNodesBounds = (nodes, params = { nodeOrigin: [0, 0], nodeLookup: undefined }) => {\n    if (process.env.NODE_ENV === 'development' && !params.nodeLookup) {\n        console.warn('Please use `getNodesBounds` from `useReactFlow`/`useSvelteFlow` hook to ensure correct values for sub flows. If not possible, you have to provide a nodeLookup to support sub flows.');\n    }\n    if (nodes.length === 0) {\n        return { x: 0, y: 0, width: 0, height: 0 };\n    }\n    const box = nodes.reduce((currBox, nodeOrId) => {\n        const isId = typeof nodeOrId === 'string';\n        let currentNode = !params.nodeLookup && !isId ? nodeOrId : undefined;\n        if (params.nodeLookup) {\n            currentNode = isId\n                ? params.nodeLookup.get(nodeOrId)\n                : !isInternalNodeBase(nodeOrId)\n                    ? params.nodeLookup.get(nodeOrId.id)\n                    : nodeOrId;\n        }\n        const nodeBox = currentNode ? nodeToBox(currentNode, params.nodeOrigin) : { x: 0, y: 0, x2: 0, y2: 0 };\n        return getBoundsOfBoxes(currBox, nodeBox);\n    }, { x: Infinity, y: Infinity, x2: -Infinity, y2: -Infinity });\n    return boxToRect(box);\n};\n/**\n * Determines a bounding box that contains all given nodes in an array\n * @internal\n */\nconst getInternalNodesBounds = (nodeLookup, params = {}) => {\n    if (nodeLookup.size === 0) {\n        return { x: 0, y: 0, width: 0, height: 0 };\n    }\n    let box = { x: Infinity, y: Infinity, x2: -Infinity, y2: -Infinity };\n    nodeLookup.forEach((node) => {\n        if (params.filter === undefined || params.filter(node)) {\n            const nodeBox = nodeToBox(node);\n            box = getBoundsOfBoxes(box, nodeBox);\n        }\n    });\n    return boxToRect(box);\n};\nconst getNodesInside = (nodes, rect, [tx, ty, tScale] = [0, 0, 1], partially = false, \n// set excludeNonSelectableNodes if you want to pay attention to the nodes \"selectable\" attribute\nexcludeNonSelectableNodes = false) => {\n    const paneRect = {\n        ...pointToRendererPoint(rect, [tx, ty, tScale]),\n        width: rect.width / tScale,\n        height: rect.height / tScale,\n    };\n    const visibleNodes = [];\n    for (const node of nodes.values()) {\n        const { measured, selectable = true, hidden = false } = node;\n        if ((excludeNonSelectableNodes && !selectable) || hidden) {\n            continue;\n        }\n        const width = measured.width ?? node.width ?? node.initialWidth ?? null;\n        const height = measured.height ?? node.height ?? node.initialHeight ?? null;\n        const overlappingArea = getOverlappingArea(paneRect, nodeToRect(node));\n        const area = (width ?? 0) * (height ?? 0);\n        const partiallyVisible = partially && overlappingArea > 0;\n        const forceInitialRender = !node.internals.handleBounds;\n        const isVisible = forceInitialRender || partiallyVisible || overlappingArea >= area;\n        if (isVisible || node.dragging) {\n            visibleNodes.push(node);\n        }\n    }\n    return visibleNodes;\n};\n/**\n * Get all connecting edges for a given set of nodes\n * @param nodes - Nodes you want to get the connected edges for\n * @param edges - All edges\n * @returns Array of edges that connect any of the given nodes with each other\n */\nconst getConnectedEdges = (nodes, edges) => {\n    const nodeIds = new Set();\n    nodes.forEach((node) => {\n        nodeIds.add(node.id);\n    });\n    return edges.filter((edge) => nodeIds.has(edge.source) || nodeIds.has(edge.target));\n};\nfunction getFitViewNodes(nodeLookup, options) {\n    const fitViewNodes = new Map();\n    const optionNodeIds = options?.nodes ? new Set(options.nodes.map((node) => node.id)) : null;\n    nodeLookup.forEach((n) => {\n        const isVisible = n.measured.width && n.measured.height && (options?.includeHiddenNodes || !n.hidden);\n        if (isVisible && (!optionNodeIds || optionNodeIds.has(n.id))) {\n            fitViewNodes.set(n.id, n);\n        }\n    });\n    return fitViewNodes;\n}\nasync function fitView({ nodes, width, height, panZoom, minZoom, maxZoom }, options) {\n    if (nodes.size === 0) {\n        return Promise.resolve(false);\n    }\n    const bounds = getInternalNodesBounds(nodes);\n    const viewport = getViewportForBounds(bounds, width, height, options?.minZoom ?? minZoom, options?.maxZoom ?? maxZoom, options?.padding ?? 0.1);\n    await panZoom.setViewport(viewport, { duration: options?.duration });\n    return Promise.resolve(true);\n}\n/**\n * This function calculates the next position of a node, taking into account the node's extent, parent node, and origin.\n *\n * @internal\n * @returns position, positionAbsolute\n */\nfunction calculateNodePosition({ nodeId, nextPosition, nodeLookup, nodeOrigin = [0, 0], nodeExtent, onError, }) {\n    const node = nodeLookup.get(nodeId);\n    const parentNode = node.parentId ? nodeLookup.get(node.parentId) : undefined;\n    const { x: parentX, y: parentY } = parentNode ? parentNode.internals.positionAbsolute : { x: 0, y: 0 };\n    const origin = node.origin ?? nodeOrigin;\n    let extent = nodeExtent;\n    if (node.extent === 'parent' && !node.expandParent) {\n        if (!parentNode) {\n            onError?.('005', errorMessages['error005']());\n        }\n        else {\n            const parentWidth = parentNode.measured.width;\n            const parentHeight = parentNode.measured.height;\n            if (parentWidth && parentHeight) {\n                extent = [\n                    [parentX, parentY],\n                    [parentX + parentWidth, parentY + parentHeight],\n                ];\n            }\n        }\n    }\n    else if (parentNode && isCoordinateExtent(node.extent)) {\n        extent = [\n            [node.extent[0][0] + parentX, node.extent[0][1] + parentY],\n            [node.extent[1][0] + parentX, node.extent[1][1] + parentY],\n        ];\n    }\n    const positionAbsolute = isCoordinateExtent(extent)\n        ? clampPosition(nextPosition, extent, node.measured)\n        : nextPosition;\n    return {\n        position: {\n            x: positionAbsolute.x - parentX + node.measured.width * origin[0],\n            y: positionAbsolute.y - parentY + node.measured.height * origin[1],\n        },\n        positionAbsolute,\n    };\n}\n/**\n * Pass in nodes & edges to delete, get arrays of nodes and edges that actually can be deleted\n * @internal\n * @param param.nodesToRemove - The nodes to remove\n * @param param.edgesToRemove - The edges to remove\n * @param param.nodes - All nodes\n * @param param.edges - All edges\n * @param param.onBeforeDelete - Callback to check which nodes and edges can be deleted\n * @returns nodes: nodes that can be deleted, edges: edges that can be deleted\n */\nasync function getElementsToRemove({ nodesToRemove = [], edgesToRemove = [], nodes, edges, onBeforeDelete, }) {\n    const nodeIds = new Set(nodesToRemove.map((node) => node.id));\n    const matchingNodes = [];\n    for (const node of nodes) {\n        if (node.deletable === false) {\n            continue;\n        }\n        const isIncluded = nodeIds.has(node.id);\n        const parentHit = !isIncluded && node.parentId && matchingNodes.find((n) => n.id === node.parentId);\n        if (isIncluded || parentHit) {\n            matchingNodes.push(node);\n        }\n    }\n    const edgeIds = new Set(edgesToRemove.map((edge) => edge.id));\n    const deletableEdges = edges.filter((edge) => edge.deletable !== false);\n    const connectedEdges = getConnectedEdges(matchingNodes, deletableEdges);\n    const matchingEdges = connectedEdges;\n    for (const edge of deletableEdges) {\n        const isIncluded = edgeIds.has(edge.id);\n        if (isIncluded && !matchingEdges.find((e) => e.id === edge.id)) {\n            matchingEdges.push(edge);\n        }\n    }\n    if (!onBeforeDelete) {\n        return {\n            edges: matchingEdges,\n            nodes: matchingNodes,\n        };\n    }\n    const onBeforeDeleteResult = await onBeforeDelete({\n        nodes: matchingNodes,\n        edges: matchingEdges,\n    });\n    if (typeof onBeforeDeleteResult === 'boolean') {\n        return onBeforeDeleteResult ? { edges: matchingEdges, nodes: matchingNodes } : { edges: [], nodes: [] };\n    }\n    return onBeforeDeleteResult;\n}\n\nconst clamp = (val, min = 0, max = 1) => Math.min(Math.max(val, min), max);\nconst clampPosition = (position = { x: 0, y: 0 }, extent, dimensions) => ({\n    x: clamp(position.x, extent[0][0], extent[1][0] - (dimensions?.width ?? 0)),\n    y: clamp(position.y, extent[0][1], extent[1][1] - (dimensions?.height ?? 0)),\n});\nfunction clampPositionToParent(childPosition, childDimensions, parent) {\n    const { width: parentWidth, height: parentHeight } = getNodeDimensions(parent);\n    const { x: parentX, y: parentY } = parent.internals.positionAbsolute;\n    return clampPosition(childPosition, [\n        [parentX, parentY],\n        [parentX + parentWidth, parentY + parentHeight],\n    ], childDimensions);\n}\n/**\n * Calculates the velocity of panning when the mouse is close to the edge of the canvas\n * @internal\n * @param value - One dimensional poition of the mouse (x or y)\n * @param min - Minimal position on canvas before panning starts\n * @param max - Maximal position on canvas before panning starts\n * @returns - A number between 0 and 1 that represents the velocity of panning\n */\nconst calcAutoPanVelocity = (value, min, max) => {\n    if (value < min) {\n        return clamp(Math.abs(value - min), 1, min) / min;\n    }\n    else if (value > max) {\n        return -clamp(Math.abs(value - max), 1, min) / min;\n    }\n    return 0;\n};\nconst calcAutoPan = (pos, bounds, speed = 15, distance = 40) => {\n    const xMovement = calcAutoPanVelocity(pos.x, distance, bounds.width - distance) * speed;\n    const yMovement = calcAutoPanVelocity(pos.y, distance, bounds.height - distance) * speed;\n    return [xMovement, yMovement];\n};\nconst getBoundsOfBoxes = (box1, box2) => ({\n    x: Math.min(box1.x, box2.x),\n    y: Math.min(box1.y, box2.y),\n    x2: Math.max(box1.x2, box2.x2),\n    y2: Math.max(box1.y2, box2.y2),\n});\nconst rectToBox = ({ x, y, width, height }) => ({\n    x,\n    y,\n    x2: x + width,\n    y2: y + height,\n});\nconst boxToRect = ({ x, y, x2, y2 }) => ({\n    x,\n    y,\n    width: x2 - x,\n    height: y2 - y,\n});\nconst nodeToRect = (node, nodeOrigin = [0, 0]) => {\n    const { x, y } = isInternalNodeBase(node)\n        ? node.internals.positionAbsolute\n        : getNodePositionWithOrigin(node, nodeOrigin);\n    return {\n        x,\n        y,\n        width: node.measured?.width ?? node.width ?? node.initialWidth ?? 0,\n        height: node.measured?.height ?? node.height ?? node.initialHeight ?? 0,\n    };\n};\nconst nodeToBox = (node, nodeOrigin = [0, 0]) => {\n    const { x, y } = isInternalNodeBase(node)\n        ? node.internals.positionAbsolute\n        : getNodePositionWithOrigin(node, nodeOrigin);\n    return {\n        x,\n        y,\n        x2: x + (node.measured?.width ?? node.width ?? node.initialWidth ?? 0),\n        y2: y + (node.measured?.height ?? node.height ?? node.initialHeight ?? 0),\n    };\n};\nconst getBoundsOfRects = (rect1, rect2) => boxToRect(getBoundsOfBoxes(rectToBox(rect1), rectToBox(rect2)));\nconst getOverlappingArea = (rectA, rectB) => {\n    const xOverlap = Math.max(0, Math.min(rectA.x + rectA.width, rectB.x + rectB.width) - Math.max(rectA.x, rectB.x));\n    const yOverlap = Math.max(0, Math.min(rectA.y + rectA.height, rectB.y + rectB.height) - Math.max(rectA.y, rectB.y));\n    return Math.ceil(xOverlap * yOverlap);\n};\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst isRectObject = (obj) => isNumeric(obj.width) && isNumeric(obj.height) && isNumeric(obj.x) && isNumeric(obj.y);\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\nconst isNumeric = (n) => !isNaN(n) && isFinite(n);\n// used for a11y key board controls for nodes and edges\nconst devWarn = (id, message) => {\n    if (process.env.NODE_ENV === 'development') {\n        console.warn(`[React Flow]: ${message} Help: https://reactflow.dev/error#${id}`);\n    }\n};\nconst snapPosition = (position, snapGrid = [1, 1]) => {\n    return {\n        x: snapGrid[0] * Math.round(position.x / snapGrid[0]),\n        y: snapGrid[1] * Math.round(position.y / snapGrid[1]),\n    };\n};\nconst pointToRendererPoint = ({ x, y }, [tx, ty, tScale], snapToGrid = false, snapGrid = [1, 1]) => {\n    const position = {\n        x: (x - tx) / tScale,\n        y: (y - ty) / tScale,\n    };\n    return snapToGrid ? snapPosition(position, snapGrid) : position;\n};\nconst rendererPointToPoint = ({ x, y }, [tx, ty, tScale]) => {\n    return {\n        x: x * tScale + tx,\n        y: y * tScale + ty,\n    };\n};\n/**\n * Returns a viewport that encloses the given bounds with optional padding.\n * @public\n * @remarks You can determine bounds of nodes with {@link getNodesBounds} and {@link getBoundsOfRects}\n * @param bounds - Bounds to fit inside viewport\n * @param width - Width of the viewport\n * @param height  - Height of the viewport\n * @param minZoom - Minimum zoom level of the resulting viewport\n * @param maxZoom - Maximum zoom level of the resulting viewport\n * @param padding - Optional padding around the bounds\n * @returns A transforned {@link Viewport} that encloses the given bounds which you can pass to e.g. {@link setViewport}\n * @example\n * const { x, y, zoom } = getViewportForBounds(\n  { x: 0, y: 0, width: 100, height: 100},\n  1200, 800, 0.5, 2);\n */\nconst getViewportForBounds = (bounds, width, height, minZoom, maxZoom, padding) => {\n    const xZoom = width / (bounds.width * (1 + padding));\n    const yZoom = height / (bounds.height * (1 + padding));\n    const zoom = Math.min(xZoom, yZoom);\n    const clampedZoom = clamp(zoom, minZoom, maxZoom);\n    const boundsCenterX = bounds.x + bounds.width / 2;\n    const boundsCenterY = bounds.y + bounds.height / 2;\n    const x = width / 2 - boundsCenterX * clampedZoom;\n    const y = height / 2 - boundsCenterY * clampedZoom;\n    return { x, y, zoom: clampedZoom };\n};\nconst isMacOs = () => typeof navigator !== 'undefined' && navigator?.userAgent?.indexOf('Mac') >= 0;\nfunction isCoordinateExtent(extent) {\n    return extent !== undefined && extent !== 'parent';\n}\nfunction getNodeDimensions(node) {\n    return {\n        width: node.measured?.width ?? node.width ?? node.initialWidth ?? 0,\n        height: node.measured?.height ?? node.height ?? node.initialHeight ?? 0,\n    };\n}\nfunction nodeHasDimensions(node) {\n    return ((node.measured?.width ?? node.width ?? node.initialWidth) !== undefined &&\n        (node.measured?.height ?? node.height ?? node.initialHeight) !== undefined);\n}\n/**\n * Convert child position to aboslute position\n *\n * @internal\n * @param position\n * @param parentId\n * @param nodeLookup\n * @param nodeOrigin\n * @returns an internal node with an absolute position\n */\nfunction evaluateAbsolutePosition(position, dimensions = { width: 0, height: 0 }, parentId, nodeLookup, nodeOrigin) {\n    const positionAbsolute = { ...position };\n    const parent = nodeLookup.get(parentId);\n    if (parent) {\n        const origin = parent.origin || nodeOrigin;\n        positionAbsolute.x += parent.internals.positionAbsolute.x - (dimensions.width ?? 0) * origin[0];\n        positionAbsolute.y += parent.internals.positionAbsolute.y - (dimensions.height ?? 0) * origin[1];\n    }\n    return positionAbsolute;\n}\n\nfunction getPointerPosition(event, { snapGrid = [0, 0], snapToGrid = false, transform, containerBounds }) {\n    const { x, y } = getEventPosition(event);\n    const pointerPos = pointToRendererPoint({ x: x - (containerBounds?.left ?? 0), y: y - (containerBounds?.top ?? 0) }, transform);\n    const { x: xSnapped, y: ySnapped } = snapToGrid ? snapPosition(pointerPos, snapGrid) : pointerPos;\n    // we need the snapped position in order to be able to skip unnecessary drag events\n    return {\n        xSnapped,\n        ySnapped,\n        ...pointerPos,\n    };\n}\nconst getDimensions = (node) => ({\n    width: node.offsetWidth,\n    height: node.offsetHeight,\n});\nconst getHostForElement = (element) => element.getRootNode?.() || window?.document;\nconst inputTags = ['INPUT', 'SELECT', 'TEXTAREA'];\nfunction isInputDOMNode(event) {\n    // using composed path for handling shadow dom\n    const target = (event.composedPath?.()?.[0] || event.target);\n    const isInput = inputTags.includes(target?.nodeName) || target?.hasAttribute?.('contenteditable');\n    // when an input field is focused we don't want to trigger deletion or movement of nodes\n    return isInput || !!target?.closest('.nokey');\n}\nconst isMouseEvent = (event) => 'clientX' in event;\nconst getEventPosition = (event, bounds) => {\n    const isMouse = isMouseEvent(event);\n    const evtX = isMouse ? event.clientX : event.touches?.[0].clientX;\n    const evtY = isMouse ? event.clientY : event.touches?.[0].clientY;\n    return {\n        x: evtX - (bounds?.left ?? 0),\n        y: evtY - (bounds?.top ?? 0),\n    };\n};\n// The handle bounds are calculated relative to the node element.\n// We store them in the internals object of the node in order to avoid\n// unnecessary recalculations.\nconst getHandleBounds = (type, nodeElement, nodeBounds, zoom, nodeId) => {\n    const handles = nodeElement.querySelectorAll(`.${type}`);\n    if (!handles || !handles.length) {\n        return null;\n    }\n    return Array.from(handles).map((handle) => {\n        const handleBounds = handle.getBoundingClientRect();\n        return {\n            id: handle.getAttribute('data-handleid'),\n            type,\n            nodeId,\n            position: handle.getAttribute('data-handlepos'),\n            x: (handleBounds.left - nodeBounds.left) / zoom,\n            y: (handleBounds.top - nodeBounds.top) / zoom,\n            ...getDimensions(handle),\n        };\n    });\n};\n\nfunction getBezierEdgeCenter({ sourceX, sourceY, targetX, targetY, sourceControlX, sourceControlY, targetControlX, targetControlY, }) {\n    // cubic bezier t=0.5 mid point, not the actual mid point, but easy to calculate\n    // https://stackoverflow.com/questions/67516101/how-to-find-distance-mid-point-of-bezier-curve\n    const centerX = sourceX * 0.125 + sourceControlX * 0.375 + targetControlX * 0.375 + targetX * 0.125;\n    const centerY = sourceY * 0.125 + sourceControlY * 0.375 + targetControlY * 0.375 + targetY * 0.125;\n    const offsetX = Math.abs(centerX - sourceX);\n    const offsetY = Math.abs(centerY - sourceY);\n    return [centerX, centerY, offsetX, offsetY];\n}\nfunction calculateControlOffset(distance, curvature) {\n    if (distance >= 0) {\n        return 0.5 * distance;\n    }\n    return curvature * 25 * Math.sqrt(-distance);\n}\nfunction getControlWithCurvature({ pos, x1, y1, x2, y2, c }) {\n    switch (pos) {\n        case Position.Left:\n            return [x1 - calculateControlOffset(x1 - x2, c), y1];\n        case Position.Right:\n            return [x1 + calculateControlOffset(x2 - x1, c), y1];\n        case Position.Top:\n            return [x1, y1 - calculateControlOffset(y1 - y2, c)];\n        case Position.Bottom:\n            return [x1, y1 + calculateControlOffset(y2 - y1, c)];\n    }\n}\n/**\n * Get a bezier path from source to target handle\n * @param params.sourceX - The x position of the source handle\n * @param params.sourceY - The y position of the source handle\n * @param params.sourcePosition - The position of the source handle (default: Position.Bottom)\n * @param params.targetX - The x position of the target handle\n * @param params.targetY - The y position of the target handle\n * @param params.targetPosition - The position of the target handle (default: Position.Top)\n * @param params.curvature - The curvature of the bezier edge\n * @returns A path string you can use in an SVG, the labelX and labelY position (center of path) and offsetX, offsetY between source handle and label\n * @example\n *  const source = { x: 0, y: 20 };\n    const target = { x: 150, y: 100 };\n    \n    const [path, labelX, labelY, offsetX, offsetY] = getBezierPath({\n      sourceX: source.x,\n      sourceY: source.y,\n      sourcePosition: Position.Right,\n      targetX: target.x,\n      targetY: target.y,\n      targetPosition: Position.Left,\n});\n */\nfunction getBezierPath({ sourceX, sourceY, sourcePosition = Position.Bottom, targetX, targetY, targetPosition = Position.Top, curvature = 0.25, }) {\n    const [sourceControlX, sourceControlY] = getControlWithCurvature({\n        pos: sourcePosition,\n        x1: sourceX,\n        y1: sourceY,\n        x2: targetX,\n        y2: targetY,\n        c: curvature,\n    });\n    const [targetControlX, targetControlY] = getControlWithCurvature({\n        pos: targetPosition,\n        x1: targetX,\n        y1: targetY,\n        x2: sourceX,\n        y2: sourceY,\n        c: curvature,\n    });\n    const [labelX, labelY, offsetX, offsetY] = getBezierEdgeCenter({\n        sourceX,\n        sourceY,\n        targetX,\n        targetY,\n        sourceControlX,\n        sourceControlY,\n        targetControlX,\n        targetControlY,\n    });\n    return [\n        `M${sourceX},${sourceY} C${sourceControlX},${sourceControlY} ${targetControlX},${targetControlY} ${targetX},${targetY}`,\n        labelX,\n        labelY,\n        offsetX,\n        offsetY,\n    ];\n}\n\n// this is used for straight edges and simple smoothstep edges (LTR, RTL, BTT, TTB)\nfunction getEdgeCenter({ sourceX, sourceY, targetX, targetY, }) {\n    const xOffset = Math.abs(targetX - sourceX) / 2;\n    const centerX = targetX < sourceX ? targetX + xOffset : targetX - xOffset;\n    const yOffset = Math.abs(targetY - sourceY) / 2;\n    const centerY = targetY < sourceY ? targetY + yOffset : targetY - yOffset;\n    return [centerX, centerY, xOffset, yOffset];\n}\nfunction getElevatedEdgeZIndex({ sourceNode, targetNode, selected = false, zIndex = 0, elevateOnSelect = false, }) {\n    if (!elevateOnSelect) {\n        return zIndex;\n    }\n    const edgeOrConnectedNodeSelected = selected || targetNode.selected || sourceNode.selected;\n    const selectedZIndex = Math.max(sourceNode.internals.z || 0, targetNode.internals.z || 0, 1000);\n    return zIndex + (edgeOrConnectedNodeSelected ? selectedZIndex : 0);\n}\nfunction isEdgeVisible({ sourceNode, targetNode, width, height, transform }) {\n    const edgeBox = getBoundsOfBoxes(nodeToBox(sourceNode), nodeToBox(targetNode));\n    if (edgeBox.x === edgeBox.x2) {\n        edgeBox.x2 += 1;\n    }\n    if (edgeBox.y === edgeBox.y2) {\n        edgeBox.y2 += 1;\n    }\n    const viewRect = {\n        x: -transform[0] / transform[2],\n        y: -transform[1] / transform[2],\n        width: width / transform[2],\n        height: height / transform[2],\n    };\n    return getOverlappingArea(viewRect, boxToRect(edgeBox)) > 0;\n}\nconst getEdgeId = ({ source, sourceHandle, target, targetHandle }) => `xy-edge__${source}${sourceHandle || ''}-${target}${targetHandle || ''}`;\nconst connectionExists = (edge, edges) => {\n    return edges.some((el) => el.source === edge.source &&\n        el.target === edge.target &&\n        (el.sourceHandle === edge.sourceHandle || (!el.sourceHandle && !edge.sourceHandle)) &&\n        (el.targetHandle === edge.targetHandle || (!el.targetHandle && !edge.targetHandle)));\n};\n/**\n * This util is a convenience function to add a new Edge to an array of edges\n * @remarks It also performs some validation to make sure you don't add an invalid edge or duplicate an existing one.\n * @public\n * @param edgeParams - Either an Edge or a Connection you want to add\n * @param edges -  The array of all current edges\n * @returns A new array of edges with the new edge added\n */\nconst addEdge = (edgeParams, edges) => {\n    if (!edgeParams.source || !edgeParams.target) {\n        devWarn('006', errorMessages['error006']());\n        return edges;\n    }\n    let edge;\n    if (isEdgeBase(edgeParams)) {\n        edge = { ...edgeParams };\n    }\n    else {\n        edge = {\n            ...edgeParams,\n            id: getEdgeId(edgeParams),\n        };\n    }\n    if (connectionExists(edge, edges)) {\n        return edges;\n    }\n    if (edge.sourceHandle === null) {\n        delete edge.sourceHandle;\n    }\n    if (edge.targetHandle === null) {\n        delete edge.targetHandle;\n    }\n    return edges.concat(edge);\n};\n/**\n * A handy utility to reconnect an existing edge with new properties\n * @param oldEdge - The edge you want to update\n * @param newConnection - The new connection you want to update the edge with\n * @param edges - The array of all current edges\n * @param options.shouldReplaceId - should the id of the old edge be replaced with the new connection id\n * @returns the updated edges array\n */\nconst reconnectEdge = (oldEdge, newConnection, edges, options = { shouldReplaceId: true }) => {\n    const { id: oldEdgeId, ...rest } = oldEdge;\n    if (!newConnection.source || !newConnection.target) {\n        devWarn('006', errorMessages['error006']());\n        return edges;\n    }\n    const foundEdge = edges.find((e) => e.id === oldEdge.id);\n    if (!foundEdge) {\n        devWarn('007', errorMessages['error007'](oldEdgeId));\n        return edges;\n    }\n    // Remove old edge and create the new edge with parameters of old edge.\n    const edge = {\n        ...rest,\n        id: options.shouldReplaceId ? getEdgeId(newConnection) : oldEdgeId,\n        source: newConnection.source,\n        target: newConnection.target,\n        sourceHandle: newConnection.sourceHandle,\n        targetHandle: newConnection.targetHandle,\n    };\n    return edges.filter((e) => e.id !== oldEdgeId).concat(edge);\n};\n\n/**\n * Get a straight path from source to target handle\n * @param params.sourceX - The x position of the source handle\n * @param params.sourceY - The y position of the source handle\n * @param params.targetX - The x position of the target handle\n * @param params.targetY - The y position of the target handle\n * @returns A path string you can use in an SVG, the labelX and labelY position (center of path) and offsetX, offsetY between source handle and label\n * @example\n *  const source = { x: 0, y: 20 };\n    const target = { x: 150, y: 100 };\n    \n    const [path, labelX, labelY, offsetX, offsetY] = getStraightPath({\n      sourceX: source.x,\n      sourceY: source.y,\n      sourcePosition: Position.Right,\n      targetX: target.x,\n      targetY: target.y,\n      targetPosition: Position.Left,\n    });\n */\nfunction getStraightPath({ sourceX, sourceY, targetX, targetY, }) {\n    const [labelX, labelY, offsetX, offsetY] = getEdgeCenter({\n        sourceX,\n        sourceY,\n        targetX,\n        targetY,\n    });\n    return [`M ${sourceX},${sourceY}L ${targetX},${targetY}`, labelX, labelY, offsetX, offsetY];\n}\n\nconst handleDirections = {\n    [Position.Left]: { x: -1, y: 0 },\n    [Position.Right]: { x: 1, y: 0 },\n    [Position.Top]: { x: 0, y: -1 },\n    [Position.Bottom]: { x: 0, y: 1 },\n};\nconst getDirection = ({ source, sourcePosition = Position.Bottom, target, }) => {\n    if (sourcePosition === Position.Left || sourcePosition === Position.Right) {\n        return source.x < target.x ? { x: 1, y: 0 } : { x: -1, y: 0 };\n    }\n    return source.y < target.y ? { x: 0, y: 1 } : { x: 0, y: -1 };\n};\nconst distance = (a, b) => Math.sqrt(Math.pow(b.x - a.x, 2) + Math.pow(b.y - a.y, 2));\n// ith this function we try to mimic a orthogonal edge routing behaviour\n// It's not as good as a real orthogonal edge routing but it's faster and good enough as a default for step and smooth step edges\nfunction getPoints({ source, sourcePosition = Position.Bottom, target, targetPosition = Position.Top, center, offset, }) {\n    const sourceDir = handleDirections[sourcePosition];\n    const targetDir = handleDirections[targetPosition];\n    const sourceGapped = { x: source.x + sourceDir.x * offset, y: source.y + sourceDir.y * offset };\n    const targetGapped = { x: target.x + targetDir.x * offset, y: target.y + targetDir.y * offset };\n    const dir = getDirection({\n        source: sourceGapped,\n        sourcePosition,\n        target: targetGapped,\n    });\n    const dirAccessor = dir.x !== 0 ? 'x' : 'y';\n    const currDir = dir[dirAccessor];\n    let points = [];\n    let centerX, centerY;\n    const sourceGapOffset = { x: 0, y: 0 };\n    const targetGapOffset = { x: 0, y: 0 };\n    const [defaultCenterX, defaultCenterY, defaultOffsetX, defaultOffsetY] = getEdgeCenter({\n        sourceX: source.x,\n        sourceY: source.y,\n        targetX: target.x,\n        targetY: target.y,\n    });\n    // opposite handle positions, default case\n    if (sourceDir[dirAccessor] * targetDir[dirAccessor] === -1) {\n        centerX = center.x ?? defaultCenterX;\n        centerY = center.y ?? defaultCenterY;\n        //    --->\n        //    |\n        // >---\n        const verticalSplit = [\n            { x: centerX, y: sourceGapped.y },\n            { x: centerX, y: targetGapped.y },\n        ];\n        //    |\n        //  ---\n        //  |\n        const horizontalSplit = [\n            { x: sourceGapped.x, y: centerY },\n            { x: targetGapped.x, y: centerY },\n        ];\n        if (sourceDir[dirAccessor] === currDir) {\n            points = dirAccessor === 'x' ? verticalSplit : horizontalSplit;\n        }\n        else {\n            points = dirAccessor === 'x' ? horizontalSplit : verticalSplit;\n        }\n    }\n    else {\n        // sourceTarget means we take x from source and y from target, targetSource is the opposite\n        const sourceTarget = [{ x: sourceGapped.x, y: targetGapped.y }];\n        const targetSource = [{ x: targetGapped.x, y: sourceGapped.y }];\n        // this handles edges with same handle positions\n        if (dirAccessor === 'x') {\n            points = sourceDir.x === currDir ? targetSource : sourceTarget;\n        }\n        else {\n            points = sourceDir.y === currDir ? sourceTarget : targetSource;\n        }\n        if (sourcePosition === targetPosition) {\n            const diff = Math.abs(source[dirAccessor] - target[dirAccessor]);\n            // if an edge goes from right to right for example (sourcePosition === targetPosition) and the distance between source.x and target.x is less than the offset, the added point and the gapped source/target will overlap. This leads to a weird edge path. To avoid this we add a gapOffset to the source/target\n            if (diff <= offset) {\n                const gapOffset = Math.min(offset - 1, offset - diff);\n                if (sourceDir[dirAccessor] === currDir) {\n                    sourceGapOffset[dirAccessor] = (sourceGapped[dirAccessor] > source[dirAccessor] ? -1 : 1) * gapOffset;\n                }\n                else {\n                    targetGapOffset[dirAccessor] = (targetGapped[dirAccessor] > target[dirAccessor] ? -1 : 1) * gapOffset;\n                }\n            }\n        }\n        // these are conditions for handling mixed handle positions like Right -> Bottom for example\n        if (sourcePosition !== targetPosition) {\n            const dirAccessorOpposite = dirAccessor === 'x' ? 'y' : 'x';\n            const isSameDir = sourceDir[dirAccessor] === targetDir[dirAccessorOpposite];\n            const sourceGtTargetOppo = sourceGapped[dirAccessorOpposite] > targetGapped[dirAccessorOpposite];\n            const sourceLtTargetOppo = sourceGapped[dirAccessorOpposite] < targetGapped[dirAccessorOpposite];\n            const flipSourceTarget = (sourceDir[dirAccessor] === 1 && ((!isSameDir && sourceGtTargetOppo) || (isSameDir && sourceLtTargetOppo))) ||\n                (sourceDir[dirAccessor] !== 1 && ((!isSameDir && sourceLtTargetOppo) || (isSameDir && sourceGtTargetOppo)));\n            if (flipSourceTarget) {\n                points = dirAccessor === 'x' ? sourceTarget : targetSource;\n            }\n        }\n        const sourceGapPoint = { x: sourceGapped.x + sourceGapOffset.x, y: sourceGapped.y + sourceGapOffset.y };\n        const targetGapPoint = { x: targetGapped.x + targetGapOffset.x, y: targetGapped.y + targetGapOffset.y };\n        const maxXDistance = Math.max(Math.abs(sourceGapPoint.x - points[0].x), Math.abs(targetGapPoint.x - points[0].x));\n        const maxYDistance = Math.max(Math.abs(sourceGapPoint.y - points[0].y), Math.abs(targetGapPoint.y - points[0].y));\n        // we want to place the label on the longest segment of the edge\n        if (maxXDistance >= maxYDistance) {\n            centerX = (sourceGapPoint.x + targetGapPoint.x) / 2;\n            centerY = points[0].y;\n        }\n        else {\n            centerX = points[0].x;\n            centerY = (sourceGapPoint.y + targetGapPoint.y) / 2;\n        }\n    }\n    const pathPoints = [\n        source,\n        { x: sourceGapped.x + sourceGapOffset.x, y: sourceGapped.y + sourceGapOffset.y },\n        ...points,\n        { x: targetGapped.x + targetGapOffset.x, y: targetGapped.y + targetGapOffset.y },\n        target,\n    ];\n    return [pathPoints, centerX, centerY, defaultOffsetX, defaultOffsetY];\n}\nfunction getBend(a, b, c, size) {\n    const bendSize = Math.min(distance(a, b) / 2, distance(b, c) / 2, size);\n    const { x, y } = b;\n    // no bend\n    if ((a.x === x && x === c.x) || (a.y === y && y === c.y)) {\n        return `L${x} ${y}`;\n    }\n    // first segment is horizontal\n    if (a.y === y) {\n        const xDir = a.x < c.x ? -1 : 1;\n        const yDir = a.y < c.y ? 1 : -1;\n        return `L ${x + bendSize * xDir},${y}Q ${x},${y} ${x},${y + bendSize * yDir}`;\n    }\n    const xDir = a.x < c.x ? 1 : -1;\n    const yDir = a.y < c.y ? -1 : 1;\n    return `L ${x},${y + bendSize * yDir}Q ${x},${y} ${x + bendSize * xDir},${y}`;\n}\n/**\n * Get a smooth step path from source to target handle\n * @param params.sourceX - The x position of the source handle\n * @param params.sourceY - The y position of the source handle\n * @param params.sourcePosition - The position of the source handle (default: Position.Bottom)\n * @param params.targetX - The x position of the target handle\n * @param params.targetY - The y position of the target handle\n * @param params.targetPosition - The position of the target handle (default: Position.Top)\n * @returns A path string you can use in an SVG, the labelX and labelY position (center of path) and offsetX, offsetY between source handle and label\n * @example\n *  const source = { x: 0, y: 20 };\n    const target = { x: 150, y: 100 };\n    \n    const [path, labelX, labelY, offsetX, offsetY] = getSmoothStepPath({\n      sourceX: source.x,\n      sourceY: source.y,\n      sourcePosition: Position.Right,\n      targetX: target.x,\n      targetY: target.y,\n      targetPosition: Position.Left,\n    });\n */\nfunction getSmoothStepPath({ sourceX, sourceY, sourcePosition = Position.Bottom, targetX, targetY, targetPosition = Position.Top, borderRadius = 5, centerX, centerY, offset = 20, }) {\n    const [points, labelX, labelY, offsetX, offsetY] = getPoints({\n        source: { x: sourceX, y: sourceY },\n        sourcePosition,\n        target: { x: targetX, y: targetY },\n        targetPosition,\n        center: { x: centerX, y: centerY },\n        offset,\n    });\n    const path = points.reduce((res, p, i) => {\n        let segment = '';\n        if (i > 0 && i < points.length - 1) {\n            segment = getBend(points[i - 1], p, points[i + 1], borderRadius);\n        }\n        else {\n            segment = `${i === 0 ? 'M' : 'L'}${p.x} ${p.y}`;\n        }\n        res += segment;\n        return res;\n    }, '');\n    return [path, labelX, labelY, offsetX, offsetY];\n}\n\nfunction isNodeInitialized(node) {\n    return (node &&\n        !!(node.internals.handleBounds || node.handles?.length) &&\n        !!(node.measured.width || node.width || node.initialWidth));\n}\nfunction getEdgePosition(params) {\n    const { sourceNode, targetNode } = params;\n    if (!isNodeInitialized(sourceNode) || !isNodeInitialized(targetNode)) {\n        return null;\n    }\n    const sourceHandleBounds = sourceNode.internals.handleBounds || toHandleBounds(sourceNode.handles);\n    const targetHandleBounds = targetNode.internals.handleBounds || toHandleBounds(targetNode.handles);\n    const sourceHandle = getHandle$1(sourceHandleBounds?.source ?? [], params.sourceHandle);\n    const targetHandle = getHandle$1(\n    // when connection type is loose we can define all handles as sources and connect source -> source\n    params.connectionMode === ConnectionMode.Strict\n        ? targetHandleBounds?.target ?? []\n        : (targetHandleBounds?.target ?? []).concat(targetHandleBounds?.source ?? []), params.targetHandle);\n    if (!sourceHandle || !targetHandle) {\n        params.onError?.('008', errorMessages['error008'](!sourceHandle ? 'source' : 'target', {\n            id: params.id,\n            sourceHandle: params.sourceHandle,\n            targetHandle: params.targetHandle,\n        }));\n        return null;\n    }\n    const sourcePosition = sourceHandle?.position || Position.Bottom;\n    const targetPosition = targetHandle?.position || Position.Top;\n    const source = getHandlePosition(sourceNode, sourceHandle, sourcePosition);\n    const target = getHandlePosition(targetNode, targetHandle, targetPosition);\n    return {\n        sourceX: source.x,\n        sourceY: source.y,\n        targetX: target.x,\n        targetY: target.y,\n        sourcePosition,\n        targetPosition,\n    };\n}\nfunction toHandleBounds(handles) {\n    if (!handles) {\n        return null;\n    }\n    const source = [];\n    const target = [];\n    for (const handle of handles) {\n        handle.width = handle.width ?? 1;\n        handle.height = handle.height ?? 1;\n        if (handle.type === 'source') {\n            source.push(handle);\n        }\n        else if (handle.type === 'target') {\n            target.push(handle);\n        }\n    }\n    return {\n        source,\n        target,\n    };\n}\nfunction getHandlePosition(node, handle, fallbackPosition = Position.Left, center = false) {\n    const x = (handle?.x ?? 0) + node.internals.positionAbsolute.x;\n    const y = (handle?.y ?? 0) + node.internals.positionAbsolute.y;\n    const { width, height } = handle ?? getNodeDimensions(node);\n    if (center) {\n        return { x: x + width / 2, y: y + height / 2 };\n    }\n    const position = handle?.position ?? fallbackPosition;\n    switch (position) {\n        case Position.Top:\n            return { x: x + width / 2, y };\n        case Position.Right:\n            return { x: x + width, y: y + height / 2 };\n        case Position.Bottom:\n            return { x: x + width / 2, y: y + height };\n        case Position.Left:\n            return { x, y: y + height / 2 };\n    }\n}\nfunction getHandle$1(bounds, handleId) {\n    if (!bounds) {\n        return null;\n    }\n    // if no handleId is given, we use the first handle, otherwise we check for the id\n    return (!handleId ? bounds[0] : bounds.find((d) => d.id === handleId)) || null;\n}\n\nfunction getMarkerId(marker, id) {\n    if (!marker) {\n        return '';\n    }\n    if (typeof marker === 'string') {\n        return marker;\n    }\n    const idPrefix = id ? `${id}__` : '';\n    return `${idPrefix}${Object.keys(marker)\n        .sort()\n        .map((key) => `${key}=${marker[key]}`)\n        .join('&')}`;\n}\nfunction createMarkerIds(edges, { id, defaultColor, defaultMarkerStart, defaultMarkerEnd, }) {\n    const ids = new Set();\n    return edges\n        .reduce((markers, edge) => {\n        [edge.markerStart || defaultMarkerStart, edge.markerEnd || defaultMarkerEnd].forEach((marker) => {\n            if (marker && typeof marker === 'object') {\n                const markerId = getMarkerId(marker, id);\n                if (!ids.has(markerId)) {\n                    markers.push({ id: markerId, color: marker.color || defaultColor, ...marker });\n                    ids.add(markerId);\n                }\n            }\n        });\n        return markers;\n    }, [])\n        .sort((a, b) => a.id.localeCompare(b.id));\n}\n\nfunction getNodeToolbarTransform(nodeRect, viewport, position, offset, align) {\n    let alignmentOffset = 0.5;\n    if (align === 'start') {\n        alignmentOffset = 0;\n    }\n    else if (align === 'end') {\n        alignmentOffset = 1;\n    }\n    // position === Position.Top\n    // we set the x any y position of the toolbar based on the nodes position\n    let pos = [\n        (nodeRect.x + nodeRect.width * alignmentOffset) * viewport.zoom + viewport.x,\n        nodeRect.y * viewport.zoom + viewport.y - offset,\n    ];\n    // and than shift it based on the alignment. The shift values are in %.\n    let shift = [-100 * alignmentOffset, -100];\n    switch (position) {\n        case Position.Right:\n            pos = [\n                (nodeRect.x + nodeRect.width) * viewport.zoom + viewport.x + offset,\n                (nodeRect.y + nodeRect.height * alignmentOffset) * viewport.zoom + viewport.y,\n            ];\n            shift = [0, -100 * alignmentOffset];\n            break;\n        case Position.Bottom:\n            pos[1] = (nodeRect.y + nodeRect.height) * viewport.zoom + viewport.y + offset;\n            shift[1] = 0;\n            break;\n        case Position.Left:\n            pos = [\n                nodeRect.x * viewport.zoom + viewport.x - offset,\n                (nodeRect.y + nodeRect.height * alignmentOffset) * viewport.zoom + viewport.y,\n            ];\n            shift = [-100, -100 * alignmentOffset];\n            break;\n    }\n    return `translate(${pos[0]}px, ${pos[1]}px) translate(${shift[0]}%, ${shift[1]}%)`;\n}\n\nconst defaultOptions = {\n    nodeOrigin: [0, 0],\n    nodeExtent: infiniteExtent,\n    elevateNodesOnSelect: true,\n    defaults: {},\n};\nconst adoptUserNodesDefaultOptions = {\n    ...defaultOptions,\n    checkEquality: true,\n};\nfunction mergeObjects(base, incoming) {\n    const result = { ...base };\n    for (const key in incoming) {\n        if (incoming[key] !== undefined) {\n            // typecast is safe here, because we check for undefined\n            result[key] = incoming[key];\n        }\n    }\n    return result;\n}\nfunction updateAbsolutePositions(nodeLookup, parentLookup, options) {\n    const _options = mergeObjects(defaultOptions, options);\n    for (const node of nodeLookup.values()) {\n        if (node.parentId) {\n            updateChildNode(node, nodeLookup, parentLookup, _options);\n        }\n        else {\n            const positionWithOrigin = getNodePositionWithOrigin(node, _options.nodeOrigin);\n            const extent = isCoordinateExtent(node.extent) ? node.extent : _options.nodeExtent;\n            const clampedPosition = clampPosition(positionWithOrigin, extent, getNodeDimensions(node));\n            node.internals.positionAbsolute = clampedPosition;\n        }\n    }\n}\nfunction adoptUserNodes(nodes, nodeLookup, parentLookup, options) {\n    const _options = mergeObjects(adoptUserNodesDefaultOptions, options);\n    const tmpLookup = new Map(nodeLookup);\n    const selectedNodeZ = _options?.elevateNodesOnSelect ? 1000 : 0;\n    nodeLookup.clear();\n    parentLookup.clear();\n    for (const userNode of nodes) {\n        let internalNode = tmpLookup.get(userNode.id);\n        if (_options.checkEquality && userNode === internalNode?.internals.userNode) {\n            nodeLookup.set(userNode.id, internalNode);\n        }\n        else {\n            const positionWithOrigin = getNodePositionWithOrigin(userNode, _options.nodeOrigin);\n            const extent = isCoordinateExtent(userNode.extent) ? userNode.extent : _options.nodeExtent;\n            const clampedPosition = clampPosition(positionWithOrigin, extent, getNodeDimensions(userNode));\n            internalNode = {\n                ..._options.defaults,\n                ...userNode,\n                measured: {\n                    width: userNode.measured?.width,\n                    height: userNode.measured?.height,\n                },\n                internals: {\n                    positionAbsolute: clampedPosition,\n                    // if user re-initializes the node or removes `measured` for whatever reason, we reset the handleBounds so that the node gets re-measured\n                    handleBounds: !userNode.measured ? undefined : internalNode?.internals.handleBounds,\n                    z: calculateZ(userNode, selectedNodeZ),\n                    userNode,\n                },\n            };\n            nodeLookup.set(userNode.id, internalNode);\n        }\n        if (userNode.parentId) {\n            updateChildNode(internalNode, nodeLookup, parentLookup, options);\n        }\n    }\n}\nfunction updateParentLookup(node, parentLookup) {\n    if (!node.parentId) {\n        return;\n    }\n    const childNodes = parentLookup.get(node.parentId);\n    if (childNodes) {\n        childNodes.set(node.id, node);\n    }\n    else {\n        parentLookup.set(node.parentId, new Map([[node.id, node]]));\n    }\n}\n/**\n * Updates positionAbsolute and zIndex of a child node and the parentLookup.\n */\nfunction updateChildNode(node, nodeLookup, parentLookup, options) {\n    const { elevateNodesOnSelect, nodeOrigin, nodeExtent } = mergeObjects(defaultOptions, options);\n    const parentId = node.parentId;\n    const parentNode = nodeLookup.get(parentId);\n    if (!parentNode) {\n        console.warn(`Parent node ${parentId} not found. Please make sure that parent nodes are in front of their child nodes in the nodes array.`);\n        return;\n    }\n    updateParentLookup(node, parentLookup);\n    const selectedNodeZ = elevateNodesOnSelect ? 1000 : 0;\n    const { x, y, z } = calculateChildXYZ(node, parentNode, nodeOrigin, nodeExtent, selectedNodeZ);\n    const { positionAbsolute } = node.internals;\n    const positionChanged = x !== positionAbsolute.x || y !== positionAbsolute.y;\n    if (positionChanged || z !== node.internals.z) {\n        node.internals = {\n            ...node.internals,\n            positionAbsolute: positionChanged ? { x, y } : positionAbsolute,\n            z,\n        };\n    }\n}\nfunction calculateZ(node, selectedNodeZ) {\n    return (isNumeric(node.zIndex) ? node.zIndex : 0) + (node.selected ? selectedNodeZ : 0);\n}\nfunction calculateChildXYZ(childNode, parentNode, nodeOrigin, nodeExtent, selectedNodeZ) {\n    const { x: parentX, y: parentY } = parentNode.internals.positionAbsolute;\n    const childDimensions = getNodeDimensions(childNode);\n    const positionWithOrigin = getNodePositionWithOrigin(childNode, nodeOrigin);\n    const clampedPosition = isCoordinateExtent(childNode.extent)\n        ? clampPosition(positionWithOrigin, childNode.extent, childDimensions)\n        : positionWithOrigin;\n    let absolutePosition = clampPosition({ x: parentX + clampedPosition.x, y: parentY + clampedPosition.y }, nodeExtent, childDimensions);\n    if (childNode.extent === 'parent') {\n        absolutePosition = clampPositionToParent(absolutePosition, childDimensions, parentNode);\n    }\n    const childZ = calculateZ(childNode, selectedNodeZ);\n    const parentZ = parentNode.internals.z ?? 0;\n    return {\n        x: absolutePosition.x,\n        y: absolutePosition.y,\n        z: parentZ > childZ ? parentZ : childZ,\n    };\n}\nfunction handleExpandParent(children, nodeLookup, parentLookup, nodeOrigin = [0, 0]) {\n    const changes = [];\n    const parentExpansions = new Map();\n    // determine the expanded rectangle the child nodes would take for each parent\n    for (const child of children) {\n        const parent = nodeLookup.get(child.parentId);\n        if (!parent) {\n            continue;\n        }\n        const parentRect = parentExpansions.get(child.parentId)?.expandedRect ?? nodeToRect(parent);\n        const expandedRect = getBoundsOfRects(parentRect, child.rect);\n        parentExpansions.set(child.parentId, { expandedRect, parent });\n    }\n    if (parentExpansions.size > 0) {\n        parentExpansions.forEach(({ expandedRect, parent }, parentId) => {\n            // determine the position & dimensions of the parent\n            const positionAbsolute = parent.internals.positionAbsolute;\n            const dimensions = getNodeDimensions(parent);\n            const origin = parent.origin ?? nodeOrigin;\n            // determine how much the parent expands in width and position\n            const xChange = expandedRect.x < positionAbsolute.x ? Math.round(Math.abs(positionAbsolute.x - expandedRect.x)) : 0;\n            const yChange = expandedRect.y < positionAbsolute.y ? Math.round(Math.abs(positionAbsolute.y - expandedRect.y)) : 0;\n            const newWidth = Math.max(dimensions.width, Math.round(expandedRect.width));\n            const newHeight = Math.max(dimensions.height, Math.round(expandedRect.height));\n            const widthChange = (newWidth - dimensions.width) * origin[0];\n            const heightChange = (newHeight - dimensions.height) * origin[1];\n            // We need to correct the position of the parent node if the origin is not [0,0]\n            if (xChange > 0 || yChange > 0 || widthChange || heightChange) {\n                changes.push({\n                    id: parentId,\n                    type: 'position',\n                    position: {\n                        x: parent.position.x - xChange + widthChange,\n                        y: parent.position.y - yChange + heightChange,\n                    },\n                });\n                // We move all child nodes in the oppsite direction\n                // so the x,y changes of the parent do not move the children\n                parentLookup.get(parentId)?.forEach((childNode) => {\n                    if (!children.some((child) => child.id === childNode.id)) {\n                        changes.push({\n                            id: childNode.id,\n                            type: 'position',\n                            position: {\n                                x: childNode.position.x + xChange,\n                                y: childNode.position.y + yChange,\n                            },\n                        });\n                    }\n                });\n            }\n            // We need to correct the dimensions of the parent node if the origin is not [0,0]\n            if (dimensions.width < expandedRect.width || dimensions.height < expandedRect.height || xChange || yChange) {\n                changes.push({\n                    id: parentId,\n                    type: 'dimensions',\n                    setAttributes: true,\n                    dimensions: {\n                        width: newWidth + (xChange ? origin[0] * xChange - widthChange : 0),\n                        height: newHeight + (yChange ? origin[1] * yChange - heightChange : 0),\n                    },\n                });\n            }\n        });\n    }\n    return changes;\n}\nfunction updateNodeInternals(updates, nodeLookup, parentLookup, domNode, nodeOrigin, nodeExtent) {\n    const viewportNode = domNode?.querySelector('.xyflow__viewport');\n    let updatedInternals = false;\n    if (!viewportNode) {\n        return { changes: [], updatedInternals };\n    }\n    const changes = [];\n    const style = window.getComputedStyle(viewportNode);\n    const { m22: zoom } = new window.DOMMatrixReadOnly(style.transform);\n    // in this array we collect nodes, that might trigger changes (like expanding parent)\n    const parentExpandChildren = [];\n    for (const update of updates.values()) {\n        const node = nodeLookup.get(update.id);\n        if (!node) {\n            continue;\n        }\n        if (node.hidden) {\n            node.internals = {\n                ...node.internals,\n                handleBounds: undefined,\n            };\n            updatedInternals = true;\n        }\n        else {\n            const dimensions = getDimensions(update.nodeElement);\n            const dimensionChanged = node.measured.width !== dimensions.width || node.measured.height !== dimensions.height;\n            const doUpdate = !!(dimensions.width &&\n                dimensions.height &&\n                (dimensionChanged || !node.internals.handleBounds || update.force));\n            if (doUpdate) {\n                const nodeBounds = update.nodeElement.getBoundingClientRect();\n                const extent = isCoordinateExtent(node.extent) ? node.extent : nodeExtent;\n                let { positionAbsolute } = node.internals;\n                if (node.parentId && node.extent === 'parent') {\n                    positionAbsolute = clampPositionToParent(positionAbsolute, dimensions, nodeLookup.get(node.parentId));\n                }\n                else if (extent) {\n                    positionAbsolute = clampPosition(positionAbsolute, extent, dimensions);\n                }\n                node.measured = dimensions;\n                node.internals = {\n                    ...node.internals,\n                    positionAbsolute,\n                    handleBounds: {\n                        source: getHandleBounds('source', update.nodeElement, nodeBounds, zoom, node.id),\n                        target: getHandleBounds('target', update.nodeElement, nodeBounds, zoom, node.id),\n                    },\n                };\n                if (node.parentId) {\n                    updateChildNode(node, nodeLookup, parentLookup, { nodeOrigin });\n                }\n                updatedInternals = true;\n                if (dimensionChanged) {\n                    changes.push({\n                        id: node.id,\n                        type: 'dimensions',\n                        dimensions,\n                    });\n                    if (node.expandParent && node.parentId) {\n                        parentExpandChildren.push({\n                            id: node.id,\n                            parentId: node.parentId,\n                            rect: nodeToRect(node, nodeOrigin),\n                        });\n                    }\n                }\n            }\n        }\n    }\n    if (parentExpandChildren.length > 0) {\n        const parentExpandChanges = handleExpandParent(parentExpandChildren, nodeLookup, parentLookup, nodeOrigin);\n        changes.push(...parentExpandChanges);\n    }\n    return { changes, updatedInternals };\n}\nasync function panBy({ delta, panZoom, transform, translateExtent, width, height, }) {\n    if (!panZoom || (!delta.x && !delta.y)) {\n        return Promise.resolve(false);\n    }\n    const nextViewport = await panZoom.setViewportConstrained({\n        x: transform[0] + delta.x,\n        y: transform[1] + delta.y,\n        zoom: transform[2],\n    }, [\n        [0, 0],\n        [width, height],\n    ], translateExtent);\n    const transformChanged = !!nextViewport &&\n        (nextViewport.x !== transform[0] || nextViewport.y !== transform[1] || nextViewport.k !== transform[2]);\n    return Promise.resolve(transformChanged);\n}\nfunction updateConnectionLookup(connectionLookup, edgeLookup, edges) {\n    connectionLookup.clear();\n    edgeLookup.clear();\n    for (const edge of edges) {\n        const { source, target, sourceHandle = null, targetHandle = null } = edge;\n        const sourceKey = `${source}-source-${sourceHandle}`;\n        const targetKey = `${target}-target-${targetHandle}`;\n        const prevSource = connectionLookup.get(sourceKey) || new Map();\n        const prevTarget = connectionLookup.get(targetKey) || new Map();\n        const connection = { edgeId: edge.id, source, target, sourceHandle, targetHandle };\n        edgeLookup.set(edge.id, edge);\n        connectionLookup.set(sourceKey, prevSource.set(`${target}-${targetHandle}`, connection));\n        connectionLookup.set(targetKey, prevTarget.set(`${source}-${sourceHandle}`, connection));\n    }\n}\n\nfunction shallowNodeData(a, b) {\n    if (a === null || b === null) {\n        return false;\n    }\n    const _a = Array.isArray(a) ? a : [a];\n    const _b = Array.isArray(b) ? b : [b];\n    if (_a.length !== _b.length) {\n        return false;\n    }\n    for (let i = 0; i < _a.length; i++) {\n        if (_a[i].id !== _b[i].id || _a[i].type !== _b[i].type || !Object.is(_a[i].data, _b[i].data)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction isParentSelected(node, nodeLookup) {\n    if (!node.parentId) {\n        return false;\n    }\n    const parentNode = nodeLookup.get(node.parentId);\n    if (!parentNode) {\n        return false;\n    }\n    if (parentNode.selected) {\n        return true;\n    }\n    return isParentSelected(parentNode, nodeLookup);\n}\nfunction hasSelector(target, selector, domNode) {\n    let current = target;\n    do {\n        if (current?.matches(selector))\n            return true;\n        if (current === domNode)\n            return false;\n        current = current.parentElement;\n    } while (current);\n    return false;\n}\n// looks for all selected nodes and created a NodeDragItem for each of them\nfunction getDragItems(nodeLookup, nodesDraggable, mousePos, nodeId) {\n    const dragItems = new Map();\n    for (const [id, node] of nodeLookup) {\n        if ((node.selected || node.id === nodeId) &&\n            (!node.parentId || !isParentSelected(node, nodeLookup)) &&\n            (node.draggable || (nodesDraggable && typeof node.draggable === 'undefined'))) {\n            const internalNode = nodeLookup.get(id);\n            if (internalNode) {\n                dragItems.set(id, {\n                    id,\n                    position: internalNode.position || { x: 0, y: 0 },\n                    distance: {\n                        x: mousePos.x - internalNode.internals.positionAbsolute.x,\n                        y: mousePos.y - internalNode.internals.positionAbsolute.y,\n                    },\n                    extent: internalNode.extent,\n                    parentId: internalNode.parentId,\n                    origin: internalNode.origin,\n                    expandParent: internalNode.expandParent,\n                    internals: {\n                        positionAbsolute: internalNode.internals.positionAbsolute || { x: 0, y: 0 },\n                    },\n                    measured: {\n                        width: internalNode.measured.width ?? 0,\n                        height: internalNode.measured.height ?? 0,\n                    },\n                });\n            }\n        }\n    }\n    return dragItems;\n}\n// returns two params:\n// 1. the dragged node (or the first of the list, if we are dragging a node selection)\n// 2. array of selected nodes (for multi selections)\nfunction getEventHandlerParams({ nodeId, dragItems, nodeLookup, dragging = true, }) {\n    const nodesFromDragItems = [];\n    for (const [id, dragItem] of dragItems) {\n        const node = nodeLookup.get(id)?.internals.userNode;\n        if (node) {\n            nodesFromDragItems.push({\n                ...node,\n                position: dragItem.position,\n                dragging,\n            });\n        }\n    }\n    if (!nodeId) {\n        return [nodesFromDragItems[0], nodesFromDragItems];\n    }\n    const node = nodeLookup.get(nodeId)?.internals.userNode;\n    return [\n        !node\n            ? nodesFromDragItems[0]\n            : {\n                ...node,\n                position: dragItems.get(nodeId)?.position || node.position,\n                dragging,\n            },\n        nodesFromDragItems,\n    ];\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction XYDrag({ onNodeMouseDown, getStoreItems, onDragStart, onDrag, onDragStop, }) {\n    let lastPos = { x: null, y: null };\n    let autoPanId = 0;\n    let dragItems = new Map();\n    let autoPanStarted = false;\n    let mousePosition = { x: 0, y: 0 };\n    let containerBounds = null;\n    let dragStarted = false;\n    let d3Selection = null;\n    let abortDrag = false; // prevents unintentional dragging on multitouch\n    // public functions\n    function update({ noDragClassName, handleSelector, domNode, isSelectable, nodeId, nodeClickDistance = 0, }) {\n        d3Selection = select(domNode);\n        function updateNodes({ x, y }, dragEvent) {\n            const { nodeLookup, nodeExtent, snapGrid, snapToGrid, nodeOrigin, onNodeDrag, onSelectionDrag, onError, updateNodePositions, } = getStoreItems();\n            lastPos = { x, y };\n            let hasChange = false;\n            let nodesBox = { x: 0, y: 0, x2: 0, y2: 0 };\n            if (dragItems.size > 1 && nodeExtent) {\n                const rect = getInternalNodesBounds(dragItems);\n                nodesBox = rectToBox(rect);\n            }\n            for (const [id, dragItem] of dragItems) {\n                if (!nodeLookup.has(id)) {\n                    // if the node is not in the nodeLookup anymore, it was probably deleted while dragging\n                    // and we don't need to update it anymore\n                    continue;\n                }\n                let nextPosition = { x: x - dragItem.distance.x, y: y - dragItem.distance.y };\n                if (snapToGrid) {\n                    nextPosition = snapPosition(nextPosition, snapGrid);\n                }\n                // if there is selection with multiple nodes and a node extent is set, we need to adjust the node extent for each node\n                // based on its position so that the node stays at it's position relative to the selection.\n                let adjustedNodeExtent = [\n                    [nodeExtent[0][0], nodeExtent[0][1]],\n                    [nodeExtent[1][0], nodeExtent[1][1]],\n                ];\n                if (dragItems.size > 1 && nodeExtent && !dragItem.extent) {\n                    const { positionAbsolute } = dragItem.internals;\n                    const x1 = positionAbsolute.x - nodesBox.x + nodeExtent[0][0];\n                    const x2 = positionAbsolute.x + dragItem.measured.width - nodesBox.x2 + nodeExtent[1][0];\n                    const y1 = positionAbsolute.y - nodesBox.y + nodeExtent[0][1];\n                    const y2 = positionAbsolute.y + dragItem.measured.height - nodesBox.y2 + nodeExtent[1][1];\n                    adjustedNodeExtent = [\n                        [x1, y1],\n                        [x2, y2],\n                    ];\n                }\n                const { position, positionAbsolute } = calculateNodePosition({\n                    nodeId: id,\n                    nextPosition,\n                    nodeLookup,\n                    nodeExtent: adjustedNodeExtent,\n                    nodeOrigin,\n                    onError,\n                });\n                // we want to make sure that we only fire a change event when there is a change\n                hasChange = hasChange || dragItem.position.x !== position.x || dragItem.position.y !== position.y;\n                dragItem.position = position;\n                dragItem.internals.positionAbsolute = positionAbsolute;\n            }\n            if (!hasChange) {\n                return;\n            }\n            updateNodePositions(dragItems, true);\n            if (dragEvent && (onDrag || onNodeDrag || (!nodeId && onSelectionDrag))) {\n                const [currentNode, currentNodes] = getEventHandlerParams({\n                    nodeId,\n                    dragItems,\n                    nodeLookup,\n                });\n                onDrag?.(dragEvent, dragItems, currentNode, currentNodes);\n                onNodeDrag?.(dragEvent, currentNode, currentNodes);\n                if (!nodeId) {\n                    onSelectionDrag?.(dragEvent, currentNodes);\n                }\n            }\n        }\n        async function autoPan() {\n            if (!containerBounds) {\n                return;\n            }\n            const { transform, panBy, autoPanSpeed } = getStoreItems();\n            const [xMovement, yMovement] = calcAutoPan(mousePosition, containerBounds, autoPanSpeed);\n            if (xMovement !== 0 || yMovement !== 0) {\n                lastPos.x = (lastPos.x ?? 0) - xMovement / transform[2];\n                lastPos.y = (lastPos.y ?? 0) - yMovement / transform[2];\n                if (await panBy({ x: xMovement, y: yMovement })) {\n                    updateNodes(lastPos, null);\n                }\n            }\n            autoPanId = requestAnimationFrame(autoPan);\n        }\n        function startDrag(event) {\n            const { nodeLookup, multiSelectionActive, nodesDraggable, transform, snapGrid, snapToGrid, selectNodesOnDrag, onNodeDragStart, onSelectionDragStart, unselectNodesAndEdges, } = getStoreItems();\n            dragStarted = true;\n            if ((!selectNodesOnDrag || !isSelectable) && !multiSelectionActive && nodeId) {\n                if (!nodeLookup.get(nodeId)?.selected) {\n                    // we need to reset selected nodes when selectNodesOnDrag=false\n                    unselectNodesAndEdges();\n                }\n            }\n            if (isSelectable && selectNodesOnDrag && nodeId) {\n                onNodeMouseDown?.(nodeId);\n            }\n            const pointerPos = getPointerPosition(event.sourceEvent, { transform, snapGrid, snapToGrid, containerBounds });\n            lastPos = pointerPos;\n            dragItems = getDragItems(nodeLookup, nodesDraggable, pointerPos, nodeId);\n            if (dragItems.size > 0 && (onDragStart || onNodeDragStart || (!nodeId && onSelectionDragStart))) {\n                const [currentNode, currentNodes] = getEventHandlerParams({\n                    nodeId,\n                    dragItems,\n                    nodeLookup,\n                });\n                onDragStart?.(event.sourceEvent, dragItems, currentNode, currentNodes);\n                onNodeDragStart?.(event.sourceEvent, currentNode, currentNodes);\n                if (!nodeId) {\n                    onSelectionDragStart?.(event.sourceEvent, currentNodes);\n                }\n            }\n        }\n        const d3DragInstance = drag()\n            .clickDistance(nodeClickDistance)\n            .on('start', (event) => {\n            const { domNode, nodeDragThreshold, transform, snapGrid, snapToGrid } = getStoreItems();\n            containerBounds = domNode?.getBoundingClientRect() || null;\n            abortDrag = false;\n            if (nodeDragThreshold === 0) {\n                startDrag(event);\n            }\n            const pointerPos = getPointerPosition(event.sourceEvent, { transform, snapGrid, snapToGrid, containerBounds });\n            lastPos = pointerPos;\n            mousePosition = getEventPosition(event.sourceEvent, containerBounds);\n        })\n            .on('drag', (event) => {\n            const { autoPanOnNodeDrag, transform, snapGrid, snapToGrid, nodeDragThreshold, nodeLookup } = getStoreItems();\n            const pointerPos = getPointerPosition(event.sourceEvent, { transform, snapGrid, snapToGrid, containerBounds });\n            if ((event.sourceEvent.type === 'touchmove' && event.sourceEvent.touches.length > 1) ||\n                // if user deletes a node while dragging, we need to abort the drag to prevent errors\n                (nodeId && !nodeLookup.has(nodeId))) {\n                abortDrag = true;\n            }\n            if (abortDrag) {\n                return;\n            }\n            if (!autoPanStarted && autoPanOnNodeDrag && dragStarted) {\n                autoPanStarted = true;\n                autoPan();\n            }\n            if (!dragStarted) {\n                const x = pointerPos.xSnapped - (lastPos.x ?? 0);\n                const y = pointerPos.ySnapped - (lastPos.y ?? 0);\n                const distance = Math.sqrt(x * x + y * y);\n                if (distance > nodeDragThreshold) {\n                    startDrag(event);\n                }\n            }\n            // skip events without movement\n            if ((lastPos.x !== pointerPos.xSnapped || lastPos.y !== pointerPos.ySnapped) && dragItems && dragStarted) {\n                // dragEvent = event.sourceEvent as MouseEvent;\n                mousePosition = getEventPosition(event.sourceEvent, containerBounds);\n                updateNodes(pointerPos, event.sourceEvent);\n            }\n        })\n            .on('end', (event) => {\n            if (!dragStarted || abortDrag) {\n                return;\n            }\n            autoPanStarted = false;\n            dragStarted = false;\n            cancelAnimationFrame(autoPanId);\n            if (dragItems.size > 0) {\n                const { nodeLookup, updateNodePositions, onNodeDragStop, onSelectionDragStop } = getStoreItems();\n                updateNodePositions(dragItems, false);\n                if (onDragStop || onNodeDragStop || (!nodeId && onSelectionDragStop)) {\n                    const [currentNode, currentNodes] = getEventHandlerParams({\n                        nodeId,\n                        dragItems,\n                        nodeLookup,\n                        dragging: false,\n                    });\n                    onDragStop?.(event.sourceEvent, dragItems, currentNode, currentNodes);\n                    onNodeDragStop?.(event.sourceEvent, currentNode, currentNodes);\n                    if (!nodeId) {\n                        onSelectionDragStop?.(event.sourceEvent, currentNodes);\n                    }\n                }\n            }\n        })\n            .filter((event) => {\n            const target = event.target;\n            const isDraggable = !event.button &&\n                (!noDragClassName || !hasSelector(target, `.${noDragClassName}`, domNode)) &&\n                (!handleSelector || hasSelector(target, handleSelector, domNode));\n            return isDraggable;\n        });\n        d3Selection.call(d3DragInstance);\n    }\n    function destroy() {\n        d3Selection?.on('.drag', null);\n    }\n    return {\n        update,\n        destroy,\n    };\n}\n\nfunction getNodesWithinDistance(position, nodeLookup, distance) {\n    const nodes = [];\n    const rect = {\n        x: position.x - distance,\n        y: position.y - distance,\n        width: distance * 2,\n        height: distance * 2,\n    };\n    for (const node of nodeLookup.values()) {\n        if (getOverlappingArea(rect, nodeToRect(node)) > 0) {\n            nodes.push(node);\n        }\n    }\n    return nodes;\n}\n// this distance is used for the area around the user pointer\n// while doing a connection for finding the closest nodes\nconst ADDITIONAL_DISTANCE = 250;\nfunction getClosestHandle(position, connectionRadius, nodeLookup, fromHandle) {\n    let closestHandles = [];\n    let minDistance = Infinity;\n    const closeNodes = getNodesWithinDistance(position, nodeLookup, connectionRadius + ADDITIONAL_DISTANCE);\n    for (const node of closeNodes) {\n        const allHandles = [...(node.internals.handleBounds?.source ?? []), ...(node.internals.handleBounds?.target ?? [])];\n        for (const handle of allHandles) {\n            // if the handle is the same as the fromHandle we skip it\n            if (fromHandle.nodeId === handle.nodeId && fromHandle.type === handle.type && fromHandle.id === handle.id) {\n                continue;\n            }\n            // determine absolute position of the handle\n            const { x, y } = getHandlePosition(node, handle, handle.position, true);\n            const distance = Math.sqrt(Math.pow(x - position.x, 2) + Math.pow(y - position.y, 2));\n            if (distance > connectionRadius) {\n                continue;\n            }\n            if (distance < minDistance) {\n                closestHandles = [{ ...handle, x, y }];\n                minDistance = distance;\n            }\n            else if (distance === minDistance) {\n                // when multiple handles are on the same distance we collect all of them\n                closestHandles.push({ ...handle, x, y });\n            }\n        }\n    }\n    if (!closestHandles.length) {\n        return null;\n    }\n    // when multiple handles overlay each other we prefer the opposite handle\n    if (closestHandles.length > 1) {\n        const oppositeHandleType = fromHandle.type === 'source' ? 'target' : 'source';\n        return closestHandles.find((handle) => handle.type === oppositeHandleType) ?? closestHandles[0];\n    }\n    return closestHandles[0];\n}\nfunction getHandle(nodeId, handleType, handleId, nodeLookup, connectionMode, withAbsolutePosition = false) {\n    const node = nodeLookup.get(nodeId);\n    if (!node) {\n        return null;\n    }\n    const handles = connectionMode === 'strict'\n        ? node.internals.handleBounds?.[handleType]\n        : [...(node.internals.handleBounds?.source ?? []), ...(node.internals.handleBounds?.target ?? [])];\n    const handle = (handleId ? handles?.find((h) => h.id === handleId) : handles?.[0]) ?? null;\n    return handle && withAbsolutePosition\n        ? { ...handle, ...getHandlePosition(node, handle, handle.position, true) }\n        : handle;\n}\nfunction getHandleType(edgeUpdaterType, handleDomNode) {\n    if (edgeUpdaterType) {\n        return edgeUpdaterType;\n    }\n    else if (handleDomNode?.classList.contains('target')) {\n        return 'target';\n    }\n    else if (handleDomNode?.classList.contains('source')) {\n        return 'source';\n    }\n    return null;\n}\nfunction isConnectionValid(isInsideConnectionRadius, isHandleValid) {\n    let isValid = null;\n    if (isHandleValid) {\n        isValid = true;\n    }\n    else if (isInsideConnectionRadius && !isHandleValid) {\n        isValid = false;\n    }\n    return isValid;\n}\n\nconst alwaysValid = () => true;\nfunction onPointerDown(event, { connectionMode, connectionRadius, handleId, nodeId, edgeUpdaterType, isTarget, domNode, nodeLookup, lib, autoPanOnConnect, flowId, panBy, cancelConnection, onConnectStart, onConnect, onConnectEnd, isValidConnection = alwaysValid, onReconnectEnd, updateConnection, getTransform, getFromHandle, autoPanSpeed, }) {\n    // when xyflow is used inside a shadow root we can't use document\n    const doc = getHostForElement(event.target);\n    let autoPanId = 0;\n    let closestHandle;\n    const { x, y } = getEventPosition(event);\n    const clickedHandle = doc?.elementFromPoint(x, y);\n    const handleType = getHandleType(edgeUpdaterType, clickedHandle);\n    const containerBounds = domNode?.getBoundingClientRect();\n    if (!containerBounds || !handleType) {\n        return;\n    }\n    const fromHandleInternal = getHandle(nodeId, handleType, handleId, nodeLookup, connectionMode);\n    if (!fromHandleInternal) {\n        return;\n    }\n    let position = getEventPosition(event, containerBounds);\n    let autoPanStarted = false;\n    let connection = null;\n    let isValid = false;\n    let handleDomNode = null;\n    // when the user is moving the mouse close to the edge of the canvas while connecting we move the canvas\n    function autoPan() {\n        if (!autoPanOnConnect || !containerBounds) {\n            return;\n        }\n        const [x, y] = calcAutoPan(position, containerBounds, autoPanSpeed);\n        panBy({ x, y });\n        autoPanId = requestAnimationFrame(autoPan);\n    }\n    // Stays the same for all consecutive pointermove events\n    const fromHandle = {\n        ...fromHandleInternal,\n        nodeId,\n        type: handleType,\n        position: fromHandleInternal.position,\n    };\n    const fromNodeInternal = nodeLookup.get(nodeId);\n    const from = getHandlePosition(fromNodeInternal, fromHandle, Position.Left, true);\n    const newConnection = {\n        inProgress: true,\n        isValid: null,\n        from,\n        fromHandle,\n        fromPosition: fromHandle.position,\n        fromNode: fromNodeInternal,\n        to: position,\n        toHandle: null,\n        toPosition: oppositePosition[fromHandle.position],\n        toNode: null,\n    };\n    updateConnection(newConnection);\n    let previousConnection = newConnection;\n    onConnectStart?.(event, { nodeId, handleId, handleType });\n    function onPointerMove(event) {\n        if (!getFromHandle() || !fromHandle) {\n            onPointerUp(event);\n            return;\n        }\n        const transform = getTransform();\n        position = getEventPosition(event, containerBounds);\n        closestHandle = getClosestHandle(pointToRendererPoint(position, transform, false, [1, 1]), connectionRadius, nodeLookup, fromHandle);\n        if (!autoPanStarted) {\n            autoPan();\n            autoPanStarted = true;\n        }\n        const result = isValidHandle(event, {\n            handle: closestHandle,\n            connectionMode,\n            fromNodeId: nodeId,\n            fromHandleId: handleId,\n            fromType: isTarget ? 'target' : 'source',\n            isValidConnection,\n            doc,\n            lib,\n            flowId,\n            nodeLookup,\n        });\n        handleDomNode = result.handleDomNode;\n        connection = result.connection;\n        isValid = isConnectionValid(!!closestHandle, result.isValid);\n        const newConnection = {\n            // from stays the same\n            ...previousConnection,\n            isValid,\n            to: closestHandle && isValid\n                ? rendererPointToPoint({ x: closestHandle.x, y: closestHandle.y }, transform)\n                : position,\n            toHandle: result.toHandle,\n            toPosition: isValid && result.toHandle ? result.toHandle.position : oppositePosition[fromHandle.position],\n            toNode: result.toHandle ? nodeLookup.get(result.toHandle.nodeId) : null,\n        };\n        // we don't want to trigger an update when the connection\n        // is snapped to the same handle as before\n        if (isValid &&\n            closestHandle &&\n            previousConnection.toHandle &&\n            newConnection.toHandle &&\n            previousConnection.toHandle.type === newConnection.toHandle.type &&\n            previousConnection.toHandle.nodeId === newConnection.toHandle.nodeId &&\n            previousConnection.toHandle.id === newConnection.toHandle.id &&\n            previousConnection.to.x === newConnection.to.x &&\n            previousConnection.to.y === newConnection.to.y) {\n            return;\n        }\n        updateConnection(newConnection);\n        previousConnection = newConnection;\n    }\n    function onPointerUp(event) {\n        if ((closestHandle || handleDomNode) && connection && isValid) {\n            onConnect?.(connection);\n        }\n        // it's important to get a fresh reference from the store here\n        // in order to get the latest state of onConnectEnd\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { inProgress, ...connectionState } = previousConnection;\n        const finalConnectionState = {\n            ...connectionState,\n            toPosition: previousConnection.toHandle ? previousConnection.toPosition : null,\n        };\n        onConnectEnd?.(event, finalConnectionState);\n        if (edgeUpdaterType) {\n            onReconnectEnd?.(event, finalConnectionState);\n        }\n        cancelConnection();\n        cancelAnimationFrame(autoPanId);\n        autoPanStarted = false;\n        isValid = false;\n        connection = null;\n        handleDomNode = null;\n        doc.removeEventListener('mousemove', onPointerMove);\n        doc.removeEventListener('mouseup', onPointerUp);\n        doc.removeEventListener('touchmove', onPointerMove);\n        doc.removeEventListener('touchend', onPointerUp);\n    }\n    doc.addEventListener('mousemove', onPointerMove);\n    doc.addEventListener('mouseup', onPointerUp);\n    doc.addEventListener('touchmove', onPointerMove);\n    doc.addEventListener('touchend', onPointerUp);\n}\n// checks if  and returns connection in fom of an object { source: 123, target: 312 }\nfunction isValidHandle(event, { handle, connectionMode, fromNodeId, fromHandleId, fromType, doc, lib, flowId, isValidConnection = alwaysValid, nodeLookup, }) {\n    const isTarget = fromType === 'target';\n    const handleDomNode = handle\n        ? doc.querySelector(`.${lib}-flow__handle[data-id=\"${flowId}-${handle?.nodeId}-${handle?.id}-${handle?.type}\"]`)\n        : null;\n    const { x, y } = getEventPosition(event);\n    const handleBelow = doc.elementFromPoint(x, y);\n    // we always want to prioritize the handle below the mouse cursor over the closest distance handle,\n    // because it could be that the center of another handle is closer to the mouse pointer than the handle below the cursor\n    const handleToCheck = handleBelow?.classList.contains(`${lib}-flow__handle`) ? handleBelow : handleDomNode;\n    const result = {\n        handleDomNode: handleToCheck,\n        isValid: false,\n        connection: null,\n        toHandle: null,\n    };\n    if (handleToCheck) {\n        const handleType = getHandleType(undefined, handleToCheck);\n        const handleNodeId = handleToCheck.getAttribute('data-nodeid');\n        const handleId = handleToCheck.getAttribute('data-handleid');\n        const connectable = handleToCheck.classList.contains('connectable');\n        const connectableEnd = handleToCheck.classList.contains('connectableend');\n        if (!handleNodeId || !handleType) {\n            return result;\n        }\n        const connection = {\n            source: isTarget ? handleNodeId : fromNodeId,\n            sourceHandle: isTarget ? handleId : fromHandleId,\n            target: isTarget ? fromNodeId : handleNodeId,\n            targetHandle: isTarget ? fromHandleId : handleId,\n        };\n        result.connection = connection;\n        const isConnectable = connectable && connectableEnd;\n        // in strict mode we don't allow target to target or source to source connections\n        const isValid = isConnectable &&\n            (connectionMode === ConnectionMode.Strict\n                ? (isTarget && handleType === 'source') || (!isTarget && handleType === 'target')\n                : handleNodeId !== fromNodeId || handleId !== fromHandleId);\n        result.isValid = isValid && isValidConnection(connection);\n        result.toHandle = getHandle(handleNodeId, handleType, handleId, nodeLookup, connectionMode, false);\n    }\n    return result;\n}\nconst XYHandle = {\n    onPointerDown,\n    isValid: isValidHandle,\n};\n\nfunction XYMinimap({ domNode, panZoom, getTransform, getViewScale }) {\n    const selection = select(domNode);\n    function update({ translateExtent, width, height, zoomStep = 10, pannable = true, zoomable = true, inversePan = false, }) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const zoomHandler = (event) => {\n            const transform = getTransform();\n            if (event.sourceEvent.type !== 'wheel' || !panZoom) {\n                return;\n            }\n            const pinchDelta = -event.sourceEvent.deltaY *\n                (event.sourceEvent.deltaMode === 1 ? 0.05 : event.sourceEvent.deltaMode ? 1 : 0.002) *\n                zoomStep;\n            const nextZoom = transform[2] * Math.pow(2, pinchDelta);\n            panZoom.scaleTo(nextZoom);\n        };\n        let panStart = [0, 0];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const panStartHandler = (event) => {\n            if (event.sourceEvent.type === 'mousedown' || event.sourceEvent.type === 'touchstart') {\n                panStart = [\n                    event.sourceEvent.clientX ?? event.sourceEvent.touches[0].clientX,\n                    event.sourceEvent.clientY ?? event.sourceEvent.touches[0].clientY,\n                ];\n            }\n        };\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const panHandler = (event) => {\n            const transform = getTransform();\n            if ((event.sourceEvent.type !== 'mousemove' && event.sourceEvent.type !== 'touchmove') || !panZoom) {\n                return;\n            }\n            const panCurrent = [\n                event.sourceEvent.clientX ?? event.sourceEvent.touches[0].clientX,\n                event.sourceEvent.clientY ?? event.sourceEvent.touches[0].clientY,\n            ];\n            const panDelta = [panCurrent[0] - panStart[0], panCurrent[1] - panStart[1]];\n            panStart = panCurrent;\n            const moveScale = getViewScale() * Math.max(transform[2], Math.log(transform[2])) * (inversePan ? -1 : 1);\n            const position = {\n                x: transform[0] - panDelta[0] * moveScale,\n                y: transform[1] - panDelta[1] * moveScale,\n            };\n            const extent = [\n                [0, 0],\n                [width, height],\n            ];\n            panZoom.setViewportConstrained({\n                x: position.x,\n                y: position.y,\n                zoom: transform[2],\n            }, extent, translateExtent);\n        };\n        const zoomAndPanHandler = zoom()\n            .on('start', panStartHandler)\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            .on('zoom', pannable ? panHandler : null)\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            .on('zoom.wheel', zoomable ? zoomHandler : null);\n        selection.call(zoomAndPanHandler, {});\n    }\n    function destroy() {\n        selection.on('zoom', null);\n    }\n    return {\n        update,\n        destroy,\n        pointer,\n    };\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst viewChanged = (prevViewport, eventViewport) => prevViewport.x !== eventViewport.x || prevViewport.y !== eventViewport.y || prevViewport.zoom !== eventViewport.k;\nconst transformToViewport = (transform) => ({\n    x: transform.x,\n    y: transform.y,\n    zoom: transform.k,\n});\nconst viewportToTransform = ({ x, y, zoom }) => zoomIdentity.translate(x, y).scale(zoom);\nconst isWrappedWithClass = (event, className) => event.target.closest(`.${className}`);\nconst isRightClickPan = (panOnDrag, usedButton) => usedButton === 2 && Array.isArray(panOnDrag) && panOnDrag.includes(2);\nconst getD3Transition = (selection, duration = 0, onEnd = () => { }) => {\n    const hasDuration = typeof duration === 'number' && duration > 0;\n    if (!hasDuration) {\n        onEnd();\n    }\n    return hasDuration ? selection.transition().duration(duration).on('end', onEnd) : selection;\n};\nconst wheelDelta = (event) => {\n    const factor = event.ctrlKey && isMacOs() ? 10 : 1;\n    return -event.deltaY * (event.deltaMode === 1 ? 0.05 : event.deltaMode ? 1 : 0.002) * factor;\n};\n\nfunction createPanOnScrollHandler({ zoomPanValues, noWheelClassName, d3Selection, d3Zoom, panOnScrollMode, panOnScrollSpeed, zoomOnPinch, onPanZoomStart, onPanZoom, onPanZoomEnd, }) {\n    return (event) => {\n        if (isWrappedWithClass(event, noWheelClassName)) {\n            return false;\n        }\n        event.preventDefault();\n        event.stopImmediatePropagation();\n        const currentZoom = d3Selection.property('__zoom').k || 1;\n        // macos sets ctrlKey=true for pinch gesture on a trackpad\n        if (event.ctrlKey && zoomOnPinch) {\n            const point = pointer(event);\n            const pinchDelta = wheelDelta(event);\n            const zoom = currentZoom * Math.pow(2, pinchDelta);\n            // @ts-ignore\n            d3Zoom.scaleTo(d3Selection, zoom, point, event);\n            return;\n        }\n        // increase scroll speed in firefox\n        // firefox: deltaMode === 1; chrome: deltaMode === 0\n        const deltaNormalize = event.deltaMode === 1 ? 20 : 1;\n        let deltaX = panOnScrollMode === PanOnScrollMode.Vertical ? 0 : event.deltaX * deltaNormalize;\n        let deltaY = panOnScrollMode === PanOnScrollMode.Horizontal ? 0 : event.deltaY * deltaNormalize;\n        // this enables vertical scrolling with shift + scroll on windows\n        if (!isMacOs() && event.shiftKey && panOnScrollMode !== PanOnScrollMode.Vertical) {\n            deltaX = event.deltaY * deltaNormalize;\n            deltaY = 0;\n        }\n        d3Zoom.translateBy(d3Selection, -(deltaX / currentZoom) * panOnScrollSpeed, -(deltaY / currentZoom) * panOnScrollSpeed, \n        // @ts-ignore\n        { internal: true });\n        const nextViewport = transformToViewport(d3Selection.property('__zoom'));\n        clearTimeout(zoomPanValues.panScrollTimeout);\n        // for pan on scroll we need to handle the event calls on our own\n        // we can't use the start, zoom and end events from d3-zoom\n        // because start and move gets called on every scroll event and not once at the beginning\n        if (!zoomPanValues.isPanScrolling) {\n            zoomPanValues.isPanScrolling = true;\n            onPanZoomStart?.(event, nextViewport);\n        }\n        if (zoomPanValues.isPanScrolling) {\n            onPanZoom?.(event, nextViewport);\n            zoomPanValues.panScrollTimeout = setTimeout(() => {\n                onPanZoomEnd?.(event, nextViewport);\n                zoomPanValues.isPanScrolling = false;\n            }, 150);\n        }\n    };\n}\nfunction createZoomOnScrollHandler({ noWheelClassName, preventScrolling, d3ZoomHandler }) {\n    return function (event, d) {\n        // we still want to enable pinch zooming even if preventScrolling is set to false\n        const preventZoom = !preventScrolling && event.type === 'wheel' && !event.ctrlKey;\n        if (preventZoom || isWrappedWithClass(event, noWheelClassName)) {\n            return null;\n        }\n        event.preventDefault();\n        d3ZoomHandler.call(this, event, d);\n    };\n}\nfunction createPanZoomStartHandler({ zoomPanValues, onDraggingChange, onPanZoomStart }) {\n    return (event) => {\n        if (event.sourceEvent?.internal) {\n            return;\n        }\n        const viewport = transformToViewport(event.transform);\n        // we need to remember it here, because it's always 0 in the \"zoom\" event\n        zoomPanValues.mouseButton = event.sourceEvent?.button || 0;\n        zoomPanValues.isZoomingOrPanning = true;\n        zoomPanValues.prevViewport = viewport;\n        if (event.sourceEvent?.type === 'mousedown') {\n            onDraggingChange(true);\n        }\n        if (onPanZoomStart) {\n            onPanZoomStart?.(event.sourceEvent, viewport);\n        }\n    };\n}\nfunction createPanZoomHandler({ zoomPanValues, panOnDrag, onPaneContextMenu, onTransformChange, onPanZoom, }) {\n    return (event) => {\n        zoomPanValues.usedRightMouseButton = !!(onPaneContextMenu && isRightClickPan(panOnDrag, zoomPanValues.mouseButton ?? 0));\n        if (!event.sourceEvent?.sync) {\n            onTransformChange([event.transform.x, event.transform.y, event.transform.k]);\n        }\n        if (onPanZoom && !event.sourceEvent?.internal) {\n            onPanZoom?.(event.sourceEvent, transformToViewport(event.transform));\n        }\n    };\n}\nfunction createPanZoomEndHandler({ zoomPanValues, panOnDrag, panOnScroll, onDraggingChange, onPanZoomEnd, onPaneContextMenu, }) {\n    return (event) => {\n        if (event.sourceEvent?.internal) {\n            return;\n        }\n        zoomPanValues.isZoomingOrPanning = false;\n        if (onPaneContextMenu &&\n            isRightClickPan(panOnDrag, zoomPanValues.mouseButton ?? 0) &&\n            !zoomPanValues.usedRightMouseButton &&\n            event.sourceEvent) {\n            onPaneContextMenu(event.sourceEvent);\n        }\n        zoomPanValues.usedRightMouseButton = false;\n        onDraggingChange(false);\n        if (onPanZoomEnd && viewChanged(zoomPanValues.prevViewport, event.transform)) {\n            const viewport = transformToViewport(event.transform);\n            zoomPanValues.prevViewport = viewport;\n            clearTimeout(zoomPanValues.timerId);\n            zoomPanValues.timerId = setTimeout(() => {\n                onPanZoomEnd?.(event.sourceEvent, viewport);\n            }, \n            // we need a setTimeout for panOnScroll to supress multiple end events fired during scroll\n            panOnScroll ? 150 : 0);\n        }\n    };\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nfunction createFilter({ zoomActivationKeyPressed, zoomOnScroll, zoomOnPinch, panOnDrag, panOnScroll, zoomOnDoubleClick, userSelectionActive, noWheelClassName, noPanClassName, lib, }) {\n    return (event) => {\n        const zoomScroll = zoomActivationKeyPressed || zoomOnScroll;\n        const pinchZoom = zoomOnPinch && event.ctrlKey;\n        if (event.button === 1 &&\n            event.type === 'mousedown' &&\n            (isWrappedWithClass(event, `${lib}-flow__node`) || isWrappedWithClass(event, `${lib}-flow__edge`))) {\n            return true;\n        }\n        // if all interactions are disabled, we prevent all zoom events\n        if (!panOnDrag && !zoomScroll && !panOnScroll && !zoomOnDoubleClick && !zoomOnPinch) {\n            return false;\n        }\n        // during a selection we prevent all other interactions\n        if (userSelectionActive) {\n            return false;\n        }\n        // if the target element is inside an element with the nowheel class, we prevent zooming\n        if (isWrappedWithClass(event, noWheelClassName) && event.type === 'wheel') {\n            return false;\n        }\n        // if the target element is inside an element with the nopan class, we prevent panning\n        if (isWrappedWithClass(event, noPanClassName) &&\n            (event.type !== 'wheel' || (panOnScroll && event.type === 'wheel' && !zoomActivationKeyPressed))) {\n            return false;\n        }\n        if (!zoomOnPinch && event.ctrlKey && event.type === 'wheel') {\n            return false;\n        }\n        if (!zoomOnPinch && event.type === 'touchstart' && event.touches?.length > 1) {\n            event.preventDefault(); // if you manage to start with 2 touches, we prevent native zoom\n            return false;\n        }\n        // when there is no scroll handling enabled, we prevent all wheel events\n        if (!zoomScroll && !panOnScroll && !pinchZoom && event.type === 'wheel') {\n            return false;\n        }\n        // if the pane is not movable, we prevent dragging it with mousestart or touchstart\n        if (!panOnDrag && (event.type === 'mousedown' || event.type === 'touchstart')) {\n            return false;\n        }\n        // if the pane is only movable using allowed clicks\n        if (Array.isArray(panOnDrag) && !panOnDrag.includes(event.button) && event.type === 'mousedown') {\n            return false;\n        }\n        // We only allow right clicks if pan on drag is set to right click\n        const buttonAllowed = (Array.isArray(panOnDrag) && panOnDrag.includes(event.button)) || !event.button || event.button <= 1;\n        // default filter for d3-zoom\n        return (!event.ctrlKey || event.type === 'wheel') && buttonAllowed;\n    };\n}\n\nfunction XYPanZoom({ domNode, minZoom, maxZoom, paneClickDistance, translateExtent, viewport, onPanZoom, onPanZoomStart, onPanZoomEnd, onDraggingChange, }) {\n    const zoomPanValues = {\n        isZoomingOrPanning: false,\n        usedRightMouseButton: false,\n        prevViewport: { x: 0, y: 0, zoom: 0 },\n        mouseButton: 0,\n        timerId: undefined,\n        panScrollTimeout: undefined,\n        isPanScrolling: false,\n    };\n    const bbox = domNode.getBoundingClientRect();\n    const d3ZoomInstance = zoom()\n        .clickDistance(!isNumeric(paneClickDistance) || paneClickDistance < 0 ? 0 : paneClickDistance)\n        .scaleExtent([minZoom, maxZoom])\n        .translateExtent(translateExtent);\n    const d3Selection = select(domNode).call(d3ZoomInstance);\n    setViewportConstrained({\n        x: viewport.x,\n        y: viewport.y,\n        zoom: clamp(viewport.zoom, minZoom, maxZoom),\n    }, [\n        [0, 0],\n        [bbox.width, bbox.height],\n    ], translateExtent);\n    const d3ZoomHandler = d3Selection.on('wheel.zoom');\n    const d3DblClickZoomHandler = d3Selection.on('dblclick.zoom');\n    d3ZoomInstance.wheelDelta(wheelDelta);\n    function setTransform(transform, options) {\n        if (d3Selection) {\n            return new Promise((resolve) => {\n                d3ZoomInstance?.transform(getD3Transition(d3Selection, options?.duration, () => resolve(true)), transform);\n            });\n        }\n        return Promise.resolve(false);\n    }\n    // public functions\n    function update({ noWheelClassName, noPanClassName, onPaneContextMenu, userSelectionActive, panOnScroll, panOnDrag, panOnScrollMode, panOnScrollSpeed, preventScrolling, zoomOnPinch, zoomOnScroll, zoomOnDoubleClick, zoomActivationKeyPressed, lib, onTransformChange, }) {\n        if (userSelectionActive && !zoomPanValues.isZoomingOrPanning) {\n            destroy();\n        }\n        const isPanOnScroll = panOnScroll && !zoomActivationKeyPressed && !userSelectionActive;\n        const wheelHandler = isPanOnScroll\n            ? createPanOnScrollHandler({\n                zoomPanValues,\n                noWheelClassName,\n                d3Selection,\n                d3Zoom: d3ZoomInstance,\n                panOnScrollMode,\n                panOnScrollSpeed,\n                zoomOnPinch,\n                onPanZoomStart,\n                onPanZoom,\n                onPanZoomEnd,\n            })\n            : createZoomOnScrollHandler({\n                noWheelClassName,\n                preventScrolling,\n                d3ZoomHandler,\n            });\n        d3Selection.on('wheel.zoom', wheelHandler, { passive: false });\n        if (!userSelectionActive) {\n            // pan zoom start\n            const startHandler = createPanZoomStartHandler({\n                zoomPanValues,\n                onDraggingChange,\n                onPanZoomStart,\n            });\n            d3ZoomInstance.on('start', startHandler);\n            // pan zoom\n            const panZoomHandler = createPanZoomHandler({\n                zoomPanValues,\n                panOnDrag,\n                onPaneContextMenu: !!onPaneContextMenu,\n                onPanZoom,\n                onTransformChange,\n            });\n            d3ZoomInstance.on('zoom', panZoomHandler);\n            // pan zoom end\n            const panZoomEndHandler = createPanZoomEndHandler({\n                zoomPanValues,\n                panOnDrag,\n                panOnScroll,\n                onPaneContextMenu,\n                onPanZoomEnd,\n                onDraggingChange,\n            });\n            d3ZoomInstance.on('end', panZoomEndHandler);\n        }\n        const filter = createFilter({\n            zoomActivationKeyPressed,\n            panOnDrag,\n            zoomOnScroll,\n            panOnScroll,\n            zoomOnDoubleClick,\n            zoomOnPinch,\n            userSelectionActive,\n            noPanClassName,\n            noWheelClassName,\n            lib,\n        });\n        d3ZoomInstance.filter(filter);\n        // We cannot add zoomOnDoubleClick to the filter above because\n        // double tapping on touch screens circumvents the filter and\n        // dblclick.zoom is fired on the selection directly\n        if (zoomOnDoubleClick) {\n            d3Selection.on('dblclick.zoom', d3DblClickZoomHandler);\n        }\n        else {\n            d3Selection.on('dblclick.zoom', null);\n        }\n    }\n    function destroy() {\n        d3ZoomInstance.on('zoom', null);\n    }\n    async function setViewportConstrained(viewport, extent, translateExtent) {\n        const nextTransform = viewportToTransform(viewport);\n        const contrainedTransform = d3ZoomInstance?.constrain()(nextTransform, extent, translateExtent);\n        if (contrainedTransform) {\n            await setTransform(contrainedTransform);\n        }\n        return new Promise((resolve) => resolve(contrainedTransform));\n    }\n    async function setViewport(viewport, options) {\n        const nextTransform = viewportToTransform(viewport);\n        await setTransform(nextTransform, options);\n        return new Promise((resolve) => resolve(nextTransform));\n    }\n    function syncViewport(viewport) {\n        if (d3Selection) {\n            const nextTransform = viewportToTransform(viewport);\n            const currentTransform = d3Selection.property('__zoom');\n            if (currentTransform.k !== viewport.zoom ||\n                currentTransform.x !== viewport.x ||\n                currentTransform.y !== viewport.y) {\n                // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                // @ts-ignore\n                d3ZoomInstance?.transform(d3Selection, nextTransform, null, { sync: true });\n            }\n        }\n    }\n    function getViewport() {\n        const transform = d3Selection ? zoomTransform(d3Selection.node()) : { x: 0, y: 0, k: 1 };\n        return { x: transform.x, y: transform.y, zoom: transform.k };\n    }\n    function scaleTo(zoom, options) {\n        if (d3Selection) {\n            return new Promise((resolve) => {\n                d3ZoomInstance?.scaleTo(getD3Transition(d3Selection, options?.duration, () => resolve(true)), zoom);\n            });\n        }\n        return Promise.resolve(false);\n    }\n    function scaleBy(factor, options) {\n        if (d3Selection) {\n            return new Promise((resolve) => {\n                d3ZoomInstance?.scaleBy(getD3Transition(d3Selection, options?.duration, () => resolve(true)), factor);\n            });\n        }\n        return Promise.resolve(false);\n    }\n    function setScaleExtent(scaleExtent) {\n        d3ZoomInstance?.scaleExtent(scaleExtent);\n    }\n    function setTranslateExtent(translateExtent) {\n        d3ZoomInstance?.translateExtent(translateExtent);\n    }\n    function setClickDistance(distance) {\n        const validDistance = !isNumeric(distance) || distance < 0 ? 0 : distance;\n        d3ZoomInstance?.clickDistance(validDistance);\n    }\n    return {\n        update,\n        destroy,\n        setViewport,\n        setViewportConstrained,\n        getViewport,\n        scaleTo,\n        scaleBy,\n        setScaleExtent,\n        setTranslateExtent,\n        syncViewport,\n        setClickDistance,\n    };\n}\n\nvar ResizeControlVariant;\n(function (ResizeControlVariant) {\n    ResizeControlVariant[\"Line\"] = \"line\";\n    ResizeControlVariant[\"Handle\"] = \"handle\";\n})(ResizeControlVariant || (ResizeControlVariant = {}));\nconst XY_RESIZER_HANDLE_POSITIONS = ['top-left', 'top-right', 'bottom-left', 'bottom-right'];\nconst XY_RESIZER_LINE_POSITIONS = ['top', 'right', 'bottom', 'left'];\n\n/**\n * Get all connecting edges for a given set of nodes\n * @param width - new width of the node\n * @param prevWidth - previous width of the node\n * @param height - new height of the node\n * @param prevHeight - previous height of the node\n * @param affectsX - whether to invert the resize direction for the x axis\n * @param affectsY - whether to invert the resize direction for the y axis\n * @returns array of two numbers representing the direction of the resize for each axis, 0 = no change, 1 = increase, -1 = decrease\n */\nfunction getResizeDirection({ width, prevWidth, height, prevHeight, affectsX, affectsY, }) {\n    const deltaWidth = width - prevWidth;\n    const deltaHeight = height - prevHeight;\n    const direction = [deltaWidth > 0 ? 1 : deltaWidth < 0 ? -1 : 0, deltaHeight > 0 ? 1 : deltaHeight < 0 ? -1 : 0];\n    if (deltaWidth && affectsX) {\n        direction[0] = direction[0] * -1;\n    }\n    if (deltaHeight && affectsY) {\n        direction[1] = direction[1] * -1;\n    }\n    return direction;\n}\n/**\n * Parses the control position that is being dragged to dimensions that are being resized\n * @param controlPosition - position of the control that is being dragged\n * @returns isHorizontal, isVertical, affectsX, affectsY,\n */\nfunction getControlDirection(controlPosition) {\n    const isHorizontal = controlPosition.includes('right') || controlPosition.includes('left');\n    const isVertical = controlPosition.includes('bottom') || controlPosition.includes('top');\n    const affectsX = controlPosition.includes('left');\n    const affectsY = controlPosition.includes('top');\n    return {\n        isHorizontal,\n        isVertical,\n        affectsX,\n        affectsY,\n    };\n}\nfunction getLowerExtentClamp(lowerExtent, lowerBound) {\n    return Math.max(0, lowerBound - lowerExtent);\n}\nfunction getUpperExtentClamp(upperExtent, upperBound) {\n    return Math.max(0, upperExtent - upperBound);\n}\nfunction getSizeClamp(size, minSize, maxSize) {\n    return Math.max(0, minSize - size, size - maxSize);\n}\nfunction xor(a, b) {\n    return a ? !b : b;\n}\n/**\n * Calculates new width & height and x & y of node after resize based on pointer position\n * @description - Buckle up, this is a chunky one... If you want to determine the new dimensions of a node after a resize,\n * you have to account for all possible restrictions: min/max width/height of the node, the maximum extent the node is allowed\n * to move in (in this case: resize into) determined by the parent node, the minimal extent determined by child nodes\n * with expandParent or extent: 'parent' set and oh yeah, these things also have to work with keepAspectRatio!\n * The way this is done is by determining how much each of these restricting actually restricts the resize and then applying the\n * strongest restriction. Because the resize affects x, y and width, height and width, height of a opposing side with keepAspectRatio,\n * the resize amount is always kept in distX & distY amount (the distance in mouse movement)\n * Instead of clamping each value, we first calculate the biggest 'clamp' (for the lack of a better name) and then apply it to all values.\n * To complicate things nodeOrigin has to be taken into account as well. This is done by offsetting the nodes as if their origin is [0, 0],\n * then calculating the restrictions as usual\n * @param startValues - starting values of resize\n * @param controlDirection - dimensions affected by the resize\n * @param pointerPosition - the current pointer position corrected for snapping\n * @param boundaries - minimum and maximum dimensions of the node\n * @param keepAspectRatio - prevent changes of asprect ratio\n * @returns x, y, width and height of the node after resize\n */\nfunction getDimensionsAfterResize(startValues, controlDirection, pointerPosition, boundaries, keepAspectRatio, nodeOrigin, extent, childExtent) {\n    let { affectsX, affectsY } = controlDirection;\n    const { isHorizontal, isVertical } = controlDirection;\n    const isDiagonal = isHorizontal && isVertical;\n    const { xSnapped, ySnapped } = pointerPosition;\n    const { minWidth, maxWidth, minHeight, maxHeight } = boundaries;\n    const { x: startX, y: startY, width: startWidth, height: startHeight, aspectRatio } = startValues;\n    let distX = Math.floor(isHorizontal ? xSnapped - startValues.pointerX : 0);\n    let distY = Math.floor(isVertical ? ySnapped - startValues.pointerY : 0);\n    const newWidth = startWidth + (affectsX ? -distX : distX);\n    const newHeight = startHeight + (affectsY ? -distY : distY);\n    const originOffsetX = -nodeOrigin[0] * startWidth;\n    const originOffsetY = -nodeOrigin[1] * startHeight;\n    // Check if maxWidth, minWWidth, maxHeight, minHeight are restricting the resize\n    let clampX = getSizeClamp(newWidth, minWidth, maxWidth);\n    let clampY = getSizeClamp(newHeight, minHeight, maxHeight);\n    // Check if extent is restricting the resize\n    if (extent) {\n        let xExtentClamp = 0;\n        let yExtentClamp = 0;\n        if (affectsX && distX < 0) {\n            xExtentClamp = getLowerExtentClamp(startX + distX + originOffsetX, extent[0][0]);\n        }\n        else if (!affectsX && distX > 0) {\n            xExtentClamp = getUpperExtentClamp(startX + newWidth + originOffsetX, extent[1][0]);\n        }\n        if (affectsY && distY < 0) {\n            yExtentClamp = getLowerExtentClamp(startY + distY + originOffsetY, extent[0][1]);\n        }\n        else if (!affectsY && distY > 0) {\n            yExtentClamp = getUpperExtentClamp(startY + newHeight + originOffsetY, extent[1][1]);\n        }\n        clampX = Math.max(clampX, xExtentClamp);\n        clampY = Math.max(clampY, yExtentClamp);\n    }\n    // Check if the child extent is restricting the resize\n    if (childExtent) {\n        let xExtentClamp = 0;\n        let yExtentClamp = 0;\n        if (affectsX && distX > 0) {\n            xExtentClamp = getUpperExtentClamp(startX + distX, childExtent[0][0]);\n        }\n        else if (!affectsX && distX < 0) {\n            xExtentClamp = getLowerExtentClamp(startX + newWidth, childExtent[1][0]);\n        }\n        if (affectsY && distY > 0) {\n            yExtentClamp = getUpperExtentClamp(startY + distY, childExtent[0][1]);\n        }\n        else if (!affectsY && distY < 0) {\n            yExtentClamp = getLowerExtentClamp(startY + newHeight, childExtent[1][1]);\n        }\n        clampX = Math.max(clampX, xExtentClamp);\n        clampY = Math.max(clampY, yExtentClamp);\n    }\n    // Check if the aspect ratio resizing of the other side is restricting the resize\n    if (keepAspectRatio) {\n        if (isHorizontal) {\n            // Check if the max dimensions might be restricting the resize\n            const aspectHeightClamp = getSizeClamp(newWidth / aspectRatio, minHeight, maxHeight) * aspectRatio;\n            clampX = Math.max(clampX, aspectHeightClamp);\n            // Check if the extent is restricting the resize\n            if (extent) {\n                let aspectExtentClamp = 0;\n                if ((!affectsX && !affectsY) || (affectsX && !affectsY && isDiagonal)) {\n                    aspectExtentClamp =\n                        getUpperExtentClamp(startY + originOffsetY + newWidth / aspectRatio, extent[1][1]) * aspectRatio;\n                }\n                else {\n                    aspectExtentClamp =\n                        getLowerExtentClamp(startY + originOffsetY + (affectsX ? distX : -distX) / aspectRatio, extent[0][1]) *\n                            aspectRatio;\n                }\n                clampX = Math.max(clampX, aspectExtentClamp);\n            }\n            // Check if the child extent is restricting the resize\n            if (childExtent) {\n                let aspectExtentClamp = 0;\n                if ((!affectsX && !affectsY) || (affectsX && !affectsY && isDiagonal)) {\n                    aspectExtentClamp = getLowerExtentClamp(startY + newWidth / aspectRatio, childExtent[1][1]) * aspectRatio;\n                }\n                else {\n                    aspectExtentClamp =\n                        getUpperExtentClamp(startY + (affectsX ? distX : -distX) / aspectRatio, childExtent[0][1]) * aspectRatio;\n                }\n                clampX = Math.max(clampX, aspectExtentClamp);\n            }\n        }\n        // Do the same thing for vertical resizing\n        if (isVertical) {\n            const aspectWidthClamp = getSizeClamp(newHeight * aspectRatio, minWidth, maxWidth) / aspectRatio;\n            clampY = Math.max(clampY, aspectWidthClamp);\n            if (extent) {\n                let aspectExtentClamp = 0;\n                if ((!affectsX && !affectsY) || (affectsY && !affectsX && isDiagonal)) {\n                    aspectExtentClamp =\n                        getUpperExtentClamp(startX + newHeight * aspectRatio + originOffsetX, extent[1][0]) / aspectRatio;\n                }\n                else {\n                    aspectExtentClamp =\n                        getLowerExtentClamp(startX + (affectsY ? distY : -distY) * aspectRatio + originOffsetX, extent[0][0]) /\n                            aspectRatio;\n                }\n                clampY = Math.max(clampY, aspectExtentClamp);\n            }\n            if (childExtent) {\n                let aspectExtentClamp = 0;\n                if ((!affectsX && !affectsY) || (affectsY && !affectsX && isDiagonal)) {\n                    aspectExtentClamp = getLowerExtentClamp(startX + newHeight * aspectRatio, childExtent[1][0]) / aspectRatio;\n                }\n                else {\n                    aspectExtentClamp =\n                        getUpperExtentClamp(startX + (affectsY ? distY : -distY) * aspectRatio, childExtent[0][0]) / aspectRatio;\n                }\n                clampY = Math.max(clampY, aspectExtentClamp);\n            }\n        }\n    }\n    distY = distY + (distY < 0 ? clampY : -clampY);\n    distX = distX + (distX < 0 ? clampX : -clampX);\n    if (keepAspectRatio) {\n        if (isDiagonal) {\n            if (newWidth > newHeight * aspectRatio) {\n                distY = (xor(affectsX, affectsY) ? -distX : distX) / aspectRatio;\n            }\n            else {\n                distX = (xor(affectsX, affectsY) ? -distY : distY) * aspectRatio;\n            }\n        }\n        else {\n            if (isHorizontal) {\n                distY = distX / aspectRatio;\n                affectsY = affectsX;\n            }\n            else {\n                distX = distY * aspectRatio;\n                affectsX = affectsY;\n            }\n        }\n    }\n    const x = affectsX ? startX + distX : startX;\n    const y = affectsY ? startY + distY : startY;\n    return {\n        width: startWidth + (affectsX ? -distX : distX),\n        height: startHeight + (affectsY ? -distY : distY),\n        x: nodeOrigin[0] * distX * (!affectsX ? 1 : -1) + x,\n        y: nodeOrigin[1] * distY * (!affectsY ? 1 : -1) + y,\n    };\n}\n\nconst initPrevValues = { width: 0, height: 0, x: 0, y: 0 };\nconst initStartValues = {\n    ...initPrevValues,\n    pointerX: 0,\n    pointerY: 0,\n    aspectRatio: 1,\n};\nfunction nodeToParentExtent(node) {\n    return [\n        [0, 0],\n        [node.measured.width, node.measured.height],\n    ];\n}\nfunction nodeToChildExtent(child, parent, nodeOrigin) {\n    const x = parent.position.x + child.position.x;\n    const y = parent.position.y + child.position.y;\n    const width = child.measured.width ?? 0;\n    const height = child.measured.height ?? 0;\n    const originOffsetX = nodeOrigin[0] * width;\n    const originOffsetY = nodeOrigin[1] * height;\n    return [\n        [x - originOffsetX, y - originOffsetY],\n        [x + width - originOffsetX, y + height - originOffsetY],\n    ];\n}\nfunction XYResizer({ domNode, nodeId, getStoreItems, onChange, onEnd }) {\n    const selection = select(domNode);\n    function update({ controlPosition, boundaries, keepAspectRatio, onResizeStart, onResize, onResizeEnd, shouldResize, }) {\n        let prevValues = { ...initPrevValues };\n        let startValues = { ...initStartValues };\n        const controlDirection = getControlDirection(controlPosition);\n        let node = undefined;\n        let containerBounds = null;\n        let childNodes = [];\n        let parentNode = undefined; // Needed to fix expandParent\n        let parentExtent = undefined;\n        let childExtent = undefined;\n        const dragHandler = drag()\n            .on('start', (event) => {\n            const { nodeLookup, transform, snapGrid, snapToGrid, nodeOrigin, paneDomNode } = getStoreItems();\n            node = nodeLookup.get(nodeId);\n            if (!node) {\n                return;\n            }\n            containerBounds = paneDomNode?.getBoundingClientRect() ?? null;\n            const { xSnapped, ySnapped } = getPointerPosition(event.sourceEvent, {\n                transform,\n                snapGrid,\n                snapToGrid,\n                containerBounds,\n            });\n            prevValues = {\n                width: node.measured.width ?? 0,\n                height: node.measured.height ?? 0,\n                x: node.position.x ?? 0,\n                y: node.position.y ?? 0,\n            };\n            startValues = {\n                ...prevValues,\n                pointerX: xSnapped,\n                pointerY: ySnapped,\n                aspectRatio: prevValues.width / prevValues.height,\n            };\n            parentNode = undefined;\n            if (node.parentId && (node.extent === 'parent' || node.expandParent)) {\n                parentNode = nodeLookup.get(node.parentId);\n                parentExtent = parentNode && node.extent === 'parent' ? nodeToParentExtent(parentNode) : undefined;\n            }\n            // Collect all child nodes to correct their relative positions when top/left changes\n            // Determine largest minimal extent the parent node is allowed to resize to\n            childNodes = [];\n            childExtent = undefined;\n            for (const [childId, child] of nodeLookup) {\n                if (child.parentId === nodeId) {\n                    childNodes.push({\n                        id: childId,\n                        position: { ...child.position },\n                        extent: child.extent,\n                    });\n                    if (child.extent === 'parent' || child.expandParent) {\n                        const extent = nodeToChildExtent(child, node, child.origin ?? nodeOrigin);\n                        if (childExtent) {\n                            childExtent = [\n                                [Math.min(extent[0][0], childExtent[0][0]), Math.min(extent[0][1], childExtent[0][1])],\n                                [Math.max(extent[1][0], childExtent[1][0]), Math.max(extent[1][1], childExtent[1][1])],\n                            ];\n                        }\n                        else {\n                            childExtent = extent;\n                        }\n                    }\n                }\n            }\n            onResizeStart?.(event, { ...prevValues });\n        })\n            .on('drag', (event) => {\n            const { transform, snapGrid, snapToGrid, nodeOrigin: storeNodeOrigin } = getStoreItems();\n            const pointerPosition = getPointerPosition(event.sourceEvent, {\n                transform,\n                snapGrid,\n                snapToGrid,\n                containerBounds,\n            });\n            const childChanges = [];\n            if (!node) {\n                return;\n            }\n            const { x: prevX, y: prevY, width: prevWidth, height: prevHeight } = prevValues;\n            const change = {};\n            const nodeOrigin = node.origin ?? storeNodeOrigin;\n            const { width, height, x, y } = getDimensionsAfterResize(startValues, controlDirection, pointerPosition, boundaries, keepAspectRatio, nodeOrigin, parentExtent, childExtent);\n            const isWidthChange = width !== prevWidth;\n            const isHeightChange = height !== prevHeight;\n            const isXPosChange = x !== prevX && isWidthChange;\n            const isYPosChange = y !== prevY && isHeightChange;\n            if (!isXPosChange && !isYPosChange && !isWidthChange && !isHeightChange) {\n                return;\n            }\n            if (isXPosChange || isYPosChange || nodeOrigin[0] === 1 || nodeOrigin[1] === 1) {\n                change.x = isXPosChange ? x : prevValues.x;\n                change.y = isYPosChange ? y : prevValues.y;\n                prevValues.x = change.x;\n                prevValues.y = change.y;\n                // when top/left changes, correct the relative positions of child nodes\n                // so that they stay in the same position\n                if (childNodes.length > 0) {\n                    const xChange = x - prevX;\n                    const yChange = y - prevY;\n                    for (const childNode of childNodes) {\n                        childNode.position = {\n                            x: childNode.position.x - xChange + nodeOrigin[0] * (width - prevWidth),\n                            y: childNode.position.y - yChange + nodeOrigin[1] * (height - prevHeight),\n                        };\n                        childChanges.push(childNode);\n                    }\n                }\n            }\n            if (isWidthChange || isHeightChange) {\n                change.width = isWidthChange ? width : prevValues.width;\n                change.height = isHeightChange ? height : prevValues.height;\n                prevValues.width = change.width;\n                prevValues.height = change.height;\n            }\n            // Fix expandParent when resizing from top/left\n            if (parentNode && node.expandParent) {\n                const xLimit = nodeOrigin[0] * (change.width ?? 0);\n                if (change.x && change.x < xLimit) {\n                    prevValues.x = xLimit;\n                    startValues.x = startValues.x - (change.x - xLimit);\n                }\n                const yLimit = nodeOrigin[1] * (change.height ?? 0);\n                if (change.y && change.y < yLimit) {\n                    prevValues.y = yLimit;\n                    startValues.y = startValues.y - (change.y - yLimit);\n                }\n            }\n            const direction = getResizeDirection({\n                width: prevValues.width,\n                prevWidth,\n                height: prevValues.height,\n                prevHeight,\n                affectsX: controlDirection.affectsX,\n                affectsY: controlDirection.affectsY,\n            });\n            const nextValues = { ...prevValues, direction };\n            const callResize = shouldResize?.(event, nextValues);\n            if (callResize === false) {\n                return;\n            }\n            onResize?.(event, nextValues);\n            onChange(change, childChanges);\n        })\n            .on('end', (event) => {\n            onResizeEnd?.(event, { ...prevValues });\n            onEnd?.();\n        });\n        selection.call(dragHandler);\n    }\n    function destroy() {\n        selection.on('.drag', null);\n    }\n    return {\n        update,\n        destroy,\n    };\n}\n\nexport { ConnectionLineType, ConnectionMode, MarkerType, PanOnScrollMode, Position, ResizeControlVariant, SelectionMode, XYDrag, XYHandle, XYMinimap, XYPanZoom, XYResizer, XY_RESIZER_HANDLE_POSITIONS, XY_RESIZER_LINE_POSITIONS, addEdge, adoptUserNodes, areConnectionMapsEqual, boxToRect, calcAutoPan, calculateNodePosition, clamp, clampPosition, clampPositionToParent, createMarkerIds, devWarn, elementSelectionKeys, errorMessages, evaluateAbsolutePosition, fitView, getBezierEdgeCenter, getBezierPath, getBoundsOfBoxes, getBoundsOfRects, getConnectedEdges, getConnectionStatus, getDimensions, getEdgeCenter, getEdgePosition, getElementsToRemove, getElevatedEdgeZIndex, getEventPosition, getFitViewNodes, getHandleBounds, getHandlePosition, getHostForElement, getIncomers, getInternalNodesBounds, getMarkerId, getNodeDimensions, getNodePositionWithOrigin, getNodeToolbarTransform, getNodesBounds, getNodesInside, getOutgoers, getOverlappingArea, getPointerPosition, getSmoothStepPath, getStraightPath, getViewportForBounds, handleConnectionChange, handleExpandParent, infiniteExtent, initialConnection, isCoordinateExtent, isEdgeBase, isEdgeVisible, isInputDOMNode, isInternalNodeBase, isMacOs, isMouseEvent, isNodeBase, isNumeric, isRectObject, nodeHasDimensions, nodeToBox, nodeToRect, oppositePosition, panBy, pointToRendererPoint, reconnectEdge, rectToBox, rendererPointToPoint, shallowNodeData, snapPosition, updateAbsolutePositions, updateConnectionLookup, updateNodeInternals };\n","import ReactExports from 'react';\nimport useSyncExternalStoreExports from 'use-sync-external-store/shim/with-selector.js';\nimport { createStore } from 'zustand/vanilla';\n\nconst { useDebugValue } = ReactExports;\nconst { useSyncExternalStoreWithSelector } = useSyncExternalStoreExports;\nconst identity = (arg) => arg;\nfunction useStoreWithEqualityFn(api, selector = identity, equalityFn) {\n  const slice = useSyncExternalStoreWithSelector(\n    api.subscribe,\n    api.getState,\n    api.getServerState || api.getInitialState,\n    selector,\n    equalityFn\n  );\n  useDebugValue(slice);\n  return slice;\n}\nconst createWithEqualityFnImpl = (createState, defaultEqualityFn) => {\n  const api = createStore(createState);\n  const useBoundStoreWithEqualityFn = (selector, equalityFn = defaultEqualityFn) => useStoreWithEqualityFn(api, selector, equalityFn);\n  Object.assign(useBoundStoreWithEqualityFn, api);\n  return useBoundStoreWithEqualityFn;\n};\nconst createWithEqualityFn = (createState, defaultEqualityFn) => createState ? createWithEqualityFnImpl(createState, defaultEqualityFn) : createWithEqualityFnImpl;\n\nexport { createWithEqualityFn, useStoreWithEqualityFn };\n","function shallow$1(objA, objB) {\n  if (Object.is(objA, objB)) {\n    return true;\n  }\n  if (typeof objA !== \"object\" || objA === null || typeof objB !== \"object\" || objB === null) {\n    return false;\n  }\n  if (objA instanceof Map && objB instanceof Map) {\n    if (objA.size !== objB.size) return false;\n    for (const [key, value] of objA) {\n      if (!Object.is(value, objB.get(key))) {\n        return false;\n      }\n    }\n    return true;\n  }\n  if (objA instanceof Set && objB instanceof Set) {\n    if (objA.size !== objB.size) return false;\n    for (const value of objA) {\n      if (!objB.has(value)) {\n        return false;\n      }\n    }\n    return true;\n  }\n  const keysA = Object.keys(objA);\n  if (keysA.length !== Object.keys(objB).length) {\n    return false;\n  }\n  for (const keyA of keysA) {\n    if (!Object.prototype.hasOwnProperty.call(objB, keyA) || !Object.is(objA[keyA], objB[keyA])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nvar shallow = (objA, objB) => {\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n    console.warn(\n      \"[DEPRECATED] Default export is deprecated. Instead use `import { shallow } from 'zustand/shallow'`.\"\n    );\n  }\n  return shallow$1(objA, objB);\n};\n\nexport { shallow as default, shallow$1 as shallow };\n","\"use client\"\nimport { jsxs, Fragment, jsx } from 'react/jsx-runtime';\nimport cc from 'classcat';\nimport { errorMessages, infiniteExtent, isInputDOMNode, getFitViewNodes, getDimensions, fitView, getViewportForBounds, pointToRendererPoint, rendererPointToPoint, isNodeBase, isEdgeBase, getElementsToRemove, isRectObject, nodeToRect, getOverlappingArea, getNodesBounds, evaluateAbsolutePosition, XYPanZoom, PanOnScrollMode, SelectionMode, getEventPosition, getNodesInside, XYDrag, snapPosition, calculateNodePosition, Position, ConnectionMode, isMouseEvent, XYHandle, getHostForElement, addEdge, getInternalNodesBounds, isNumeric, nodeHasDimensions, getNodeDimensions, elementSelectionKeys, isEdgeVisible, MarkerType, createMarkerIds, getBezierEdgeCenter, getSmoothStepPath, getStraightPath, getBezierPath, getEdgePosition, getElevatedEdgeZIndex, getMarkerId, getConnectionStatus, ConnectionLineType, updateConnectionLookup, adoptUserNodes, initialConnection, devWarn, updateNodeInternals, updateAbsolutePositions, handleExpandParent, panBy, isMacOs, areConnectionMapsEqual, handleConnectionChange, shallowNodeData, XYMinimap, getBoundsOfRects, ResizeControlVariant, XYResizer, XY_RESIZER_LINE_POSITIONS, XY_RESIZER_HANDLE_POSITIONS, getNodeToolbarTransform } from '@xyflow/system';\nexport { ConnectionLineType, ConnectionMode, MarkerType, PanOnScrollMode, Position, SelectionMode, addEdge, getBezierEdgeCenter, getBezierPath, getConnectedEdges, getEdgeCenter, getIncomers, getNodesBounds, getOutgoers, getSmoothStepPath, getStraightPath, getViewportForBounds, reconnectEdge } from '@xyflow/system';\nimport { createContext, useContext, useMemo, forwardRef, useEffect, useRef, useState, useLayoutEffect, useCallback, memo } from 'react';\nimport { useStoreWithEqualityFn, createWithEqualityFn } from 'zustand/traditional';\nimport { shallow } from 'zustand/shallow';\nimport { createPortal } from 'react-dom';\n\nconst StoreContext = createContext(null);\nconst Provider$1 = StoreContext.Provider;\n\nconst zustandErrorMessage = errorMessages['error001']();\n/**\n * Hook for accessing the internal store. Should only be used in rare cases.\n *\n * @public\n * @param selector\n * @param equalityFn\n * @returns The selected state slice\n *\n * @example\n * const nodes = useStore((state: ReactFlowState<MyNodeType>) => state.nodes);\n *\n */\nfunction useStore(selector, equalityFn) {\n    const store = useContext(StoreContext);\n    if (store === null) {\n        throw new Error(zustandErrorMessage);\n    }\n    return useStoreWithEqualityFn(store, selector, equalityFn);\n}\nfunction useStoreApi() {\n    const store = useContext(StoreContext);\n    if (store === null) {\n        throw new Error(zustandErrorMessage);\n    }\n    return useMemo(() => ({\n        getState: store.getState,\n        setState: store.setState,\n        subscribe: store.subscribe,\n    }), [store]);\n}\n\nconst style = { display: 'none' };\nconst ariaLiveStyle = {\n    position: 'absolute',\n    width: 1,\n    height: 1,\n    margin: -1,\n    border: 0,\n    padding: 0,\n    overflow: 'hidden',\n    clip: 'rect(0px, 0px, 0px, 0px)',\n    clipPath: 'inset(100%)',\n};\nconst ARIA_NODE_DESC_KEY = 'react-flow__node-desc';\nconst ARIA_EDGE_DESC_KEY = 'react-flow__edge-desc';\nconst ARIA_LIVE_MESSAGE = 'react-flow__aria-live';\nconst selector$o = (s) => s.ariaLiveMessage;\nfunction AriaLiveMessage({ rfId }) {\n    const ariaLiveMessage = useStore(selector$o);\n    return (jsx(\"div\", { id: `${ARIA_LIVE_MESSAGE}-${rfId}`, \"aria-live\": \"assertive\", \"aria-atomic\": \"true\", style: ariaLiveStyle, children: ariaLiveMessage }));\n}\nfunction A11yDescriptions({ rfId, disableKeyboardA11y }) {\n    return (jsxs(Fragment, { children: [jsxs(\"div\", { id: `${ARIA_NODE_DESC_KEY}-${rfId}`, style: style, children: [\"Press enter or space to select a node.\", !disableKeyboardA11y && 'You can then use the arrow keys to move the node around.', \" Press delete to remove it and escape to cancel.\", ' '] }), jsx(\"div\", { id: `${ARIA_EDGE_DESC_KEY}-${rfId}`, style: style, children: \"Press enter or space to select an edge. You can then press delete to remove it or escape to cancel.\" }), !disableKeyboardA11y && jsx(AriaLiveMessage, { rfId: rfId })] }));\n}\n\nconst selector$n = (s) => (s.userSelectionActive ? 'none' : 'all');\nconst Panel = forwardRef(({ position = 'top-left', children, className, style, ...rest }, ref) => {\n    const pointerEvents = useStore(selector$n);\n    const positionClasses = `${position}`.split('-');\n    return (jsx(\"div\", { className: cc(['react-flow__panel', className, ...positionClasses]), style: { ...style, pointerEvents }, ref: ref, ...rest, children: children }));\n});\n\nfunction Attribution({ proOptions, position = 'bottom-right' }) {\n    if (proOptions?.hideAttribution) {\n        return null;\n    }\n    return (jsx(Panel, { position: position, className: \"react-flow__attribution\", \"data-message\": \"Please only hide this attribution when you are subscribed to React Flow Pro: https://pro.reactflow.dev\", children: jsx(\"a\", { href: \"https://reactflow.dev\", target: \"_blank\", rel: \"noopener noreferrer\", \"aria-label\": \"React Flow attribution\", children: \"React Flow\" }) }));\n}\n\nconst selector$m = (s) => {\n    const selectedNodes = [];\n    const selectedEdges = [];\n    for (const [, node] of s.nodeLookup) {\n        if (node.selected) {\n            selectedNodes.push(node.internals.userNode);\n        }\n    }\n    for (const [, edge] of s.edgeLookup) {\n        if (edge.selected) {\n            selectedEdges.push(edge);\n        }\n    }\n    return { selectedNodes, selectedEdges };\n};\nconst selectId = (obj) => obj.id;\nfunction areEqual(a, b) {\n    return (shallow(a.selectedNodes.map(selectId), b.selectedNodes.map(selectId)) &&\n        shallow(a.selectedEdges.map(selectId), b.selectedEdges.map(selectId)));\n}\nfunction SelectionListenerInner({ onSelectionChange }) {\n    const store = useStoreApi();\n    const { selectedNodes, selectedEdges } = useStore(selector$m, areEqual);\n    useEffect(() => {\n        const params = { nodes: selectedNodes, edges: selectedEdges };\n        onSelectionChange?.(params);\n        store.getState().onSelectionChangeHandlers.forEach((fn) => fn(params));\n    }, [selectedNodes, selectedEdges, onSelectionChange]);\n    return null;\n}\nconst changeSelector = (s) => !!s.onSelectionChangeHandlers;\nfunction SelectionListener({ onSelectionChange }) {\n    const storeHasSelectionChangeHandlers = useStore(changeSelector);\n    if (onSelectionChange || storeHasSelectionChangeHandlers) {\n        return jsx(SelectionListenerInner, { onSelectionChange: onSelectionChange });\n    }\n    return null;\n}\n\nconst defaultNodeOrigin = [0, 0];\nconst defaultViewport = { x: 0, y: 0, zoom: 1 };\n\n/*\n * This component helps us to update the store with the values coming from the user.\n * We distinguish between values we can update directly with `useDirectStoreUpdater` (like `snapGrid`)\n * and values that have a dedicated setter function in the store (like `setNodes`).\n */\n// these fields exist in the global store and we need to keep them up to date\nconst reactFlowFieldsToTrack = [\n    'nodes',\n    'edges',\n    'defaultNodes',\n    'defaultEdges',\n    'onConnect',\n    'onConnectStart',\n    'onConnectEnd',\n    'onClickConnectStart',\n    'onClickConnectEnd',\n    'nodesDraggable',\n    'nodesConnectable',\n    'nodesFocusable',\n    'edgesFocusable',\n    'edgesReconnectable',\n    'elevateNodesOnSelect',\n    'elevateEdgesOnSelect',\n    'minZoom',\n    'maxZoom',\n    'nodeExtent',\n    'onNodesChange',\n    'onEdgesChange',\n    'elementsSelectable',\n    'connectionMode',\n    'snapGrid',\n    'snapToGrid',\n    'translateExtent',\n    'connectOnClick',\n    'defaultEdgeOptions',\n    'fitView',\n    'fitViewOptions',\n    'onNodesDelete',\n    'onEdgesDelete',\n    'onDelete',\n    'onNodeDrag',\n    'onNodeDragStart',\n    'onNodeDragStop',\n    'onSelectionDrag',\n    'onSelectionDragStart',\n    'onSelectionDragStop',\n    'onMoveStart',\n    'onMove',\n    'onMoveEnd',\n    'noPanClassName',\n    'nodeOrigin',\n    'autoPanOnConnect',\n    'autoPanOnNodeDrag',\n    'onError',\n    'connectionRadius',\n    'isValidConnection',\n    'selectNodesOnDrag',\n    'nodeDragThreshold',\n    'onBeforeDelete',\n    'debug',\n    'autoPanSpeed',\n    'paneClickDistance',\n];\n// rfId doesn't exist in ReactFlowProps, but it's one of the fields we want to update\nconst fieldsToTrack = [...reactFlowFieldsToTrack, 'rfId'];\nconst selector$l = (s) => ({\n    setNodes: s.setNodes,\n    setEdges: s.setEdges,\n    setMinZoom: s.setMinZoom,\n    setMaxZoom: s.setMaxZoom,\n    setTranslateExtent: s.setTranslateExtent,\n    setNodeExtent: s.setNodeExtent,\n    reset: s.reset,\n    setDefaultNodesAndEdges: s.setDefaultNodesAndEdges,\n    setPaneClickDistance: s.setPaneClickDistance,\n});\nconst initPrevValues = {\n    // these are values that are also passed directly to other components\n    // than the StoreUpdater. We can reduce the number of setStore calls\n    // by setting the same values here as prev fields.\n    translateExtent: infiniteExtent,\n    nodeOrigin: defaultNodeOrigin,\n    minZoom: 0.5,\n    maxZoom: 2,\n    elementsSelectable: true,\n    noPanClassName: 'nopan',\n    rfId: '1',\n    paneClickDistance: 0,\n};\nfunction StoreUpdater(props) {\n    const { setNodes, setEdges, setMinZoom, setMaxZoom, setTranslateExtent, setNodeExtent, reset, setDefaultNodesAndEdges, setPaneClickDistance, } = useStore(selector$l, shallow);\n    const store = useStoreApi();\n    useEffect(() => {\n        setDefaultNodesAndEdges(props.defaultNodes, props.defaultEdges);\n        return () => {\n            // when we reset the store we also need to reset the previous fields\n            previousFields.current = initPrevValues;\n            reset();\n        };\n    }, []);\n    const previousFields = useRef(initPrevValues);\n    useEffect(() => {\n        for (const fieldName of fieldsToTrack) {\n            const fieldValue = props[fieldName];\n            const previousFieldValue = previousFields.current[fieldName];\n            if (fieldValue === previousFieldValue)\n                continue;\n            if (typeof props[fieldName] === 'undefined')\n                continue;\n            // Custom handling with dedicated setters for some fields\n            if (fieldName === 'nodes')\n                setNodes(fieldValue);\n            else if (fieldName === 'edges')\n                setEdges(fieldValue);\n            else if (fieldName === 'minZoom')\n                setMinZoom(fieldValue);\n            else if (fieldName === 'maxZoom')\n                setMaxZoom(fieldValue);\n            else if (fieldName === 'translateExtent')\n                setTranslateExtent(fieldValue);\n            else if (fieldName === 'nodeExtent')\n                setNodeExtent(fieldValue);\n            else if (fieldName === 'paneClickDistance')\n                setPaneClickDistance(fieldValue);\n            // Renamed fields\n            else if (fieldName === 'fitView')\n                store.setState({ fitViewOnInit: fieldValue });\n            else if (fieldName === 'fitViewOptions')\n                store.setState({ fitViewOnInitOptions: fieldValue });\n            // General case\n            else\n                store.setState({ [fieldName]: fieldValue });\n        }\n        previousFields.current = props;\n    }, \n    // Only re-run the effect if one of the fields we track changes\n    fieldsToTrack.map((fieldName) => props[fieldName]));\n    return null;\n}\n\nfunction getMediaQuery() {\n    if (typeof window === 'undefined' || !window.matchMedia) {\n        return null;\n    }\n    return window.matchMedia('(prefers-color-scheme: dark)');\n}\n/**\n * Hook for receiving the current color mode class 'dark' or 'light'.\n *\n * @internal\n * @param colorMode - The color mode to use ('dark', 'light' or 'system')\n */\nfunction useColorModeClass(colorMode) {\n    const [colorModeClass, setColorModeClass] = useState(colorMode === 'system' ? null : colorMode);\n    useEffect(() => {\n        if (colorMode !== 'system') {\n            setColorModeClass(colorMode);\n            return;\n        }\n        const mediaQuery = getMediaQuery();\n        const updateColorModeClass = () => setColorModeClass(mediaQuery?.matches ? 'dark' : 'light');\n        updateColorModeClass();\n        mediaQuery?.addEventListener('change', updateColorModeClass);\n        return () => {\n            mediaQuery?.removeEventListener('change', updateColorModeClass);\n        };\n    }, [colorMode]);\n    return colorModeClass !== null ? colorModeClass : getMediaQuery()?.matches ? 'dark' : 'light';\n}\n\nconst defaultDoc = typeof document !== 'undefined' ? document : null;\n/**\n * Hook for handling key events.\n *\n * @public\n * @param param.keyCode - The key code (string or array of strings) to use\n * @param param.options - Options\n * @returns boolean\n */\nfunction useKeyPress(\n// the keycode can be a string 'a' or an array of strings ['a', 'a+d']\n// a string means a single key 'a' or a combination when '+' is used 'a+d'\n// an array means different possibilites. Explainer: ['a', 'd+s'] here the\n// user can use the single key 'a' or the combination 'd' + 's'\nkeyCode = null, options = { target: defaultDoc, actInsideInputWithModifier: true }) {\n    const [keyPressed, setKeyPressed] = useState(false);\n    // we need to remember if a modifier key is pressed in order to track it\n    const modifierPressed = useRef(false);\n    // we need to remember the pressed keys in order to support combinations\n    const pressedKeys = useRef(new Set([]));\n    // keyCodes = array with single keys [['a']] or key combinations [['a', 's']]\n    // keysToWatch = array with all keys flattened ['a', 'd', 'ShiftLeft']\n    // used to check if we store event.code or event.key. When the code is in the list of keysToWatch\n    // we use the code otherwise the key. Explainer: When you press the left \"command\" key, the code is \"MetaLeft\"\n    // and the key is \"Meta\". We want users to be able to pass keys and codes so we assume that the key is meant when\n    // we can't find it in the list of keysToWatch.\n    const [keyCodes, keysToWatch] = useMemo(() => {\n        if (keyCode !== null) {\n            const keyCodeArr = Array.isArray(keyCode) ? keyCode : [keyCode];\n            const keys = keyCodeArr\n                .filter((kc) => typeof kc === 'string')\n                // we first replace all '+' with '\\n'  which we will use to split the keys on\n                // then we replace '\\n\\n' with '\\n+', this way we can also support the combination 'key++'\n                // in the end we simply split on '\\n' to get the key array\n                .map((kc) => kc.replace('+', '\\n').replace('\\n\\n', '\\n+').split('\\n'));\n            const keysFlat = keys.reduce((res, item) => res.concat(...item), []);\n            return [keys, keysFlat];\n        }\n        return [[], []];\n    }, [keyCode]);\n    useEffect(() => {\n        const target = options?.target || defaultDoc;\n        if (keyCode !== null) {\n            const downHandler = (event) => {\n                modifierPressed.current = event.ctrlKey || event.metaKey || event.shiftKey;\n                const preventAction = (!modifierPressed.current || (modifierPressed.current && !options.actInsideInputWithModifier)) &&\n                    isInputDOMNode(event);\n                if (preventAction) {\n                    return false;\n                }\n                const keyOrCode = useKeyOrCode(event.code, keysToWatch);\n                pressedKeys.current.add(event[keyOrCode]);\n                if (isMatchingKey(keyCodes, pressedKeys.current, false)) {\n                    event.preventDefault();\n                    setKeyPressed(true);\n                }\n            };\n            const upHandler = (event) => {\n                const preventAction = (!modifierPressed.current || (modifierPressed.current && !options.actInsideInputWithModifier)) &&\n                    isInputDOMNode(event);\n                if (preventAction) {\n                    return false;\n                }\n                const keyOrCode = useKeyOrCode(event.code, keysToWatch);\n                if (isMatchingKey(keyCodes, pressedKeys.current, true)) {\n                    setKeyPressed(false);\n                    pressedKeys.current.clear();\n                }\n                else {\n                    pressedKeys.current.delete(event[keyOrCode]);\n                }\n                // fix for Mac: when cmd key is pressed, keyup is not triggered for any other key, see: https://stackoverflow.com/questions/27380018/when-cmd-key-is-kept-pressed-keyup-is-not-triggered-for-any-other-key\n                if (event.key === 'Meta') {\n                    pressedKeys.current.clear();\n                }\n                modifierPressed.current = false;\n            };\n            const resetHandler = () => {\n                pressedKeys.current.clear();\n                setKeyPressed(false);\n            };\n            target?.addEventListener('keydown', downHandler);\n            target?.addEventListener('keyup', upHandler);\n            window.addEventListener('blur', resetHandler);\n            window.addEventListener('contextmenu', resetHandler);\n            return () => {\n                target?.removeEventListener('keydown', downHandler);\n                target?.removeEventListener('keyup', upHandler);\n                window.removeEventListener('blur', resetHandler);\n                window.removeEventListener('contextmenu', resetHandler);\n            };\n        }\n    }, [keyCode, setKeyPressed]);\n    return keyPressed;\n}\n// utils\nfunction isMatchingKey(keyCodes, pressedKeys, isUp) {\n    return (keyCodes\n        // we only want to compare same sizes of keyCode definitions\n        // and pressed keys. When the user specified 'Meta' as a key somewhere\n        // this would also be truthy without this filter when user presses 'Meta' + 'r'\n        .filter((keys) => isUp || keys.length === pressedKeys.size)\n        // since we want to support multiple possibilities only one of the\n        // combinations need to be part of the pressed keys\n        .some((keys) => keys.every((k) => pressedKeys.has(k))));\n}\nfunction useKeyOrCode(eventCode, keysToWatch) {\n    return keysToWatch.includes(eventCode) ? 'code' : 'key';\n}\n\n/**\n * Hook for getting viewport helper functions.\n *\n * @internal\n * @returns viewport helper functions\n */\nconst useViewportHelper = () => {\n    const store = useStoreApi();\n    return useMemo(() => {\n        return {\n            zoomIn: (options) => {\n                const { panZoom } = store.getState();\n                return panZoom ? panZoom.scaleBy(1.2, { duration: options?.duration }) : Promise.resolve(false);\n            },\n            zoomOut: (options) => {\n                const { panZoom } = store.getState();\n                return panZoom ? panZoom.scaleBy(1 / 1.2, { duration: options?.duration }) : Promise.resolve(false);\n            },\n            zoomTo: (zoomLevel, options) => {\n                const { panZoom } = store.getState();\n                return panZoom ? panZoom.scaleTo(zoomLevel, { duration: options?.duration }) : Promise.resolve(false);\n            },\n            getZoom: () => store.getState().transform[2],\n            setViewport: async (viewport, options) => {\n                const { transform: [tX, tY, tZoom], panZoom, } = store.getState();\n                if (!panZoom) {\n                    return Promise.resolve(false);\n                }\n                await panZoom.setViewport({\n                    x: viewport.x ?? tX,\n                    y: viewport.y ?? tY,\n                    zoom: viewport.zoom ?? tZoom,\n                }, { duration: options?.duration });\n                return Promise.resolve(true);\n            },\n            getViewport: () => {\n                const [x, y, zoom] = store.getState().transform;\n                return { x, y, zoom };\n            },\n            fitView: (options) => {\n                const { nodeLookup, minZoom, maxZoom, panZoom, domNode } = store.getState();\n                if (!panZoom || !domNode) {\n                    return Promise.resolve(false);\n                }\n                const fitViewNodes = getFitViewNodes(nodeLookup, options);\n                const { width, height } = getDimensions(domNode);\n                return fitView({\n                    nodes: fitViewNodes,\n                    width,\n                    height,\n                    minZoom,\n                    maxZoom,\n                    panZoom,\n                }, options);\n            },\n            setCenter: async (x, y, options) => {\n                const { width, height, maxZoom, panZoom } = store.getState();\n                const nextZoom = typeof options?.zoom !== 'undefined' ? options.zoom : maxZoom;\n                const centerX = width / 2 - x * nextZoom;\n                const centerY = height / 2 - y * nextZoom;\n                if (!panZoom) {\n                    return Promise.resolve(false);\n                }\n                await panZoom.setViewport({\n                    x: centerX,\n                    y: centerY,\n                    zoom: nextZoom,\n                }, { duration: options?.duration });\n                return Promise.resolve(true);\n            },\n            fitBounds: async (bounds, options) => {\n                const { width, height, minZoom, maxZoom, panZoom } = store.getState();\n                const viewport = getViewportForBounds(bounds, width, height, minZoom, maxZoom, options?.padding ?? 0.1);\n                if (!panZoom) {\n                    return Promise.resolve(false);\n                }\n                await panZoom.setViewport(viewport, { duration: options?.duration });\n                return Promise.resolve(true);\n            },\n            screenToFlowPosition: (clientPosition, options = { snapToGrid: true }) => {\n                const { transform, snapGrid, domNode } = store.getState();\n                if (!domNode) {\n                    return clientPosition;\n                }\n                const { x: domX, y: domY } = domNode.getBoundingClientRect();\n                const correctedPosition = {\n                    x: clientPosition.x - domX,\n                    y: clientPosition.y - domY,\n                };\n                return pointToRendererPoint(correctedPosition, transform, options.snapToGrid, snapGrid);\n            },\n            flowToScreenPosition: (flowPosition) => {\n                const { transform, domNode } = store.getState();\n                if (!domNode) {\n                    return flowPosition;\n                }\n                const { x: domX, y: domY } = domNode.getBoundingClientRect();\n                const rendererPosition = rendererPointToPoint(flowPosition, transform);\n                return {\n                    x: rendererPosition.x + domX,\n                    y: rendererPosition.y + domY,\n                };\n            },\n        };\n    }, []);\n};\n\n// This function applies changes to nodes or edges that are triggered by React Flow internally.\n// When you drag a node for example, React Flow will send a position change update.\n// This function then applies the changes and returns the updated elements.\nfunction applyChanges(changes, elements) {\n    const updatedElements = [];\n    // By storing a map of changes for each element, we can a quick lookup as we\n    // iterate over the elements array!\n    const changesMap = new Map();\n    const addItemChanges = [];\n    for (const change of changes) {\n        if (change.type === 'add') {\n            addItemChanges.push(change);\n            continue;\n        }\n        else if (change.type === 'remove' || change.type === 'replace') {\n            // For a 'remove' change we can safely ignore any other changes queued for\n            // the same element, it's going to be removed anyway!\n            changesMap.set(change.id, [change]);\n        }\n        else {\n            const elementChanges = changesMap.get(change.id);\n            if (elementChanges) {\n                // If we have some changes queued already, we can do a mutable update of\n                // that array and save ourselves some copying.\n                elementChanges.push(change);\n            }\n            else {\n                changesMap.set(change.id, [change]);\n            }\n        }\n    }\n    for (const element of elements) {\n        const changes = changesMap.get(element.id);\n        // When there are no changes for an element we can just push it unmodified,\n        // no need to copy it.\n        if (!changes) {\n            updatedElements.push(element);\n            continue;\n        }\n        // If we have a 'remove' change queued, it'll be the only change in the array\n        if (changes[0].type === 'remove') {\n            continue;\n        }\n        if (changes[0].type === 'replace') {\n            updatedElements.push({ ...changes[0].item });\n            continue;\n        }\n        // For other types of changes, we want to start with a shallow copy of the\n        // object so React knows this element has changed. Sequential changes will\n        /// each _mutate_ this object, so there's only ever one copy.\n        const updatedElement = { ...element };\n        for (const change of changes) {\n            applyChange(change, updatedElement);\n        }\n        updatedElements.push(updatedElement);\n    }\n    // we need to wait for all changes to be applied before adding new items\n    // to be able to add them at the correct index\n    if (addItemChanges.length) {\n        addItemChanges.forEach((change) => {\n            if (change.index !== undefined) {\n                updatedElements.splice(change.index, 0, { ...change.item });\n            }\n            else {\n                updatedElements.push({ ...change.item });\n            }\n        });\n    }\n    return updatedElements;\n}\n// Applies a single change to an element. This is a *mutable* update.\nfunction applyChange(change, element) {\n    switch (change.type) {\n        case 'select': {\n            element.selected = change.selected;\n            break;\n        }\n        case 'position': {\n            if (typeof change.position !== 'undefined') {\n                element.position = change.position;\n            }\n            if (typeof change.dragging !== 'undefined') {\n                element.dragging = change.dragging;\n            }\n            break;\n        }\n        case 'dimensions': {\n            if (typeof change.dimensions !== 'undefined') {\n                element.measured ??= {};\n                element.measured.width = change.dimensions.width;\n                element.measured.height = change.dimensions.height;\n                if (change.setAttributes) {\n                    element.width = change.dimensions.width;\n                    element.height = change.dimensions.height;\n                }\n            }\n            if (typeof change.resizing === 'boolean') {\n                element.resizing = change.resizing;\n            }\n            break;\n        }\n    }\n}\n/**\n * Drop in function that applies node changes to an array of nodes.\n * @public\n * @remarks Various events on the <ReactFlow /> component can produce an {@link NodeChange} that describes how to update the edges of your flow in some way.\n If you don't need any custom behaviour, this util can be used to take an array of these changes and apply them to your edges.\n * @param changes - Array of changes to apply\n * @param nodes - Array of nodes to apply the changes to\n * @returns Array of updated nodes\n * @example\n *  const onNodesChange = useCallback(\n      (changes) => {\n        setNodes((oldNodes) => applyNodeChanges(changes, oldNodes));\n      },\n      [setNodes],\n    );\n  \n    return (\n      <ReactFLow nodes={nodes} edges={edges} onNodesChange={onNodesChange} />\n    );\n */\nfunction applyNodeChanges(changes, nodes) {\n    return applyChanges(changes, nodes);\n}\n/**\n * Drop in function that applies edge changes to an array of edges.\n * @public\n * @remarks Various events on the <ReactFlow /> component can produce an {@link EdgeChange} that describes how to update the edges of your flow in some way.\n If you don't need any custom behaviour, this util can be used to take an array of these changes and apply them to your edges.\n * @param changes - Array of changes to apply\n * @param edges - Array of edge to apply the changes to\n * @returns Array of updated edges\n * @example\n *  const onEdgesChange = useCallback(\n      (changes) => {\n        setEdges((oldEdges) => applyEdgeChanges(changes, oldEdges));\n      },\n      [setEdges],\n    );\n  \n    return (\n      <ReactFlow nodes={nodes} edges={edges} onEdgesChange={onEdgesChange} />\n    );\n */\nfunction applyEdgeChanges(changes, edges) {\n    return applyChanges(changes, edges);\n}\nfunction createSelectionChange(id, selected) {\n    return {\n        id,\n        type: 'select',\n        selected,\n    };\n}\nfunction getSelectionChanges(items, selectedIds = new Set(), mutateItem = false) {\n    const changes = [];\n    for (const [id, item] of items) {\n        const willBeSelected = selectedIds.has(id);\n        // we don't want to set all items to selected=false on the first selection\n        if (!(item.selected === undefined && !willBeSelected) && item.selected !== willBeSelected) {\n            if (mutateItem) {\n                // this hack is needed for nodes. When the user dragged a node, it's selected.\n                // When another node gets dragged, we need to deselect the previous one,\n                // in order to have only one selected node at a time - the onNodesChange callback comes too late here :/\n                item.selected = willBeSelected;\n            }\n            changes.push(createSelectionChange(item.id, willBeSelected));\n        }\n    }\n    return changes;\n}\nfunction getElementsDiffChanges({ items = [], lookup, }) {\n    const changes = [];\n    const itemsLookup = new Map(items.map((item) => [item.id, item]));\n    for (const [index, item] of items.entries()) {\n        const lookupItem = lookup.get(item.id);\n        const storeItem = lookupItem?.internals?.userNode ?? lookupItem;\n        if (storeItem !== undefined && storeItem !== item) {\n            changes.push({ id: item.id, item: item, type: 'replace' });\n        }\n        if (storeItem === undefined) {\n            changes.push({ item: item, type: 'add', index });\n        }\n    }\n    for (const [id] of lookup) {\n        const nextNode = itemsLookup.get(id);\n        if (nextNode === undefined) {\n            changes.push({ id, type: 'remove' });\n        }\n    }\n    return changes;\n}\nfunction elementToRemoveChange(item) {\n    return {\n        id: item.id,\n        type: 'remove',\n    };\n}\n\n/**\n * Test whether an object is useable as a Node\n * @public\n * @remarks In TypeScript this is a type guard that will narrow the type of whatever you pass in to Node if it returns true\n * @param element - The element to test\n * @returns A boolean indicating whether the element is an Node\n */\nconst isNode = (element) => isNodeBase(element);\n/**\n * Test whether an object is useable as an Edge\n * @public\n * @remarks In TypeScript this is a type guard that will narrow the type of whatever you pass in to Edge if it returns true\n * @param element - The element to test\n * @returns A boolean indicating whether the element is an Edge\n */\nconst isEdge = (element) => isEdgeBase(element);\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction fixedForwardRef(render) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return forwardRef(render);\n}\n\n// we need this hook to prevent a warning when using react-flow in SSR\nconst useIsomorphicLayoutEffect = typeof window !== 'undefined' ? useLayoutEffect : useEffect;\n\n/**\n * This hook returns a queue that can be used to batch updates.\n *\n * @param runQueue - a function that gets called when the queue is flushed\n * @internal\n *\n * @returns a Queue object\n */\nfunction useQueue(runQueue) {\n    // Because we're using a ref above, we need some way to let React know when to\n    // actually process the queue. We increment this number any time we mutate the\n    // queue, creating a new state to trigger the layout effect below.\n    // Using a boolean dirty flag here instead would lead to issues related to\n    // automatic batching. (https://github.com/xyflow/xyflow/issues/4779)\n    const [serial, setSerial] = useState(BigInt(0));\n    // A reference of all the batched updates to process before the next render. We\n    // want a reference here so multiple synchronous calls to `setNodes` etc can be\n    // batched together.\n    const [queue] = useState(() => createQueue(() => setSerial(n => n + BigInt(1))));\n    // Layout effects are guaranteed to run before the next render which means we\n    // shouldn't run into any issues with stale state or weird issues that come from\n    // rendering things one frame later than expected (we used to use `setTimeout`).\n    useIsomorphicLayoutEffect(() => {\n        const queueItems = queue.get();\n        if (queueItems.length) {\n            runQueue(queueItems);\n            queue.reset();\n        }\n    }, [serial]);\n    return queue;\n}\nfunction createQueue(cb) {\n    let queue = [];\n    return {\n        get: () => queue,\n        reset: () => {\n            queue = [];\n        },\n        push: (item) => {\n            queue.push(item);\n            cb();\n        },\n    };\n}\n\nconst BatchContext = createContext(null);\n/**\n * This is a context provider that holds and processes the node and edge update queues\n * that are needed to handle setNodes, addNodes, setEdges and addEdges.\n *\n * @internal\n */\nfunction BatchProvider({ children, }) {\n    const store = useStoreApi();\n    const nodeQueueHandler = useCallback((queueItems) => {\n        const { nodes = [], setNodes, hasDefaultNodes, onNodesChange, nodeLookup } = store.getState();\n        // This is essentially an `Array.reduce` in imperative clothing. Processing\n        // this queue is a relatively hot path so we'd like to avoid the overhead of\n        // array methods where we can.\n        let next = nodes;\n        for (const payload of queueItems) {\n            next = typeof payload === 'function' ? payload(next) : payload;\n        }\n        if (hasDefaultNodes) {\n            setNodes(next);\n        }\n        else if (onNodesChange) {\n            onNodesChange(getElementsDiffChanges({\n                items: next,\n                lookup: nodeLookup,\n            }));\n        }\n    }, []);\n    const nodeQueue = useQueue(nodeQueueHandler);\n    const edgeQueueHandler = useCallback((queueItems) => {\n        const { edges = [], setEdges, hasDefaultEdges, onEdgesChange, edgeLookup } = store.getState();\n        let next = edges;\n        for (const payload of queueItems) {\n            next = typeof payload === 'function' ? payload(next) : payload;\n        }\n        if (hasDefaultEdges) {\n            setEdges(next);\n        }\n        else if (onEdgesChange) {\n            onEdgesChange(getElementsDiffChanges({\n                items: next,\n                lookup: edgeLookup,\n            }));\n        }\n    }, []);\n    const edgeQueue = useQueue(edgeQueueHandler);\n    const value = useMemo(() => ({ nodeQueue, edgeQueue }), []);\n    return jsx(BatchContext.Provider, { value: value, children: children });\n}\nfunction useBatchContext() {\n    const batchContext = useContext(BatchContext);\n    if (!batchContext) {\n        throw new Error('useBatchContext must be used within a BatchProvider');\n    }\n    return batchContext;\n}\n\nconst selector$k = (s) => !!s.panZoom;\n/**\n * Hook for accessing the ReactFlow instance.\n *\n * @public\n * @returns ReactFlowInstance\n */\nfunction useReactFlow() {\n    const viewportHelper = useViewportHelper();\n    const store = useStoreApi();\n    const batchContext = useBatchContext();\n    const viewportInitialized = useStore(selector$k);\n    const generalHelper = useMemo(() => {\n        const getInternalNode = (id) => store.getState().nodeLookup.get(id);\n        const setNodes = (payload) => {\n            batchContext.nodeQueue.push(payload);\n        };\n        const setEdges = (payload) => {\n            batchContext.edgeQueue.push(payload);\n        };\n        const getNodeRect = (node) => {\n            const { nodeLookup, nodeOrigin } = store.getState();\n            const nodeToUse = isNode(node) ? node : nodeLookup.get(node.id);\n            const position = nodeToUse.parentId\n                ? evaluateAbsolutePosition(nodeToUse.position, nodeToUse.measured, nodeToUse.parentId, nodeLookup, nodeOrigin)\n                : nodeToUse.position;\n            const nodeWithPosition = {\n                ...nodeToUse,\n                position,\n                width: nodeToUse.measured?.width ?? nodeToUse.width,\n                height: nodeToUse.measured?.height ?? nodeToUse.height,\n            };\n            return nodeToRect(nodeWithPosition);\n        };\n        const updateNode = (id, nodeUpdate, options = { replace: false }) => {\n            setNodes((prevNodes) => prevNodes.map((node) => {\n                if (node.id === id) {\n                    const nextNode = typeof nodeUpdate === 'function' ? nodeUpdate(node) : nodeUpdate;\n                    return options.replace && isNode(nextNode) ? nextNode : { ...node, ...nextNode };\n                }\n                return node;\n            }));\n        };\n        const updateEdge = (id, edgeUpdate, options = { replace: false }) => {\n            setEdges((prevEdges) => prevEdges.map((edge) => {\n                if (edge.id === id) {\n                    const nextEdge = typeof edgeUpdate === 'function' ? edgeUpdate(edge) : edgeUpdate;\n                    return options.replace && isEdge(nextEdge) ? nextEdge : { ...edge, ...nextEdge };\n                }\n                return edge;\n            }));\n        };\n        return {\n            getNodes: () => store.getState().nodes.map((n) => ({ ...n })),\n            getNode: (id) => getInternalNode(id)?.internals.userNode,\n            getInternalNode,\n            getEdges: () => {\n                const { edges = [] } = store.getState();\n                return edges.map((e) => ({ ...e }));\n            },\n            getEdge: (id) => store.getState().edgeLookup.get(id),\n            setNodes,\n            setEdges,\n            addNodes: (payload) => {\n                const newNodes = Array.isArray(payload) ? payload : [payload];\n                batchContext.nodeQueue.push((nodes) => [...nodes, ...newNodes]);\n            },\n            addEdges: (payload) => {\n                const newEdges = Array.isArray(payload) ? payload : [payload];\n                batchContext.edgeQueue.push((edges) => [...edges, ...newEdges]);\n            },\n            toObject: () => {\n                const { nodes = [], edges = [], transform } = store.getState();\n                const [x, y, zoom] = transform;\n                return {\n                    nodes: nodes.map((n) => ({ ...n })),\n                    edges: edges.map((e) => ({ ...e })),\n                    viewport: {\n                        x,\n                        y,\n                        zoom,\n                    },\n                };\n            },\n            deleteElements: async ({ nodes: nodesToRemove = [], edges: edgesToRemove = [] }) => {\n                const { nodes, edges, onNodesDelete, onEdgesDelete, triggerNodeChanges, triggerEdgeChanges, onDelete, onBeforeDelete, } = store.getState();\n                const { nodes: matchingNodes, edges: matchingEdges } = await getElementsToRemove({\n                    nodesToRemove,\n                    edgesToRemove,\n                    nodes,\n                    edges,\n                    onBeforeDelete,\n                });\n                const hasMatchingEdges = matchingEdges.length > 0;\n                const hasMatchingNodes = matchingNodes.length > 0;\n                if (hasMatchingEdges) {\n                    const edgeChanges = matchingEdges.map(elementToRemoveChange);\n                    onEdgesDelete?.(matchingEdges);\n                    triggerEdgeChanges(edgeChanges);\n                }\n                if (hasMatchingNodes) {\n                    const nodeChanges = matchingNodes.map(elementToRemoveChange);\n                    onNodesDelete?.(matchingNodes);\n                    triggerNodeChanges(nodeChanges);\n                }\n                if (hasMatchingNodes || hasMatchingEdges) {\n                    onDelete?.({ nodes: matchingNodes, edges: matchingEdges });\n                }\n                return { deletedNodes: matchingNodes, deletedEdges: matchingEdges };\n            },\n            getIntersectingNodes: (nodeOrRect, partially = true, nodes) => {\n                const isRect = isRectObject(nodeOrRect);\n                const nodeRect = isRect ? nodeOrRect : getNodeRect(nodeOrRect);\n                const hasNodesOption = nodes !== undefined;\n                if (!nodeRect) {\n                    return [];\n                }\n                return (nodes || store.getState().nodes).filter((n) => {\n                    const internalNode = store.getState().nodeLookup.get(n.id);\n                    if (internalNode && !isRect && (n.id === nodeOrRect.id || !internalNode.internals.positionAbsolute)) {\n                        return false;\n                    }\n                    const currNodeRect = nodeToRect(hasNodesOption ? n : internalNode);\n                    const overlappingArea = getOverlappingArea(currNodeRect, nodeRect);\n                    const partiallyVisible = partially && overlappingArea > 0;\n                    return partiallyVisible || overlappingArea >= nodeRect.width * nodeRect.height;\n                });\n            },\n            isNodeIntersecting: (nodeOrRect, area, partially = true) => {\n                const isRect = isRectObject(nodeOrRect);\n                const nodeRect = isRect ? nodeOrRect : getNodeRect(nodeOrRect);\n                if (!nodeRect) {\n                    return false;\n                }\n                const overlappingArea = getOverlappingArea(nodeRect, area);\n                const partiallyVisible = partially && overlappingArea > 0;\n                return partiallyVisible || overlappingArea >= nodeRect.width * nodeRect.height;\n            },\n            updateNode,\n            updateNodeData: (id, dataUpdate, options = { replace: false }) => {\n                updateNode(id, (node) => {\n                    const nextData = typeof dataUpdate === 'function' ? dataUpdate(node) : dataUpdate;\n                    return options.replace ? { ...node, data: nextData } : { ...node, data: { ...node.data, ...nextData } };\n                }, options);\n            },\n            updateEdge,\n            updateEdgeData: (id, dataUpdate, options = { replace: false }) => {\n                updateEdge(id, (edge) => {\n                    const nextData = typeof dataUpdate === 'function' ? dataUpdate(edge) : dataUpdate;\n                    return options.replace ? { ...edge, data: nextData } : { ...edge, data: { ...edge.data, ...nextData } };\n                }, options);\n            },\n            getNodesBounds: (nodes) => {\n                const { nodeLookup, nodeOrigin } = store.getState();\n                return getNodesBounds(nodes, { nodeLookup, nodeOrigin });\n            },\n            getHandleConnections: ({ type, id, nodeId }) => Array.from(store\n                .getState()\n                .connectionLookup.get(`${nodeId}-${type}-${id ?? null}`)\n                ?.values() ?? []),\n        };\n    }, []);\n    return useMemo(() => {\n        return {\n            ...generalHelper,\n            ...viewportHelper,\n            viewportInitialized,\n        };\n    }, [viewportInitialized]);\n}\n\nconst selected = (item) => item.selected;\nconst deleteKeyOptions = { actInsideInputWithModifier: false };\nconst win$1 = typeof window !== 'undefined' ? window : undefined;\n/**\n * Hook for handling global key events.\n *\n * @internal\n */\nfunction useGlobalKeyHandler({ deleteKeyCode, multiSelectionKeyCode, }) {\n    const store = useStoreApi();\n    const { deleteElements } = useReactFlow();\n    const deleteKeyPressed = useKeyPress(deleteKeyCode, deleteKeyOptions);\n    const multiSelectionKeyPressed = useKeyPress(multiSelectionKeyCode, { target: win$1 });\n    useEffect(() => {\n        if (deleteKeyPressed) {\n            const { edges, nodes } = store.getState();\n            deleteElements({ nodes: nodes.filter(selected), edges: edges.filter(selected) });\n            store.setState({ nodesSelectionActive: false });\n        }\n    }, [deleteKeyPressed]);\n    useEffect(() => {\n        store.setState({ multiSelectionActive: multiSelectionKeyPressed });\n    }, [multiSelectionKeyPressed]);\n}\n\n/**\n * Hook for handling resize events.\n *\n * @internal\n */\nfunction useResizeHandler(domNode) {\n    const store = useStoreApi();\n    useEffect(() => {\n        const updateDimensions = () => {\n            if (!domNode.current) {\n                return false;\n            }\n            const size = getDimensions(domNode.current);\n            if (size.height === 0 || size.width === 0) {\n                store.getState().onError?.('004', errorMessages['error004']());\n            }\n            store.setState({ width: size.width || 500, height: size.height || 500 });\n        };\n        if (domNode.current) {\n            updateDimensions();\n            window.addEventListener('resize', updateDimensions);\n            const resizeObserver = new ResizeObserver(() => updateDimensions());\n            resizeObserver.observe(domNode.current);\n            return () => {\n                window.removeEventListener('resize', updateDimensions);\n                if (resizeObserver && domNode.current) {\n                    resizeObserver.unobserve(domNode.current);\n                }\n            };\n        }\n    }, []);\n}\n\nconst containerStyle = {\n    position: 'absolute',\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n};\n\nconst selector$j = (s) => ({\n    userSelectionActive: s.userSelectionActive,\n    lib: s.lib,\n});\nfunction ZoomPane({ onPaneContextMenu, zoomOnScroll = true, zoomOnPinch = true, panOnScroll = false, panOnScrollSpeed = 0.5, panOnScrollMode = PanOnScrollMode.Free, zoomOnDoubleClick = true, panOnDrag = true, defaultViewport, translateExtent, minZoom, maxZoom, zoomActivationKeyCode, preventScrolling = true, children, noWheelClassName, noPanClassName, onViewportChange, isControlledViewport, paneClickDistance, }) {\n    const store = useStoreApi();\n    const zoomPane = useRef(null);\n    const { userSelectionActive, lib } = useStore(selector$j, shallow);\n    const zoomActivationKeyPressed = useKeyPress(zoomActivationKeyCode);\n    const panZoom = useRef();\n    useResizeHandler(zoomPane);\n    const onTransformChange = useCallback((transform) => {\n        onViewportChange?.({ x: transform[0], y: transform[1], zoom: transform[2] });\n        if (!isControlledViewport) {\n            store.setState({ transform });\n        }\n    }, [onViewportChange, isControlledViewport]);\n    useEffect(() => {\n        if (zoomPane.current) {\n            panZoom.current = XYPanZoom({\n                domNode: zoomPane.current,\n                minZoom,\n                maxZoom,\n                translateExtent,\n                viewport: defaultViewport,\n                paneClickDistance,\n                onDraggingChange: (paneDragging) => store.setState({ paneDragging }),\n                onPanZoomStart: (event, vp) => {\n                    const { onViewportChangeStart, onMoveStart } = store.getState();\n                    onMoveStart?.(event, vp);\n                    onViewportChangeStart?.(vp);\n                },\n                onPanZoom: (event, vp) => {\n                    const { onViewportChange, onMove } = store.getState();\n                    onMove?.(event, vp);\n                    onViewportChange?.(vp);\n                },\n                onPanZoomEnd: (event, vp) => {\n                    const { onViewportChangeEnd, onMoveEnd } = store.getState();\n                    onMoveEnd?.(event, vp);\n                    onViewportChangeEnd?.(vp);\n                },\n            });\n            const { x, y, zoom } = panZoom.current.getViewport();\n            store.setState({\n                panZoom: panZoom.current,\n                transform: [x, y, zoom],\n                domNode: zoomPane.current.closest('.react-flow'),\n            });\n            return () => {\n                panZoom.current?.destroy();\n            };\n        }\n    }, []);\n    useEffect(() => {\n        panZoom.current?.update({\n            onPaneContextMenu,\n            zoomOnScroll,\n            zoomOnPinch,\n            panOnScroll,\n            panOnScrollSpeed,\n            panOnScrollMode,\n            zoomOnDoubleClick,\n            panOnDrag,\n            zoomActivationKeyPressed,\n            preventScrolling,\n            noPanClassName,\n            userSelectionActive,\n            noWheelClassName,\n            lib,\n            onTransformChange,\n        });\n    }, [\n        onPaneContextMenu,\n        zoomOnScroll,\n        zoomOnPinch,\n        panOnScroll,\n        panOnScrollSpeed,\n        panOnScrollMode,\n        zoomOnDoubleClick,\n        panOnDrag,\n        zoomActivationKeyPressed,\n        preventScrolling,\n        noPanClassName,\n        userSelectionActive,\n        noWheelClassName,\n        lib,\n        onTransformChange,\n    ]);\n    return (jsx(\"div\", { className: \"react-flow__renderer\", ref: zoomPane, style: containerStyle, children: children }));\n}\n\nconst selector$i = (s) => ({\n    userSelectionActive: s.userSelectionActive,\n    userSelectionRect: s.userSelectionRect,\n});\nfunction UserSelection() {\n    const { userSelectionActive, userSelectionRect } = useStore(selector$i, shallow);\n    const isActive = userSelectionActive && userSelectionRect;\n    if (!isActive) {\n        return null;\n    }\n    return (jsx(\"div\", { className: \"react-flow__selection react-flow__container\", style: {\n            width: userSelectionRect.width,\n            height: userSelectionRect.height,\n            transform: `translate(${userSelectionRect.x}px, ${userSelectionRect.y}px)`,\n        } }));\n}\n\nconst wrapHandler = (handler, containerRef) => {\n    return (event) => {\n        if (event.target !== containerRef.current) {\n            return;\n        }\n        handler?.(event);\n    };\n};\nconst selector$h = (s) => ({\n    userSelectionActive: s.userSelectionActive,\n    elementsSelectable: s.elementsSelectable,\n    dragging: s.paneDragging,\n});\nfunction Pane({ isSelecting, selectionKeyPressed, selectionMode = SelectionMode.Full, panOnDrag, selectionOnDrag, onSelectionStart, onSelectionEnd, onPaneClick, onPaneContextMenu, onPaneScroll, onPaneMouseEnter, onPaneMouseMove, onPaneMouseLeave, children, }) {\n    const container = useRef(null);\n    const store = useStoreApi();\n    const prevSelectedNodesCount = useRef(0);\n    const prevSelectedEdgesCount = useRef(0);\n    const containerBounds = useRef();\n    const edgeIdLookup = useRef(new Map());\n    const { userSelectionActive, elementsSelectable, dragging } = useStore(selector$h, shallow);\n    const hasActiveSelection = elementsSelectable && (isSelecting || userSelectionActive);\n    // Used to prevent click events when the user lets go of the selectionKey during a selection\n    const selectionInProgress = useRef(false);\n    const selectionStarted = useRef(false);\n    const resetUserSelection = () => {\n        store.setState({ userSelectionActive: false, userSelectionRect: null });\n        prevSelectedNodesCount.current = 0;\n        prevSelectedEdgesCount.current = 0;\n    };\n    const onClick = (event) => {\n        // We prevent click events when the user let go of the selectionKey during a selection\n        if (selectionInProgress.current) {\n            selectionInProgress.current = false;\n            return;\n        }\n        onPaneClick?.(event);\n        store.getState().resetSelectedElements();\n        store.setState({ nodesSelectionActive: false });\n    };\n    const onContextMenu = (event) => {\n        if (Array.isArray(panOnDrag) && panOnDrag?.includes(2)) {\n            event.preventDefault();\n            return;\n        }\n        onPaneContextMenu?.(event);\n    };\n    const onWheel = onPaneScroll ? (event) => onPaneScroll(event) : undefined;\n    const onPointerDown = (event) => {\n        const { resetSelectedElements, domNode, edgeLookup } = store.getState();\n        containerBounds.current = domNode?.getBoundingClientRect();\n        if (!elementsSelectable ||\n            !isSelecting ||\n            event.button !== 0 ||\n            event.target !== container.current ||\n            !containerBounds.current) {\n            return;\n        }\n        event.target?.setPointerCapture?.(event.pointerId);\n        selectionStarted.current = true;\n        selectionInProgress.current = false;\n        edgeIdLookup.current = new Map();\n        for (const [id, edge] of edgeLookup) {\n            edgeIdLookup.current.set(edge.source, edgeIdLookup.current.get(edge.source)?.add(id) || new Set([id]));\n            edgeIdLookup.current.set(edge.target, edgeIdLookup.current.get(edge.target)?.add(id) || new Set([id]));\n        }\n        const { x, y } = getEventPosition(event.nativeEvent, containerBounds.current);\n        resetSelectedElements();\n        store.setState({\n            userSelectionRect: {\n                width: 0,\n                height: 0,\n                startX: x,\n                startY: y,\n                x,\n                y,\n            },\n        });\n        onSelectionStart?.(event);\n    };\n    const onPointerMove = (event) => {\n        const { userSelectionRect, edgeLookup, transform, nodeLookup, triggerNodeChanges, triggerEdgeChanges } = store.getState();\n        if (!containerBounds.current || !userSelectionRect) {\n            return;\n        }\n        selectionInProgress.current = true;\n        const { x: mouseX, y: mouseY } = getEventPosition(event.nativeEvent, containerBounds.current);\n        const { startX, startY } = userSelectionRect;\n        const nextUserSelectRect = {\n            startX,\n            startY,\n            x: mouseX < startX ? mouseX : startX,\n            y: mouseY < startY ? mouseY : startY,\n            width: Math.abs(mouseX - startX),\n            height: Math.abs(mouseY - startY),\n        };\n        const selectedNodes = getNodesInside(nodeLookup, nextUserSelectRect, transform, selectionMode === SelectionMode.Partial, true);\n        const selectedEdgeIds = new Set();\n        const selectedNodeIds = new Set();\n        for (const selectedNode of selectedNodes) {\n            selectedNodeIds.add(selectedNode.id);\n            const edgeIds = edgeIdLookup.current.get(selectedNode.id);\n            if (edgeIds) {\n                for (const edgeId of edgeIds) {\n                    selectedEdgeIds.add(edgeId);\n                }\n            }\n        }\n        if (prevSelectedNodesCount.current !== selectedNodeIds.size) {\n            prevSelectedNodesCount.current = selectedNodeIds.size;\n            const changes = getSelectionChanges(nodeLookup, selectedNodeIds, true);\n            triggerNodeChanges(changes);\n        }\n        if (prevSelectedEdgesCount.current !== selectedEdgeIds.size) {\n            prevSelectedEdgesCount.current = selectedEdgeIds.size;\n            const changes = getSelectionChanges(edgeLookup, selectedEdgeIds);\n            triggerEdgeChanges(changes);\n        }\n        store.setState({\n            userSelectionRect: nextUserSelectRect,\n            userSelectionActive: true,\n            nodesSelectionActive: false,\n        });\n    };\n    const onPointerUp = (event) => {\n        if (event.button !== 0 || !selectionStarted.current) {\n            return;\n        }\n        event.target?.releasePointerCapture?.(event.pointerId);\n        const { userSelectionRect } = store.getState();\n        // We only want to trigger click functions when in selection mode if\n        // the user did not move the mouse.\n        if (!userSelectionActive && userSelectionRect && event.target === container.current) {\n            onClick?.(event);\n        }\n        if (prevSelectedNodesCount.current > 0) {\n            store.setState({ nodesSelectionActive: true });\n        }\n        resetUserSelection();\n        onSelectionEnd?.(event);\n        // If the user kept holding the selectionKey during the selection,\n        // we need to reset the selectionInProgress, so the next click event is not prevented\n        if (selectionKeyPressed || selectionOnDrag) {\n            selectionInProgress.current = false;\n        }\n        selectionStarted.current = false;\n    };\n    const draggable = panOnDrag === true || (Array.isArray(panOnDrag) && panOnDrag.includes(0));\n    return (jsxs(\"div\", { className: cc(['react-flow__pane', { draggable, dragging, selection: isSelecting }]), onClick: hasActiveSelection ? undefined : wrapHandler(onClick, container), onContextMenu: wrapHandler(onContextMenu, container), onWheel: wrapHandler(onWheel, container), onPointerEnter: hasActiveSelection ? undefined : onPaneMouseEnter, onPointerDown: hasActiveSelection ? onPointerDown : onPaneMouseMove, onPointerMove: hasActiveSelection ? onPointerMove : onPaneMouseMove, onPointerUp: hasActiveSelection ? onPointerUp : undefined, onPointerLeave: onPaneMouseLeave, ref: container, style: containerStyle, children: [children, jsx(UserSelection, {})] }));\n}\n\n// this handler is called by\n// 1. the click handler when node is not draggable or selectNodesOnDrag = false\n// or\n// 2. the on drag start handler when node is draggable and selectNodesOnDrag = true\nfunction handleNodeClick({ id, store, unselect = false, nodeRef, }) {\n    const { addSelectedNodes, unselectNodesAndEdges, multiSelectionActive, nodeLookup, onError } = store.getState();\n    const node = nodeLookup.get(id);\n    if (!node) {\n        onError?.('012', errorMessages['error012'](id));\n        return;\n    }\n    store.setState({ nodesSelectionActive: false });\n    if (!node.selected) {\n        addSelectedNodes([id]);\n    }\n    else if (unselect || (node.selected && multiSelectionActive)) {\n        unselectNodesAndEdges({ nodes: [node], edges: [] });\n        requestAnimationFrame(() => nodeRef?.current?.blur());\n    }\n}\n\n/**\n * Hook for calling XYDrag helper from @xyflow/system.\n *\n * @internal\n */\nfunction useDrag({ nodeRef, disabled = false, noDragClassName, handleSelector, nodeId, isSelectable, nodeClickDistance, }) {\n    const store = useStoreApi();\n    const [dragging, setDragging] = useState(false);\n    const xyDrag = useRef();\n    useEffect(() => {\n        xyDrag.current = XYDrag({\n            getStoreItems: () => store.getState(),\n            onNodeMouseDown: (id) => {\n                handleNodeClick({\n                    id,\n                    store,\n                    nodeRef,\n                });\n            },\n            onDragStart: () => {\n                setDragging(true);\n            },\n            onDragStop: () => {\n                setDragging(false);\n            },\n        });\n    }, []);\n    useEffect(() => {\n        if (disabled) {\n            xyDrag.current?.destroy();\n        }\n        else if (nodeRef.current) {\n            xyDrag.current?.update({\n                noDragClassName,\n                handleSelector,\n                domNode: nodeRef.current,\n                isSelectable,\n                nodeId,\n                nodeClickDistance,\n            });\n            return () => {\n                xyDrag.current?.destroy();\n            };\n        }\n    }, [noDragClassName, handleSelector, disabled, isSelectable, nodeRef, nodeId]);\n    return dragging;\n}\n\nconst selectedAndDraggable = (nodesDraggable) => (n) => n.selected && (n.draggable || (nodesDraggable && typeof n.draggable === 'undefined'));\n/**\n * Hook for updating node positions by passing a direction and factor\n *\n * @internal\n * @returns function for updating node positions\n */\nfunction useMoveSelectedNodes() {\n    const store = useStoreApi();\n    const moveSelectedNodes = useCallback((params) => {\n        const { nodeExtent, snapToGrid, snapGrid, nodesDraggable, onError, updateNodePositions, nodeLookup, nodeOrigin } = store.getState();\n        const nodeUpdates = new Map();\n        const isSelected = selectedAndDraggable(nodesDraggable);\n        // by default a node moves 5px on each key press\n        // if snap grid is enabled, we use that for the velocity\n        const xVelo = snapToGrid ? snapGrid[0] : 5;\n        const yVelo = snapToGrid ? snapGrid[1] : 5;\n        const xDiff = params.direction.x * xVelo * params.factor;\n        const yDiff = params.direction.y * yVelo * params.factor;\n        for (const [, node] of nodeLookup) {\n            if (!isSelected(node)) {\n                continue;\n            }\n            let nextPosition = {\n                x: node.internals.positionAbsolute.x + xDiff,\n                y: node.internals.positionAbsolute.y + yDiff,\n            };\n            if (snapToGrid) {\n                nextPosition = snapPosition(nextPosition, snapGrid);\n            }\n            const { position, positionAbsolute } = calculateNodePosition({\n                nodeId: node.id,\n                nextPosition,\n                nodeLookup,\n                nodeExtent,\n                nodeOrigin,\n                onError,\n            });\n            node.position = position;\n            node.internals.positionAbsolute = positionAbsolute;\n            nodeUpdates.set(node.id, node);\n        }\n        updateNodePositions(nodeUpdates);\n    }, []);\n    return moveSelectedNodes;\n}\n\nconst NodeIdContext = createContext(null);\nconst Provider = NodeIdContext.Provider;\nNodeIdContext.Consumer;\nconst useNodeId = () => {\n    const nodeId = useContext(NodeIdContext);\n    return nodeId;\n};\n\nconst selector$g = (s) => ({\n    connectOnClick: s.connectOnClick,\n    noPanClassName: s.noPanClassName,\n    rfId: s.rfId,\n});\nconst connectingSelector = (nodeId, handleId, type) => (state) => {\n    const { connectionClickStartHandle: clickHandle, connectionMode, connection } = state;\n    const { fromHandle, toHandle, isValid } = connection;\n    const connectingTo = toHandle?.nodeId === nodeId && toHandle?.id === handleId && toHandle?.type === type;\n    return {\n        connectingFrom: fromHandle?.nodeId === nodeId && fromHandle?.id === handleId && fromHandle?.type === type,\n        connectingTo,\n        clickConnecting: clickHandle?.nodeId === nodeId && clickHandle?.id === handleId && clickHandle?.type === type,\n        isPossibleEndHandle: connectionMode === ConnectionMode.Strict\n            ? fromHandle?.type !== type\n            : nodeId !== fromHandle?.nodeId || handleId !== fromHandle?.id,\n        connectionInProcess: !!fromHandle,\n        valid: connectingTo && isValid,\n    };\n};\nfunction HandleComponent({ type = 'source', position = Position.Top, isValidConnection, isConnectable = true, isConnectableStart = true, isConnectableEnd = true, id, onConnect, children, className, onMouseDown, onTouchStart, ...rest }, ref) {\n    const handleId = id || null;\n    const isTarget = type === 'target';\n    const store = useStoreApi();\n    const nodeId = useNodeId();\n    const { connectOnClick, noPanClassName, rfId } = useStore(selector$g, shallow);\n    const { connectingFrom, connectingTo, clickConnecting, isPossibleEndHandle, connectionInProcess, valid } = useStore(connectingSelector(nodeId, handleId, type), shallow);\n    if (!nodeId) {\n        store.getState().onError?.('010', errorMessages['error010']());\n    }\n    const onConnectExtended = (params) => {\n        const { defaultEdgeOptions, onConnect: onConnectAction, hasDefaultEdges } = store.getState();\n        const edgeParams = {\n            ...defaultEdgeOptions,\n            ...params,\n        };\n        if (hasDefaultEdges) {\n            const { edges, setEdges } = store.getState();\n            setEdges(addEdge(edgeParams, edges));\n        }\n        onConnectAction?.(edgeParams);\n        onConnect?.(edgeParams);\n    };\n    const onPointerDown = (event) => {\n        if (!nodeId) {\n            return;\n        }\n        const isMouseTriggered = isMouseEvent(event.nativeEvent);\n        if (isConnectableStart &&\n            ((isMouseTriggered && event.button === 0) || !isMouseTriggered)) {\n            const currentStore = store.getState();\n            XYHandle.onPointerDown(event.nativeEvent, {\n                autoPanOnConnect: currentStore.autoPanOnConnect,\n                connectionMode: currentStore.connectionMode,\n                connectionRadius: currentStore.connectionRadius,\n                domNode: currentStore.domNode,\n                nodeLookup: currentStore.nodeLookup,\n                lib: currentStore.lib,\n                isTarget,\n                handleId,\n                nodeId,\n                flowId: currentStore.rfId,\n                panBy: currentStore.panBy,\n                cancelConnection: currentStore.cancelConnection,\n                onConnectStart: currentStore.onConnectStart,\n                onConnectEnd: currentStore.onConnectEnd,\n                updateConnection: currentStore.updateConnection,\n                onConnect: onConnectExtended,\n                isValidConnection: isValidConnection || currentStore.isValidConnection,\n                getTransform: () => store.getState().transform,\n                getFromHandle: () => store.getState().connection.fromHandle,\n                autoPanSpeed: currentStore.autoPanSpeed,\n            });\n        }\n        if (isMouseTriggered) {\n            onMouseDown?.(event);\n        }\n        else {\n            onTouchStart?.(event);\n        }\n    };\n    const onClick = (event) => {\n        const { onClickConnectStart, onClickConnectEnd, connectionClickStartHandle, connectionMode, isValidConnection: isValidConnectionStore, lib, rfId: flowId, nodeLookup, connection: connectionState, } = store.getState();\n        if (!nodeId || (!connectionClickStartHandle && !isConnectableStart)) {\n            return;\n        }\n        if (!connectionClickStartHandle) {\n            onClickConnectStart?.(event.nativeEvent, { nodeId, handleId, handleType: type });\n            store.setState({ connectionClickStartHandle: { nodeId, type, id: handleId } });\n            return;\n        }\n        const doc = getHostForElement(event.target);\n        const isValidConnectionHandler = isValidConnection || isValidConnectionStore;\n        const { connection, isValid } = XYHandle.isValid(event.nativeEvent, {\n            handle: {\n                nodeId,\n                id: handleId,\n                type,\n            },\n            connectionMode,\n            fromNodeId: connectionClickStartHandle.nodeId,\n            fromHandleId: connectionClickStartHandle.id || null,\n            fromType: connectionClickStartHandle.type,\n            isValidConnection: isValidConnectionHandler,\n            flowId,\n            doc,\n            lib,\n            nodeLookup,\n        });\n        if (isValid && connection) {\n            onConnectExtended(connection);\n        }\n        const connectionClone = structuredClone(connectionState);\n        delete connectionClone.inProgress;\n        connectionClone.toPosition = connectionClone.toHandle ? connectionClone.toHandle.position : null;\n        onClickConnectEnd?.(event, connectionClone);\n        store.setState({ connectionClickStartHandle: null });\n    };\n    return (jsx(\"div\", { \"data-handleid\": handleId, \"data-nodeid\": nodeId, \"data-handlepos\": position, \"data-id\": `${rfId}-${nodeId}-${handleId}-${type}`, className: cc([\n            'react-flow__handle',\n            `react-flow__handle-${position}`,\n            'nodrag',\n            noPanClassName,\n            className,\n            {\n                source: !isTarget,\n                target: isTarget,\n                connectable: isConnectable,\n                connectablestart: isConnectableStart,\n                connectableend: isConnectableEnd,\n                clickconnecting: clickConnecting,\n                connectingfrom: connectingFrom,\n                connectingto: connectingTo,\n                valid,\n                // shows where you can start a connection from\n                // and where you can end it while connecting\n                connectionindicator: isConnectable &&\n                    (!connectionInProcess || isPossibleEndHandle) &&\n                    (connectionInProcess ? isConnectableEnd : isConnectableStart),\n            },\n        ]), onMouseDown: onPointerDown, onTouchStart: onPointerDown, onClick: connectOnClick ? onClick : undefined, ref: ref, ...rest, children: children }));\n}\n/**\n * The Handle component is a UI element that is used to connect nodes.\n */\nconst Handle = memo(fixedForwardRef(HandleComponent));\n\nfunction InputNode({ data, isConnectable, sourcePosition = Position.Bottom }) {\n    return (jsxs(Fragment, { children: [data?.label, jsx(Handle, { type: \"source\", position: sourcePosition, isConnectable: isConnectable })] }));\n}\n\nfunction DefaultNode({ data, isConnectable, targetPosition = Position.Top, sourcePosition = Position.Bottom, }) {\n    return (jsxs(Fragment, { children: [jsx(Handle, { type: \"target\", position: targetPosition, isConnectable: isConnectable }), data?.label, jsx(Handle, { type: \"source\", position: sourcePosition, isConnectable: isConnectable })] }));\n}\n\nfunction GroupNode() {\n    return null;\n}\n\nfunction OutputNode({ data, isConnectable, targetPosition = Position.Top }) {\n    return (jsxs(Fragment, { children: [jsx(Handle, { type: \"target\", position: targetPosition, isConnectable: isConnectable }), data?.label] }));\n}\n\nconst arrowKeyDiffs = {\n    ArrowUp: { x: 0, y: -1 },\n    ArrowDown: { x: 0, y: 1 },\n    ArrowLeft: { x: -1, y: 0 },\n    ArrowRight: { x: 1, y: 0 },\n};\nconst builtinNodeTypes = {\n    input: InputNode,\n    default: DefaultNode,\n    output: OutputNode,\n    group: GroupNode,\n};\nfunction getNodeInlineStyleDimensions(node) {\n    if (node.internals.handleBounds === undefined) {\n        return {\n            width: node.width ?? node.initialWidth ?? node.style?.width,\n            height: node.height ?? node.initialHeight ?? node.style?.height,\n        };\n    }\n    return {\n        width: node.width ?? node.style?.width,\n        height: node.height ?? node.style?.height,\n    };\n}\n\nconst selector$f = (s) => {\n    const { width, height, x, y } = getInternalNodesBounds(s.nodeLookup, {\n        filter: (node) => !!node.selected,\n    });\n    return {\n        width: isNumeric(width) ? width : null,\n        height: isNumeric(height) ? height : null,\n        userSelectionActive: s.userSelectionActive,\n        transformString: `translate(${s.transform[0]}px,${s.transform[1]}px) scale(${s.transform[2]}) translate(${x}px,${y}px)`,\n    };\n};\nfunction NodesSelection({ onSelectionContextMenu, noPanClassName, disableKeyboardA11y, }) {\n    const store = useStoreApi();\n    const { width, height, transformString, userSelectionActive } = useStore(selector$f, shallow);\n    const moveSelectedNodes = useMoveSelectedNodes();\n    const nodeRef = useRef(null);\n    useEffect(() => {\n        if (!disableKeyboardA11y) {\n            nodeRef.current?.focus({\n                preventScroll: true,\n            });\n        }\n    }, [disableKeyboardA11y]);\n    useDrag({\n        nodeRef,\n    });\n    if (userSelectionActive || !width || !height) {\n        return null;\n    }\n    const onContextMenu = onSelectionContextMenu\n        ? (event) => {\n            const selectedNodes = store.getState().nodes.filter((n) => n.selected);\n            onSelectionContextMenu(event, selectedNodes);\n        }\n        : undefined;\n    const onKeyDown = (event) => {\n        if (Object.prototype.hasOwnProperty.call(arrowKeyDiffs, event.key)) {\n            event.preventDefault();\n            moveSelectedNodes({\n                direction: arrowKeyDiffs[event.key],\n                factor: event.shiftKey ? 4 : 1,\n            });\n        }\n    };\n    return (jsx(\"div\", { className: cc(['react-flow__nodesselection', 'react-flow__container', noPanClassName]), style: {\n            transform: transformString,\n        }, children: jsx(\"div\", { ref: nodeRef, className: \"react-flow__nodesselection-rect\", onContextMenu: onContextMenu, tabIndex: disableKeyboardA11y ? undefined : -1, onKeyDown: disableKeyboardA11y ? undefined : onKeyDown, style: {\n                width,\n                height,\n            } }) }));\n}\n\nconst win = typeof window !== 'undefined' ? window : undefined;\nconst selector$e = (s) => {\n    return { nodesSelectionActive: s.nodesSelectionActive, userSelectionActive: s.userSelectionActive };\n};\nfunction FlowRendererComponent({ children, onPaneClick, onPaneMouseEnter, onPaneMouseMove, onPaneMouseLeave, onPaneContextMenu, onPaneScroll, paneClickDistance, deleteKeyCode, selectionKeyCode, selectionOnDrag, selectionMode, onSelectionStart, onSelectionEnd, multiSelectionKeyCode, panActivationKeyCode, zoomActivationKeyCode, elementsSelectable, zoomOnScroll, zoomOnPinch, panOnScroll: _panOnScroll, panOnScrollSpeed, panOnScrollMode, zoomOnDoubleClick, panOnDrag: _panOnDrag, defaultViewport, translateExtent, minZoom, maxZoom, preventScrolling, onSelectionContextMenu, noWheelClassName, noPanClassName, disableKeyboardA11y, onViewportChange, isControlledViewport, }) {\n    const { nodesSelectionActive, userSelectionActive } = useStore(selector$e);\n    const selectionKeyPressed = useKeyPress(selectionKeyCode, { target: win });\n    const panActivationKeyPressed = useKeyPress(panActivationKeyCode, { target: win });\n    const panOnDrag = panActivationKeyPressed || _panOnDrag;\n    const panOnScroll = panActivationKeyPressed || _panOnScroll;\n    const _selectionOnDrag = selectionOnDrag && panOnDrag !== true;\n    const isSelecting = selectionKeyPressed || userSelectionActive || _selectionOnDrag;\n    useGlobalKeyHandler({ deleteKeyCode, multiSelectionKeyCode });\n    return (jsx(ZoomPane, { onPaneContextMenu: onPaneContextMenu, elementsSelectable: elementsSelectable, zoomOnScroll: zoomOnScroll, zoomOnPinch: zoomOnPinch, panOnScroll: panOnScroll, panOnScrollSpeed: panOnScrollSpeed, panOnScrollMode: panOnScrollMode, zoomOnDoubleClick: zoomOnDoubleClick, panOnDrag: !selectionKeyPressed && panOnDrag, defaultViewport: defaultViewport, translateExtent: translateExtent, minZoom: minZoom, maxZoom: maxZoom, zoomActivationKeyCode: zoomActivationKeyCode, preventScrolling: preventScrolling, noWheelClassName: noWheelClassName, noPanClassName: noPanClassName, onViewportChange: onViewportChange, isControlledViewport: isControlledViewport, paneClickDistance: paneClickDistance, children: jsxs(Pane, { onSelectionStart: onSelectionStart, onSelectionEnd: onSelectionEnd, onPaneClick: onPaneClick, onPaneMouseEnter: onPaneMouseEnter, onPaneMouseMove: onPaneMouseMove, onPaneMouseLeave: onPaneMouseLeave, onPaneContextMenu: onPaneContextMenu, onPaneScroll: onPaneScroll, panOnDrag: panOnDrag, isSelecting: !!isSelecting, selectionMode: selectionMode, selectionKeyPressed: selectionKeyPressed, selectionOnDrag: _selectionOnDrag, children: [children, nodesSelectionActive && (jsx(NodesSelection, { onSelectionContextMenu: onSelectionContextMenu, noPanClassName: noPanClassName, disableKeyboardA11y: disableKeyboardA11y }))] }) }));\n}\nFlowRendererComponent.displayName = 'FlowRenderer';\nconst FlowRenderer = memo(FlowRendererComponent);\n\nconst selector$d = (onlyRenderVisible) => (s) => {\n    return onlyRenderVisible\n        ? getNodesInside(s.nodeLookup, { x: 0, y: 0, width: s.width, height: s.height }, s.transform, true).map((node) => node.id)\n        : Array.from(s.nodeLookup.keys());\n};\n/**\n * Hook for getting the visible node ids from the store.\n *\n * @internal\n * @param onlyRenderVisible\n * @returns array with visible node ids\n */\nfunction useVisibleNodeIds(onlyRenderVisible) {\n    const nodeIds = useStore(useCallback(selector$d(onlyRenderVisible), [onlyRenderVisible]), shallow);\n    return nodeIds;\n}\n\nconst selector$c = (s) => s.updateNodeInternals;\nfunction useResizeObserver() {\n    const updateNodeInternals = useStore(selector$c);\n    const [resizeObserver] = useState(() => {\n        if (typeof ResizeObserver === 'undefined') {\n            return null;\n        }\n        return new ResizeObserver((entries) => {\n            const updates = new Map();\n            entries.forEach((entry) => {\n                const id = entry.target.getAttribute('data-id');\n                updates.set(id, {\n                    id,\n                    nodeElement: entry.target,\n                    force: true,\n                });\n            });\n            updateNodeInternals(updates);\n        });\n    });\n    useEffect(() => {\n        return () => {\n            resizeObserver?.disconnect();\n        };\n    }, [resizeObserver]);\n    return resizeObserver;\n}\n\n/**\n * Hook to handle the resize observation + internal updates for the passed node.\n *\n * @internal\n * @returns nodeRef - reference to the node element\n */\nfunction useNodeObserver({ node, nodeType, hasDimensions, resizeObserver, }) {\n    const store = useStoreApi();\n    const nodeRef = useRef(null);\n    const observedNode = useRef(null);\n    const prevSourcePosition = useRef(node.sourcePosition);\n    const prevTargetPosition = useRef(node.targetPosition);\n    const prevType = useRef(nodeType);\n    const isInitialized = hasDimensions && !!node.internals.handleBounds;\n    useEffect(() => {\n        if (nodeRef.current && !node.hidden && (!isInitialized || observedNode.current !== nodeRef.current)) {\n            if (observedNode.current) {\n                resizeObserver?.unobserve(observedNode.current);\n            }\n            resizeObserver?.observe(nodeRef.current);\n            observedNode.current = nodeRef.current;\n        }\n    }, [isInitialized, node.hidden]);\n    useEffect(() => {\n        return () => {\n            if (observedNode.current) {\n                resizeObserver?.unobserve(observedNode.current);\n                observedNode.current = null;\n            }\n        };\n    }, []);\n    useEffect(() => {\n        if (nodeRef.current) {\n            // when the user programmatically changes the source or handle position, we need to update the internals\n            // to make sure the edges are updated correctly\n            const typeChanged = prevType.current !== nodeType;\n            const sourcePosChanged = prevSourcePosition.current !== node.sourcePosition;\n            const targetPosChanged = prevTargetPosition.current !== node.targetPosition;\n            if (typeChanged || sourcePosChanged || targetPosChanged) {\n                prevType.current = nodeType;\n                prevSourcePosition.current = node.sourcePosition;\n                prevTargetPosition.current = node.targetPosition;\n                store\n                    .getState()\n                    .updateNodeInternals(new Map([[node.id, { id: node.id, nodeElement: nodeRef.current, force: true }]]));\n            }\n        }\n    }, [node.id, nodeType, node.sourcePosition, node.targetPosition]);\n    return nodeRef;\n}\n\nfunction NodeWrapper({ id, onClick, onMouseEnter, onMouseMove, onMouseLeave, onContextMenu, onDoubleClick, nodesDraggable, elementsSelectable, nodesConnectable, nodesFocusable, resizeObserver, noDragClassName, noPanClassName, disableKeyboardA11y, rfId, nodeTypes, nodeExtent, nodeClickDistance, onError, }) {\n    const { node, internals, isParent } = useStore((s) => {\n        const node = s.nodeLookup.get(id);\n        const isParent = s.parentLookup.has(id);\n        return {\n            node,\n            internals: node.internals,\n            isParent,\n        };\n    }, shallow);\n    let nodeType = node.type || 'default';\n    let NodeComponent = nodeTypes?.[nodeType] || builtinNodeTypes[nodeType];\n    if (NodeComponent === undefined) {\n        onError?.('003', errorMessages['error003'](nodeType));\n        nodeType = 'default';\n        NodeComponent = builtinNodeTypes.default;\n    }\n    const isDraggable = !!(node.draggable || (nodesDraggable && typeof node.draggable === 'undefined'));\n    const isSelectable = !!(node.selectable || (elementsSelectable && typeof node.selectable === 'undefined'));\n    const isConnectable = !!(node.connectable || (nodesConnectable && typeof node.connectable === 'undefined'));\n    const isFocusable = !!(node.focusable || (nodesFocusable && typeof node.focusable === 'undefined'));\n    const store = useStoreApi();\n    const hasDimensions = nodeHasDimensions(node);\n    const nodeRef = useNodeObserver({ node, nodeType, hasDimensions, resizeObserver });\n    const dragging = useDrag({\n        nodeRef,\n        disabled: node.hidden || !isDraggable,\n        noDragClassName,\n        handleSelector: node.dragHandle,\n        nodeId: id,\n        isSelectable,\n        nodeClickDistance,\n    });\n    const moveSelectedNodes = useMoveSelectedNodes();\n    if (node.hidden) {\n        return null;\n    }\n    const nodeDimensions = getNodeDimensions(node);\n    const inlineDimensions = getNodeInlineStyleDimensions(node);\n    const hasPointerEvents = isSelectable || isDraggable || onClick || onMouseEnter || onMouseMove || onMouseLeave;\n    const onMouseEnterHandler = onMouseEnter\n        ? (event) => onMouseEnter(event, { ...internals.userNode })\n        : undefined;\n    const onMouseMoveHandler = onMouseMove\n        ? (event) => onMouseMove(event, { ...internals.userNode })\n        : undefined;\n    const onMouseLeaveHandler = onMouseLeave\n        ? (event) => onMouseLeave(event, { ...internals.userNode })\n        : undefined;\n    const onContextMenuHandler = onContextMenu\n        ? (event) => onContextMenu(event, { ...internals.userNode })\n        : undefined;\n    const onDoubleClickHandler = onDoubleClick\n        ? (event) => onDoubleClick(event, { ...internals.userNode })\n        : undefined;\n    const onSelectNodeHandler = (event) => {\n        const { selectNodesOnDrag, nodeDragThreshold } = store.getState();\n        if (isSelectable && (!selectNodesOnDrag || !isDraggable || nodeDragThreshold > 0)) {\n            // this handler gets called by XYDrag on drag start when selectNodesOnDrag=true\n            // here we only need to call it when selectNodesOnDrag=false\n            handleNodeClick({\n                id,\n                store,\n                nodeRef,\n            });\n        }\n        if (onClick) {\n            onClick(event, { ...internals.userNode });\n        }\n    };\n    const onKeyDown = (event) => {\n        if (isInputDOMNode(event.nativeEvent) || disableKeyboardA11y) {\n            return;\n        }\n        if (elementSelectionKeys.includes(event.key) && isSelectable) {\n            const unselect = event.key === 'Escape';\n            handleNodeClick({\n                id,\n                store,\n                unselect,\n                nodeRef,\n            });\n        }\n        else if (isDraggable && node.selected && Object.prototype.hasOwnProperty.call(arrowKeyDiffs, event.key)) {\n            // prevent default scrolling behavior on arrow key press when node is moved\n            event.preventDefault();\n            store.setState({\n                ariaLiveMessage: `Moved selected node ${event.key\n                    .replace('Arrow', '')\n                    .toLowerCase()}. New position, x: ${~~internals.positionAbsolute.x}, y: ${~~internals.positionAbsolute.y}`,\n            });\n            moveSelectedNodes({\n                direction: arrowKeyDiffs[event.key],\n                factor: event.shiftKey ? 4 : 1,\n            });\n        }\n    };\n    return (jsx(\"div\", { className: cc([\n            'react-flow__node',\n            `react-flow__node-${nodeType}`,\n            {\n                // this is overwritable by passing `nopan` as a class name\n                [noPanClassName]: isDraggable,\n            },\n            node.className,\n            {\n                selected: node.selected,\n                selectable: isSelectable,\n                parent: isParent,\n                draggable: isDraggable,\n                dragging,\n            },\n        ]), ref: nodeRef, style: {\n            zIndex: internals.z,\n            transform: `translate(${internals.positionAbsolute.x}px,${internals.positionAbsolute.y}px)`,\n            pointerEvents: hasPointerEvents ? 'all' : 'none',\n            visibility: hasDimensions ? 'visible' : 'hidden',\n            ...node.style,\n            ...inlineDimensions,\n        }, \"data-id\": id, \"data-testid\": `rf__node-${id}`, onMouseEnter: onMouseEnterHandler, onMouseMove: onMouseMoveHandler, onMouseLeave: onMouseLeaveHandler, onContextMenu: onContextMenuHandler, onClick: onSelectNodeHandler, onDoubleClick: onDoubleClickHandler, onKeyDown: isFocusable ? onKeyDown : undefined, tabIndex: isFocusable ? 0 : undefined, role: isFocusable ? 'button' : undefined, \"aria-describedby\": disableKeyboardA11y ? undefined : `${ARIA_NODE_DESC_KEY}-${rfId}`, \"aria-label\": node.ariaLabel, children: jsx(Provider, { value: id, children: jsx(NodeComponent, { id: id, data: node.data, type: nodeType, positionAbsoluteX: internals.positionAbsolute.x, positionAbsoluteY: internals.positionAbsolute.y, selected: node.selected, selectable: isSelectable, draggable: isDraggable, deletable: node.deletable ?? true, isConnectable: isConnectable, sourcePosition: node.sourcePosition, targetPosition: node.targetPosition, dragging: dragging, dragHandle: node.dragHandle, zIndex: internals.z, parentId: node.parentId, ...nodeDimensions }) }) }));\n}\n\nconst selector$b = (s) => ({\n    nodesDraggable: s.nodesDraggable,\n    nodesConnectable: s.nodesConnectable,\n    nodesFocusable: s.nodesFocusable,\n    elementsSelectable: s.elementsSelectable,\n    onError: s.onError,\n});\nfunction NodeRendererComponent(props) {\n    const { nodesDraggable, nodesConnectable, nodesFocusable, elementsSelectable, onError } = useStore(selector$b, shallow);\n    const nodeIds = useVisibleNodeIds(props.onlyRenderVisibleElements);\n    const resizeObserver = useResizeObserver();\n    return (jsx(\"div\", { className: \"react-flow__nodes\", style: containerStyle, children: nodeIds.map((nodeId) => {\n            return (\n            // The split of responsibilities between NodeRenderer and\n            // NodeComponentWrapper may appear weird. However, it’s designed to\n            // minimize the cost of updates when individual nodes change.\n            //\n            // For example, when you’re dragging a single node, that node gets\n            // updated multiple times per second. If `NodeRenderer` were to update\n            // every time, it would have to re-run the `nodes.map()` loop every\n            // time. This gets pricey with hundreds of nodes, especially if every\n            // loop cycle does more than just rendering a JSX element!\n            //\n            // As a result of this choice, we took the following implementation\n            // decisions:\n            // - NodeRenderer subscribes *only* to node IDs – and therefore\n            //   rerender *only* when visible nodes are added or removed.\n            // - NodeRenderer performs all operations the result of which can be\n            //   shared between nodes (such as creating the `ResizeObserver`\n            //   instance, or subscribing to `selector`). This means extra prop\n            //   drilling into `NodeComponentWrapper`, but it means we need to run\n            //   these operations only once – instead of once per node.\n            // - Any operations that you’d normally write inside `nodes.map` are\n            //   moved into `NodeComponentWrapper`. This ensures they are\n            //   memorized – so if `NodeRenderer` *has* to rerender, it only\n            //   needs to regenerate the list of nodes, nothing else.\n            jsx(NodeWrapper, { id: nodeId, nodeTypes: props.nodeTypes, nodeExtent: props.nodeExtent, onClick: props.onNodeClick, onMouseEnter: props.onNodeMouseEnter, onMouseMove: props.onNodeMouseMove, onMouseLeave: props.onNodeMouseLeave, onContextMenu: props.onNodeContextMenu, onDoubleClick: props.onNodeDoubleClick, noDragClassName: props.noDragClassName, noPanClassName: props.noPanClassName, rfId: props.rfId, disableKeyboardA11y: props.disableKeyboardA11y, resizeObserver: resizeObserver, nodesDraggable: nodesDraggable, nodesConnectable: nodesConnectable, nodesFocusable: nodesFocusable, elementsSelectable: elementsSelectable, nodeClickDistance: props.nodeClickDistance, onError: onError }, nodeId));\n        }) }));\n}\nNodeRendererComponent.displayName = 'NodeRenderer';\nconst NodeRenderer = memo(NodeRendererComponent);\n\n/**\n * Hook for getting the visible edge ids from the store.\n *\n * @internal\n * @param onlyRenderVisible\n * @returns array with visible edge ids\n */\nfunction useVisibleEdgeIds(onlyRenderVisible) {\n    const edgeIds = useStore(useCallback((s) => {\n        if (!onlyRenderVisible) {\n            return s.edges.map((edge) => edge.id);\n        }\n        const visibleEdgeIds = [];\n        if (s.width && s.height) {\n            for (const edge of s.edges) {\n                const sourceNode = s.nodeLookup.get(edge.source);\n                const targetNode = s.nodeLookup.get(edge.target);\n                if (sourceNode &&\n                    targetNode &&\n                    isEdgeVisible({\n                        sourceNode,\n                        targetNode,\n                        width: s.width,\n                        height: s.height,\n                        transform: s.transform,\n                    })) {\n                    visibleEdgeIds.push(edge.id);\n                }\n            }\n        }\n        return visibleEdgeIds;\n    }, [onlyRenderVisible]), shallow);\n    return edgeIds;\n}\n\nconst ArrowSymbol = ({ color = 'none', strokeWidth = 1 }) => {\n    return (jsx(\"polyline\", { style: {\n            stroke: color,\n            strokeWidth,\n        }, strokeLinecap: \"round\", strokeLinejoin: \"round\", fill: \"none\", points: \"-5,-4 0,0 -5,4\" }));\n};\nconst ArrowClosedSymbol = ({ color = 'none', strokeWidth = 1 }) => {\n    return (jsx(\"polyline\", { style: {\n            stroke: color,\n            fill: color,\n            strokeWidth,\n        }, strokeLinecap: \"round\", strokeLinejoin: \"round\", points: \"-5,-4 0,0 -5,4 -5,-4\" }));\n};\nconst MarkerSymbols = {\n    [MarkerType.Arrow]: ArrowSymbol,\n    [MarkerType.ArrowClosed]: ArrowClosedSymbol,\n};\nfunction useMarkerSymbol(type) {\n    const store = useStoreApi();\n    const symbol = useMemo(() => {\n        const symbolExists = Object.prototype.hasOwnProperty.call(MarkerSymbols, type);\n        if (!symbolExists) {\n            store.getState().onError?.('009', errorMessages['error009'](type));\n            return null;\n        }\n        return MarkerSymbols[type];\n    }, [type]);\n    return symbol;\n}\n\nconst Marker = ({ id, type, color, width = 12.5, height = 12.5, markerUnits = 'strokeWidth', strokeWidth, orient = 'auto-start-reverse', }) => {\n    const Symbol = useMarkerSymbol(type);\n    if (!Symbol) {\n        return null;\n    }\n    return (jsx(\"marker\", { className: \"react-flow__arrowhead\", id: id, markerWidth: `${width}`, markerHeight: `${height}`, viewBox: \"-10 -10 20 20\", markerUnits: markerUnits, orient: orient, refX: \"0\", refY: \"0\", children: jsx(Symbol, { color: color, strokeWidth: strokeWidth }) }));\n};\n// when you have multiple flows on a page and you hide the first one, the other ones have no markers anymore\n// when they do have markers with the same ids. To prevent this the user can pass a unique id to the react flow wrapper\n// that we can then use for creating our unique marker ids\nconst MarkerDefinitions = ({ defaultColor, rfId }) => {\n    const edges = useStore((s) => s.edges);\n    const defaultEdgeOptions = useStore((s) => s.defaultEdgeOptions);\n    const markers = useMemo(() => {\n        const markers = createMarkerIds(edges, {\n            id: rfId,\n            defaultColor,\n            defaultMarkerStart: defaultEdgeOptions?.markerStart,\n            defaultMarkerEnd: defaultEdgeOptions?.markerEnd,\n        });\n        return markers;\n    }, [edges, defaultEdgeOptions, rfId, defaultColor]);\n    if (!markers.length) {\n        return null;\n    }\n    return (jsx(\"svg\", { className: \"react-flow__marker\", children: jsx(\"defs\", { children: markers.map((marker) => (jsx(Marker, { id: marker.id, type: marker.type, color: marker.color, width: marker.width, height: marker.height, markerUnits: marker.markerUnits, strokeWidth: marker.strokeWidth, orient: marker.orient }, marker.id))) }) }));\n};\nMarkerDefinitions.displayName = 'MarkerDefinitions';\nvar MarkerDefinitions$1 = memo(MarkerDefinitions);\n\nfunction EdgeTextComponent({ x, y, label, labelStyle = {}, labelShowBg = true, labelBgStyle = {}, labelBgPadding = [2, 4], labelBgBorderRadius = 2, children, className, ...rest }) {\n    const [edgeTextBbox, setEdgeTextBbox] = useState({ x: 1, y: 0, width: 0, height: 0 });\n    const edgeTextClasses = cc(['react-flow__edge-textwrapper', className]);\n    const edgeTextRef = useRef(null);\n    useEffect(() => {\n        if (edgeTextRef.current) {\n            const textBbox = edgeTextRef.current.getBBox();\n            setEdgeTextBbox({\n                x: textBbox.x,\n                y: textBbox.y,\n                width: textBbox.width,\n                height: textBbox.height,\n            });\n        }\n    }, [label]);\n    if (typeof label === 'undefined' || !label) {\n        return null;\n    }\n    return (jsxs(\"g\", { transform: `translate(${x - edgeTextBbox.width / 2} ${y - edgeTextBbox.height / 2})`, className: edgeTextClasses, visibility: edgeTextBbox.width ? 'visible' : 'hidden', ...rest, children: [labelShowBg && (jsx(\"rect\", { width: edgeTextBbox.width + 2 * labelBgPadding[0], x: -labelBgPadding[0], y: -labelBgPadding[1], height: edgeTextBbox.height + 2 * labelBgPadding[1], className: \"react-flow__edge-textbg\", style: labelBgStyle, rx: labelBgBorderRadius, ry: labelBgBorderRadius })), jsx(\"text\", { className: \"react-flow__edge-text\", y: edgeTextBbox.height / 2, dy: \"0.3em\", ref: edgeTextRef, style: labelStyle, children: label }), children] }));\n}\nEdgeTextComponent.displayName = 'EdgeText';\nconst EdgeText = memo(EdgeTextComponent);\n\nfunction BaseEdge({ path, labelX, labelY, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, interactionWidth = 20, ...props }) {\n    return (jsxs(Fragment, { children: [jsx(\"path\", { ...props, d: path, fill: \"none\", className: cc(['react-flow__edge-path', props.className]) }), interactionWidth && (jsx(\"path\", { d: path, fill: \"none\", strokeOpacity: 0, strokeWidth: interactionWidth, className: \"react-flow__edge-interaction\" })), label && isNumeric(labelX) && isNumeric(labelY) ? (jsx(EdgeText, { x: labelX, y: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius })) : null] }));\n}\n\nfunction getControl({ pos, x1, y1, x2, y2 }) {\n    if (pos === Position.Left || pos === Position.Right) {\n        return [0.5 * (x1 + x2), y1];\n    }\n    return [x1, 0.5 * (y1 + y2)];\n}\nfunction getSimpleBezierPath({ sourceX, sourceY, sourcePosition = Position.Bottom, targetX, targetY, targetPosition = Position.Top, }) {\n    const [sourceControlX, sourceControlY] = getControl({\n        pos: sourcePosition,\n        x1: sourceX,\n        y1: sourceY,\n        x2: targetX,\n        y2: targetY,\n    });\n    const [targetControlX, targetControlY] = getControl({\n        pos: targetPosition,\n        x1: targetX,\n        y1: targetY,\n        x2: sourceX,\n        y2: sourceY,\n    });\n    const [labelX, labelY, offsetX, offsetY] = getBezierEdgeCenter({\n        sourceX,\n        sourceY,\n        targetX,\n        targetY,\n        sourceControlX,\n        sourceControlY,\n        targetControlX,\n        targetControlY,\n    });\n    return [\n        `M${sourceX},${sourceY} C${sourceControlX},${sourceControlY} ${targetControlX},${targetControlY} ${targetX},${targetY}`,\n        labelX,\n        labelY,\n        offsetX,\n        offsetY,\n    ];\n}\nfunction createSimpleBezierEdge(params) {\n    // eslint-disable-next-line react/display-name\n    return memo(({ id, sourceX, sourceY, targetX, targetY, sourcePosition = Position.Bottom, targetPosition = Position.Top, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, markerEnd, markerStart, interactionWidth, }) => {\n        const [path, labelX, labelY] = getSimpleBezierPath({\n            sourceX,\n            sourceY,\n            sourcePosition,\n            targetX,\n            targetY,\n            targetPosition,\n        });\n        const _id = params.isInternal ? undefined : id;\n        return (jsx(BaseEdge, { id: _id, path: path, labelX: labelX, labelY: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius, style: style, markerEnd: markerEnd, markerStart: markerStart, interactionWidth: interactionWidth }));\n    });\n}\nconst SimpleBezierEdge = createSimpleBezierEdge({ isInternal: false });\nconst SimpleBezierEdgeInternal = createSimpleBezierEdge({ isInternal: true });\nSimpleBezierEdge.displayName = 'SimpleBezierEdge';\nSimpleBezierEdgeInternal.displayName = 'SimpleBezierEdgeInternal';\n\nfunction createSmoothStepEdge(params) {\n    // eslint-disable-next-line react/display-name\n    return memo(({ id, sourceX, sourceY, targetX, targetY, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, sourcePosition = Position.Bottom, targetPosition = Position.Top, markerEnd, markerStart, pathOptions, interactionWidth, }) => {\n        const [path, labelX, labelY] = getSmoothStepPath({\n            sourceX,\n            sourceY,\n            sourcePosition,\n            targetX,\n            targetY,\n            targetPosition,\n            borderRadius: pathOptions?.borderRadius,\n            offset: pathOptions?.offset,\n        });\n        const _id = params.isInternal ? undefined : id;\n        return (jsx(BaseEdge, { id: _id, path: path, labelX: labelX, labelY: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius, style: style, markerEnd: markerEnd, markerStart: markerStart, interactionWidth: interactionWidth }));\n    });\n}\nconst SmoothStepEdge = createSmoothStepEdge({ isInternal: false });\nconst SmoothStepEdgeInternal = createSmoothStepEdge({ isInternal: true });\nSmoothStepEdge.displayName = 'SmoothStepEdge';\nSmoothStepEdgeInternal.displayName = 'SmoothStepEdgeInternal';\n\nfunction createStepEdge(params) {\n    // eslint-disable-next-line react/display-name\n    return memo(({ id, ...props }) => {\n        const _id = params.isInternal ? undefined : id;\n        return (jsx(SmoothStepEdge, { ...props, id: _id, pathOptions: useMemo(() => ({ borderRadius: 0, offset: props.pathOptions?.offset }), [props.pathOptions?.offset]) }));\n    });\n}\nconst StepEdge = createStepEdge({ isInternal: false });\nconst StepEdgeInternal = createStepEdge({ isInternal: true });\nStepEdge.displayName = 'StepEdge';\nStepEdgeInternal.displayName = 'StepEdgeInternal';\n\nfunction createStraightEdge(params) {\n    // eslint-disable-next-line react/display-name\n    return memo(({ id, sourceX, sourceY, targetX, targetY, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, markerEnd, markerStart, interactionWidth, }) => {\n        const [path, labelX, labelY] = getStraightPath({ sourceX, sourceY, targetX, targetY });\n        const _id = params.isInternal ? undefined : id;\n        return (jsx(BaseEdge, { id: _id, path: path, labelX: labelX, labelY: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius, style: style, markerEnd: markerEnd, markerStart: markerStart, interactionWidth: interactionWidth }));\n    });\n}\nconst StraightEdge = createStraightEdge({ isInternal: false });\nconst StraightEdgeInternal = createStraightEdge({ isInternal: true });\nStraightEdge.displayName = 'StraightEdge';\nStraightEdgeInternal.displayName = 'StraightEdgeInternal';\n\nfunction createBezierEdge(params) {\n    // eslint-disable-next-line react/display-name\n    return memo(({ id, sourceX, sourceY, targetX, targetY, sourcePosition = Position.Bottom, targetPosition = Position.Top, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, markerEnd, markerStart, pathOptions, interactionWidth, }) => {\n        const [path, labelX, labelY] = getBezierPath({\n            sourceX,\n            sourceY,\n            sourcePosition,\n            targetX,\n            targetY,\n            targetPosition,\n            curvature: pathOptions?.curvature,\n        });\n        const _id = params.isInternal ? undefined : id;\n        return (jsx(BaseEdge, { id: _id, path: path, labelX: labelX, labelY: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius, style: style, markerEnd: markerEnd, markerStart: markerStart, interactionWidth: interactionWidth }));\n    });\n}\nconst BezierEdge = createBezierEdge({ isInternal: false });\nconst BezierEdgeInternal = createBezierEdge({ isInternal: true });\nBezierEdge.displayName = 'BezierEdge';\nBezierEdgeInternal.displayName = 'BezierEdgeInternal';\n\nconst builtinEdgeTypes = {\n    default: BezierEdgeInternal,\n    straight: StraightEdgeInternal,\n    step: StepEdgeInternal,\n    smoothstep: SmoothStepEdgeInternal,\n    simplebezier: SimpleBezierEdgeInternal,\n};\nconst nullPosition = {\n    sourceX: null,\n    sourceY: null,\n    targetX: null,\n    targetY: null,\n    sourcePosition: null,\n    targetPosition: null,\n};\n\nconst shiftX = (x, shift, position) => {\n    if (position === Position.Left)\n        return x - shift;\n    if (position === Position.Right)\n        return x + shift;\n    return x;\n};\nconst shiftY = (y, shift, position) => {\n    if (position === Position.Top)\n        return y - shift;\n    if (position === Position.Bottom)\n        return y + shift;\n    return y;\n};\nconst EdgeUpdaterClassName = 'react-flow__edgeupdater';\nfunction EdgeAnchor({ position, centerX, centerY, radius = 10, onMouseDown, onMouseEnter, onMouseOut, type, }) {\n    return (jsx(\"circle\", { onMouseDown: onMouseDown, onMouseEnter: onMouseEnter, onMouseOut: onMouseOut, className: cc([EdgeUpdaterClassName, `${EdgeUpdaterClassName}-${type}`]), cx: shiftX(centerX, radius, position), cy: shiftY(centerY, radius, position), r: radius, stroke: \"transparent\", fill: \"transparent\" }));\n}\n\nfunction EdgeUpdateAnchors({ isReconnectable, reconnectRadius, edge, sourceX, sourceY, targetX, targetY, sourcePosition, targetPosition, onReconnect, onReconnectStart, onReconnectEnd, setReconnecting, setUpdateHover, }) {\n    const store = useStoreApi();\n    const handleEdgeUpdater = (event, oppositeHandle) => {\n        // avoid triggering edge updater if mouse btn is not left\n        if (event.button !== 0) {\n            return;\n        }\n        const { autoPanOnConnect, domNode, isValidConnection, connectionMode, connectionRadius, lib, onConnectStart, onConnectEnd, cancelConnection, nodeLookup, rfId: flowId, panBy, updateConnection, } = store.getState();\n        const isTarget = oppositeHandle.type === 'target';\n        setReconnecting(true);\n        onReconnectStart?.(event, edge, oppositeHandle.type);\n        const _onReconnectEnd = (evt, connectionState) => {\n            setReconnecting(false);\n            onReconnectEnd?.(evt, edge, oppositeHandle.type, connectionState);\n        };\n        const onConnectEdge = (connection) => onReconnect?.(edge, connection);\n        XYHandle.onPointerDown(event.nativeEvent, {\n            autoPanOnConnect,\n            connectionMode,\n            connectionRadius,\n            domNode,\n            handleId: oppositeHandle.id,\n            nodeId: oppositeHandle.nodeId,\n            nodeLookup,\n            isTarget,\n            edgeUpdaterType: oppositeHandle.type,\n            lib,\n            flowId,\n            cancelConnection,\n            panBy,\n            isValidConnection,\n            onConnect: onConnectEdge,\n            onConnectStart,\n            onConnectEnd,\n            onReconnectEnd: _onReconnectEnd,\n            updateConnection,\n            getTransform: () => store.getState().transform,\n            getFromHandle: () => store.getState().connection.fromHandle,\n        });\n    };\n    const onReconnectSourceMouseDown = (event) => handleEdgeUpdater(event, { nodeId: edge.target, id: edge.targetHandle ?? null, type: 'target' });\n    const onReconnectTargetMouseDown = (event) => handleEdgeUpdater(event, { nodeId: edge.source, id: edge.sourceHandle ?? null, type: 'source' });\n    const onReconnectMouseEnter = () => setUpdateHover(true);\n    const onReconnectMouseOut = () => setUpdateHover(false);\n    return (jsxs(Fragment, { children: [(isReconnectable === true || isReconnectable === 'source') && (jsx(EdgeAnchor, { position: sourcePosition, centerX: sourceX, centerY: sourceY, radius: reconnectRadius, onMouseDown: onReconnectSourceMouseDown, onMouseEnter: onReconnectMouseEnter, onMouseOut: onReconnectMouseOut, type: \"source\" })), (isReconnectable === true || isReconnectable === 'target') && (jsx(EdgeAnchor, { position: targetPosition, centerX: targetX, centerY: targetY, radius: reconnectRadius, onMouseDown: onReconnectTargetMouseDown, onMouseEnter: onReconnectMouseEnter, onMouseOut: onReconnectMouseOut, type: \"target\" }))] }));\n}\n\nfunction EdgeWrapper({ id, edgesFocusable, edgesReconnectable, elementsSelectable, onClick, onDoubleClick, onContextMenu, onMouseEnter, onMouseMove, onMouseLeave, reconnectRadius, onReconnect, onReconnectStart, onReconnectEnd, rfId, edgeTypes, noPanClassName, onError, disableKeyboardA11y, }) {\n    let edge = useStore((s) => s.edgeLookup.get(id));\n    const defaultEdgeOptions = useStore((s) => s.defaultEdgeOptions);\n    edge = defaultEdgeOptions ? { ...defaultEdgeOptions, ...edge } : edge;\n    let edgeType = edge.type || 'default';\n    let EdgeComponent = edgeTypes?.[edgeType] || builtinEdgeTypes[edgeType];\n    if (EdgeComponent === undefined) {\n        onError?.('011', errorMessages['error011'](edgeType));\n        edgeType = 'default';\n        EdgeComponent = builtinEdgeTypes.default;\n    }\n    const isFocusable = !!(edge.focusable || (edgesFocusable && typeof edge.focusable === 'undefined'));\n    const isReconnectable = typeof onReconnect !== 'undefined' &&\n        (edge.reconnectable || (edgesReconnectable && typeof edge.reconnectable === 'undefined'));\n    const isSelectable = !!(edge.selectable || (elementsSelectable && typeof edge.selectable === 'undefined'));\n    const edgeRef = useRef(null);\n    const [updateHover, setUpdateHover] = useState(false);\n    const [reconnecting, setReconnecting] = useState(false);\n    const store = useStoreApi();\n    const { zIndex, sourceX, sourceY, targetX, targetY, sourcePosition, targetPosition } = useStore(useCallback((store) => {\n        const sourceNode = store.nodeLookup.get(edge.source);\n        const targetNode = store.nodeLookup.get(edge.target);\n        if (!sourceNode || !targetNode) {\n            return {\n                zIndex: edge.zIndex,\n                ...nullPosition,\n            };\n        }\n        const edgePosition = getEdgePosition({\n            id,\n            sourceNode,\n            targetNode,\n            sourceHandle: edge.sourceHandle || null,\n            targetHandle: edge.targetHandle || null,\n            connectionMode: store.connectionMode,\n            onError,\n        });\n        const zIndex = getElevatedEdgeZIndex({\n            selected: edge.selected,\n            zIndex: edge.zIndex,\n            sourceNode,\n            targetNode,\n            elevateOnSelect: store.elevateEdgesOnSelect,\n        });\n        return {\n            zIndex,\n            ...(edgePosition || nullPosition),\n        };\n    }, [edge.source, edge.target, edge.sourceHandle, edge.targetHandle, edge.selected, edge.zIndex]), shallow);\n    const markerStartUrl = useMemo(() => (edge.markerStart ? `url('#${getMarkerId(edge.markerStart, rfId)}')` : undefined), [edge.markerStart, rfId]);\n    const markerEndUrl = useMemo(() => (edge.markerEnd ? `url('#${getMarkerId(edge.markerEnd, rfId)}')` : undefined), [edge.markerEnd, rfId]);\n    if (edge.hidden || sourceX === null || sourceY === null || targetX === null || targetY === null) {\n        return null;\n    }\n    const onEdgeClick = (event) => {\n        const { addSelectedEdges, unselectNodesAndEdges, multiSelectionActive } = store.getState();\n        if (isSelectable) {\n            store.setState({ nodesSelectionActive: false });\n            if (edge.selected && multiSelectionActive) {\n                unselectNodesAndEdges({ nodes: [], edges: [edge] });\n                edgeRef.current?.blur();\n            }\n            else {\n                addSelectedEdges([id]);\n            }\n        }\n        if (onClick) {\n            onClick(event, edge);\n        }\n    };\n    const onEdgeDoubleClick = onDoubleClick\n        ? (event) => {\n            onDoubleClick(event, { ...edge });\n        }\n        : undefined;\n    const onEdgeContextMenu = onContextMenu\n        ? (event) => {\n            onContextMenu(event, { ...edge });\n        }\n        : undefined;\n    const onEdgeMouseEnter = onMouseEnter\n        ? (event) => {\n            onMouseEnter(event, { ...edge });\n        }\n        : undefined;\n    const onEdgeMouseMove = onMouseMove\n        ? (event) => {\n            onMouseMove(event, { ...edge });\n        }\n        : undefined;\n    const onEdgeMouseLeave = onMouseLeave\n        ? (event) => {\n            onMouseLeave(event, { ...edge });\n        }\n        : undefined;\n    const onKeyDown = (event) => {\n        if (!disableKeyboardA11y && elementSelectionKeys.includes(event.key) && isSelectable) {\n            const { unselectNodesAndEdges, addSelectedEdges } = store.getState();\n            const unselect = event.key === 'Escape';\n            if (unselect) {\n                edgeRef.current?.blur();\n                unselectNodesAndEdges({ edges: [edge] });\n            }\n            else {\n                addSelectedEdges([id]);\n            }\n        }\n    };\n    return (jsx(\"svg\", { style: { zIndex }, children: jsxs(\"g\", { className: cc([\n                'react-flow__edge',\n                `react-flow__edge-${edgeType}`,\n                edge.className,\n                noPanClassName,\n                {\n                    selected: edge.selected,\n                    animated: edge.animated,\n                    inactive: !isSelectable && !onClick,\n                    updating: updateHover,\n                    selectable: isSelectable,\n                },\n            ]), onClick: onEdgeClick, onDoubleClick: onEdgeDoubleClick, onContextMenu: onEdgeContextMenu, onMouseEnter: onEdgeMouseEnter, onMouseMove: onEdgeMouseMove, onMouseLeave: onEdgeMouseLeave, onKeyDown: isFocusable ? onKeyDown : undefined, tabIndex: isFocusable ? 0 : undefined, role: isFocusable ? 'button' : 'img', \"data-id\": id, \"data-testid\": `rf__edge-${id}`, \"aria-label\": edge.ariaLabel === null ? undefined : edge.ariaLabel || `Edge from ${edge.source} to ${edge.target}`, \"aria-describedby\": isFocusable ? `${ARIA_EDGE_DESC_KEY}-${rfId}` : undefined, ref: edgeRef, children: [!reconnecting && (jsx(EdgeComponent, { id: id, source: edge.source, target: edge.target, type: edge.type, selected: edge.selected, animated: edge.animated, selectable: isSelectable, deletable: edge.deletable ?? true, label: edge.label, labelStyle: edge.labelStyle, labelShowBg: edge.labelShowBg, labelBgStyle: edge.labelBgStyle, labelBgPadding: edge.labelBgPadding, labelBgBorderRadius: edge.labelBgBorderRadius, sourceX: sourceX, sourceY: sourceY, targetX: targetX, targetY: targetY, sourcePosition: sourcePosition, targetPosition: targetPosition, data: edge.data, style: edge.style, sourceHandleId: edge.sourceHandle, targetHandleId: edge.targetHandle, markerStart: markerStartUrl, markerEnd: markerEndUrl, pathOptions: 'pathOptions' in edge ? edge.pathOptions : undefined, interactionWidth: edge.interactionWidth })), isReconnectable && (jsx(EdgeUpdateAnchors, { edge: edge, isReconnectable: isReconnectable, reconnectRadius: reconnectRadius, onReconnect: onReconnect, onReconnectStart: onReconnectStart, onReconnectEnd: onReconnectEnd, sourceX: sourceX, sourceY: sourceY, targetX: targetX, targetY: targetY, sourcePosition: sourcePosition, targetPosition: targetPosition, setUpdateHover: setUpdateHover, setReconnecting: setReconnecting }))] }) }));\n}\n\nconst selector$a = (s) => ({\n    edgesFocusable: s.edgesFocusable,\n    edgesReconnectable: s.edgesReconnectable,\n    elementsSelectable: s.elementsSelectable,\n    connectionMode: s.connectionMode,\n    onError: s.onError,\n});\nfunction EdgeRendererComponent({ defaultMarkerColor, onlyRenderVisibleElements, rfId, edgeTypes, noPanClassName, onReconnect, onEdgeContextMenu, onEdgeMouseEnter, onEdgeMouseMove, onEdgeMouseLeave, onEdgeClick, reconnectRadius, onEdgeDoubleClick, onReconnectStart, onReconnectEnd, disableKeyboardA11y, }) {\n    const { edgesFocusable, edgesReconnectable, elementsSelectable, onError } = useStore(selector$a, shallow);\n    const edgeIds = useVisibleEdgeIds(onlyRenderVisibleElements);\n    return (jsxs(\"div\", { className: \"react-flow__edges\", children: [jsx(MarkerDefinitions$1, { defaultColor: defaultMarkerColor, rfId: rfId }), edgeIds.map((id) => {\n                return (jsx(EdgeWrapper, { id: id, edgesFocusable: edgesFocusable, edgesReconnectable: edgesReconnectable, elementsSelectable: elementsSelectable, noPanClassName: noPanClassName, onReconnect: onReconnect, onContextMenu: onEdgeContextMenu, onMouseEnter: onEdgeMouseEnter, onMouseMove: onEdgeMouseMove, onMouseLeave: onEdgeMouseLeave, onClick: onEdgeClick, reconnectRadius: reconnectRadius, onDoubleClick: onEdgeDoubleClick, onReconnectStart: onReconnectStart, onReconnectEnd: onReconnectEnd, rfId: rfId, onError: onError, edgeTypes: edgeTypes, disableKeyboardA11y: disableKeyboardA11y }, id));\n            })] }));\n}\nEdgeRendererComponent.displayName = 'EdgeRenderer';\nconst EdgeRenderer = memo(EdgeRendererComponent);\n\nconst selector$9 = (s) => `translate(${s.transform[0]}px,${s.transform[1]}px) scale(${s.transform[2]})`;\nfunction Viewport({ children }) {\n    const transform = useStore(selector$9);\n    return (jsx(\"div\", { className: \"react-flow__viewport xyflow__viewport react-flow__container\", style: { transform }, children: children }));\n}\n\n/**\n * Hook for calling onInit handler.\n *\n * @internal\n */\nfunction useOnInitHandler(onInit) {\n    const rfInstance = useReactFlow();\n    const isInitialized = useRef(false);\n    useEffect(() => {\n        if (!isInitialized.current && rfInstance.viewportInitialized && onInit) {\n            setTimeout(() => onInit(rfInstance), 1);\n            isInitialized.current = true;\n        }\n    }, [onInit, rfInstance.viewportInitialized]);\n}\n\nconst selector$8 = (state) => state.panZoom?.syncViewport;\n/**\n * Hook for syncing the viewport with the panzoom instance.\n *\n * @internal\n * @param viewport\n */\nfunction useViewportSync(viewport) {\n    const syncViewport = useStore(selector$8);\n    const store = useStoreApi();\n    useEffect(() => {\n        if (viewport) {\n            syncViewport?.(viewport);\n            store.setState({ transform: [viewport.x, viewport.y, viewport.zoom] });\n        }\n    }, [viewport, syncViewport]);\n    return null;\n}\n\nfunction storeSelector$1(s) {\n    return s.connection.inProgress\n        ? { ...s.connection, to: pointToRendererPoint(s.connection.to, s.transform) }\n        : { ...s.connection };\n}\nfunction getSelector(connectionSelector) {\n    if (connectionSelector) {\n        const combinedSelector = (s) => {\n            const connection = storeSelector$1(s);\n            return connectionSelector(connection);\n        };\n        return combinedSelector;\n    }\n    return storeSelector$1;\n}\n/**\n * Hook for accessing the connection state.\n *\n * @public\n * @returns ConnectionState\n */\nfunction useConnection(connectionSelector) {\n    const combinedSelector = getSelector(connectionSelector);\n    return useStore(combinedSelector, shallow);\n}\n\nconst selector$7 = (s) => ({\n    nodesConnectable: s.nodesConnectable,\n    isValid: s.connection.isValid,\n    inProgress: s.connection.inProgress,\n    width: s.width,\n    height: s.height,\n});\nfunction ConnectionLineWrapper({ containerStyle, style, type, component }) {\n    const { nodesConnectable, width, height, isValid, inProgress } = useStore(selector$7, shallow);\n    const renderConnection = !!(width && nodesConnectable && inProgress);\n    if (!renderConnection) {\n        return null;\n    }\n    return (jsx(\"svg\", { style: containerStyle, width: width, height: height, className: \"react-flow__connectionline react-flow__container\", children: jsx(\"g\", { className: cc(['react-flow__connection', getConnectionStatus(isValid)]), children: jsx(ConnectionLine, { style: style, type: type, CustomComponent: component, isValid: isValid }) }) }));\n}\nconst ConnectionLine = ({ style, type = ConnectionLineType.Bezier, CustomComponent, isValid }) => {\n    const { inProgress, from, fromNode, fromHandle, fromPosition, to, toNode, toHandle, toPosition } = useConnection();\n    if (!inProgress) {\n        return;\n    }\n    if (CustomComponent) {\n        return (jsx(CustomComponent, { connectionLineType: type, connectionLineStyle: style, fromNode: fromNode, fromHandle: fromHandle, fromX: from.x, fromY: from.y, toX: to.x, toY: to.y, fromPosition: fromPosition, toPosition: toPosition, connectionStatus: getConnectionStatus(isValid), toNode: toNode, toHandle: toHandle }));\n    }\n    let path = '';\n    const pathParams = {\n        sourceX: from.x,\n        sourceY: from.y,\n        sourcePosition: fromPosition,\n        targetX: to.x,\n        targetY: to.y,\n        targetPosition: toPosition,\n    };\n    switch (type) {\n        case ConnectionLineType.Bezier:\n            [path] = getBezierPath(pathParams);\n            break;\n        case ConnectionLineType.SimpleBezier:\n            [path] = getSimpleBezierPath(pathParams);\n            break;\n        case ConnectionLineType.Step:\n            [path] = getSmoothStepPath({\n                ...pathParams,\n                borderRadius: 0,\n            });\n            break;\n        case ConnectionLineType.SmoothStep:\n            [path] = getSmoothStepPath(pathParams);\n            break;\n        default:\n            [path] = getStraightPath(pathParams);\n    }\n    return jsx(\"path\", { d: path, fill: \"none\", className: \"react-flow__connection-path\", style: style });\n};\nConnectionLine.displayName = 'ConnectionLine';\n\nconst emptyTypes = {};\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction useNodeOrEdgeTypesWarning(nodeOrEdgeTypes = emptyTypes) {\n    const typesRef = useRef(nodeOrEdgeTypes);\n    const store = useStoreApi();\n    useEffect(() => {\n        if (process.env.NODE_ENV === 'development') {\n            const usedKeys = new Set([...Object.keys(typesRef.current), ...Object.keys(nodeOrEdgeTypes)]);\n            for (const key of usedKeys) {\n                if (typesRef.current[key] !== nodeOrEdgeTypes[key]) {\n                    store.getState().onError?.('002', errorMessages['error002']());\n                    break;\n                }\n            }\n            typesRef.current = nodeOrEdgeTypes;\n        }\n    }, [nodeOrEdgeTypes]);\n}\n\nfunction useStylesLoadedWarning() {\n    const store = useStoreApi();\n    const checked = useRef(false);\n    useEffect(() => {\n        if (process.env.NODE_ENV === 'development') {\n            if (!checked.current) {\n                const pane = document.querySelector('.react-flow__pane');\n                if (pane && !(window.getComputedStyle(pane).zIndex === '1')) {\n                    store.getState().onError?.('013', errorMessages['error013']('react'));\n                }\n                checked.current = true;\n            }\n        }\n    }, []);\n}\n\nfunction GraphViewComponent({ nodeTypes, edgeTypes, onInit, onNodeClick, onEdgeClick, onNodeDoubleClick, onEdgeDoubleClick, onNodeMouseEnter, onNodeMouseMove, onNodeMouseLeave, onNodeContextMenu, onSelectionContextMenu, onSelectionStart, onSelectionEnd, connectionLineType, connectionLineStyle, connectionLineComponent, connectionLineContainerStyle, selectionKeyCode, selectionOnDrag, selectionMode, multiSelectionKeyCode, panActivationKeyCode, zoomActivationKeyCode, deleteKeyCode, onlyRenderVisibleElements, elementsSelectable, defaultViewport, translateExtent, minZoom, maxZoom, preventScrolling, defaultMarkerColor, zoomOnScroll, zoomOnPinch, panOnScroll, panOnScrollSpeed, panOnScrollMode, zoomOnDoubleClick, panOnDrag, onPaneClick, onPaneMouseEnter, onPaneMouseMove, onPaneMouseLeave, onPaneScroll, onPaneContextMenu, paneClickDistance, nodeClickDistance, onEdgeContextMenu, onEdgeMouseEnter, onEdgeMouseMove, onEdgeMouseLeave, reconnectRadius, onReconnect, onReconnectStart, onReconnectEnd, noDragClassName, noWheelClassName, noPanClassName, disableKeyboardA11y, nodeExtent, rfId, viewport, onViewportChange, }) {\n    useNodeOrEdgeTypesWarning(nodeTypes);\n    useNodeOrEdgeTypesWarning(edgeTypes);\n    useStylesLoadedWarning();\n    useOnInitHandler(onInit);\n    useViewportSync(viewport);\n    return (jsx(FlowRenderer, { onPaneClick: onPaneClick, onPaneMouseEnter: onPaneMouseEnter, onPaneMouseMove: onPaneMouseMove, onPaneMouseLeave: onPaneMouseLeave, onPaneContextMenu: onPaneContextMenu, onPaneScroll: onPaneScroll, paneClickDistance: paneClickDistance, deleteKeyCode: deleteKeyCode, selectionKeyCode: selectionKeyCode, selectionOnDrag: selectionOnDrag, selectionMode: selectionMode, onSelectionStart: onSelectionStart, onSelectionEnd: onSelectionEnd, multiSelectionKeyCode: multiSelectionKeyCode, panActivationKeyCode: panActivationKeyCode, zoomActivationKeyCode: zoomActivationKeyCode, elementsSelectable: elementsSelectable, zoomOnScroll: zoomOnScroll, zoomOnPinch: zoomOnPinch, zoomOnDoubleClick: zoomOnDoubleClick, panOnScroll: panOnScroll, panOnScrollSpeed: panOnScrollSpeed, panOnScrollMode: panOnScrollMode, panOnDrag: panOnDrag, defaultViewport: defaultViewport, translateExtent: translateExtent, minZoom: minZoom, maxZoom: maxZoom, onSelectionContextMenu: onSelectionContextMenu, preventScrolling: preventScrolling, noDragClassName: noDragClassName, noWheelClassName: noWheelClassName, noPanClassName: noPanClassName, disableKeyboardA11y: disableKeyboardA11y, onViewportChange: onViewportChange, isControlledViewport: !!viewport, children: jsxs(Viewport, { children: [jsx(EdgeRenderer, { edgeTypes: edgeTypes, onEdgeClick: onEdgeClick, onEdgeDoubleClick: onEdgeDoubleClick, onReconnect: onReconnect, onReconnectStart: onReconnectStart, onReconnectEnd: onReconnectEnd, onlyRenderVisibleElements: onlyRenderVisibleElements, onEdgeContextMenu: onEdgeContextMenu, onEdgeMouseEnter: onEdgeMouseEnter, onEdgeMouseMove: onEdgeMouseMove, onEdgeMouseLeave: onEdgeMouseLeave, reconnectRadius: reconnectRadius, defaultMarkerColor: defaultMarkerColor, noPanClassName: noPanClassName, disableKeyboardA11y: disableKeyboardA11y, rfId: rfId }), jsx(ConnectionLineWrapper, { style: connectionLineStyle, type: connectionLineType, component: connectionLineComponent, containerStyle: connectionLineContainerStyle }), jsx(\"div\", { className: \"react-flow__edgelabel-renderer\" }), jsx(NodeRenderer, { nodeTypes: nodeTypes, onNodeClick: onNodeClick, onNodeDoubleClick: onNodeDoubleClick, onNodeMouseEnter: onNodeMouseEnter, onNodeMouseMove: onNodeMouseMove, onNodeMouseLeave: onNodeMouseLeave, onNodeContextMenu: onNodeContextMenu, nodeClickDistance: nodeClickDistance, onlyRenderVisibleElements: onlyRenderVisibleElements, noPanClassName: noPanClassName, noDragClassName: noDragClassName, disableKeyboardA11y: disableKeyboardA11y, nodeExtent: nodeExtent, rfId: rfId }), jsx(\"div\", { className: \"react-flow__viewport-portal\" })] }) }));\n}\nGraphViewComponent.displayName = 'GraphView';\nconst GraphView = memo(GraphViewComponent);\n\nconst getInitialState = ({ nodes, edges, defaultNodes, defaultEdges, width, height, fitView, nodeOrigin, nodeExtent, } = {}) => {\n    const nodeLookup = new Map();\n    const parentLookup = new Map();\n    const connectionLookup = new Map();\n    const edgeLookup = new Map();\n    const storeEdges = defaultEdges ?? edges ?? [];\n    const storeNodes = defaultNodes ?? nodes ?? [];\n    const storeNodeOrigin = nodeOrigin ?? [0, 0];\n    const storeNodeExtent = nodeExtent ?? infiniteExtent;\n    updateConnectionLookup(connectionLookup, edgeLookup, storeEdges);\n    adoptUserNodes(storeNodes, nodeLookup, parentLookup, {\n        nodeOrigin: storeNodeOrigin,\n        nodeExtent: storeNodeExtent,\n        elevateNodesOnSelect: false,\n    });\n    let transform = [0, 0, 1];\n    if (fitView && width && height) {\n        const bounds = getInternalNodesBounds(nodeLookup, {\n            filter: (node) => !!((node.width || node.initialWidth) && (node.height || node.initialHeight)),\n        });\n        const { x, y, zoom } = getViewportForBounds(bounds, width, height, 0.5, 2, 0.1);\n        transform = [x, y, zoom];\n    }\n    return {\n        rfId: '1',\n        width: 0,\n        height: 0,\n        transform,\n        nodes: storeNodes,\n        nodeLookup,\n        parentLookup,\n        edges: storeEdges,\n        edgeLookup,\n        connectionLookup,\n        onNodesChange: null,\n        onEdgesChange: null,\n        hasDefaultNodes: defaultNodes !== undefined,\n        hasDefaultEdges: defaultEdges !== undefined,\n        panZoom: null,\n        minZoom: 0.5,\n        maxZoom: 2,\n        translateExtent: infiniteExtent,\n        nodeExtent: storeNodeExtent,\n        nodesSelectionActive: false,\n        userSelectionActive: false,\n        userSelectionRect: null,\n        connectionMode: ConnectionMode.Strict,\n        domNode: null,\n        paneDragging: false,\n        noPanClassName: 'nopan',\n        nodeOrigin: storeNodeOrigin,\n        nodeDragThreshold: 1,\n        snapGrid: [15, 15],\n        snapToGrid: false,\n        nodesDraggable: true,\n        nodesConnectable: true,\n        nodesFocusable: true,\n        edgesFocusable: true,\n        edgesReconnectable: true,\n        elementsSelectable: true,\n        elevateNodesOnSelect: true,\n        elevateEdgesOnSelect: false,\n        fitViewOnInit: false,\n        fitViewDone: false,\n        fitViewOnInitOptions: undefined,\n        selectNodesOnDrag: true,\n        multiSelectionActive: false,\n        connection: { ...initialConnection },\n        connectionClickStartHandle: null,\n        connectOnClick: true,\n        ariaLiveMessage: '',\n        autoPanOnConnect: true,\n        autoPanOnNodeDrag: true,\n        autoPanSpeed: 15,\n        connectionRadius: 20,\n        onError: devWarn,\n        isValidConnection: undefined,\n        onSelectionChangeHandlers: [],\n        lib: 'react',\n        debug: false,\n    };\n};\n\nconst createStore = ({ nodes, edges, defaultNodes, defaultEdges, width, height, fitView: fitView$1, nodeOrigin, nodeExtent, }) => createWithEqualityFn((set, get) => ({\n    ...getInitialState({ nodes, edges, width, height, fitView: fitView$1, nodeOrigin, nodeExtent, defaultNodes, defaultEdges }),\n    setNodes: (nodes) => {\n        const { nodeLookup, parentLookup, nodeOrigin, elevateNodesOnSelect } = get();\n        // setNodes() is called exclusively in response to user actions:\n        // - either when the `<ReactFlow nodes>` prop is updated in the controlled ReactFlow setup,\n        // - or when the user calls something like `reactFlowInstance.setNodes()` in an uncontrolled ReactFlow setup.\n        //\n        // When this happens, we take the note objects passed by the user and extend them with fields\n        // relevant for internal React Flow operations.\n        adoptUserNodes(nodes, nodeLookup, parentLookup, {\n            nodeOrigin,\n            nodeExtent,\n            elevateNodesOnSelect,\n            checkEquality: true,\n        });\n        set({ nodes });\n    },\n    setEdges: (edges) => {\n        const { connectionLookup, edgeLookup } = get();\n        updateConnectionLookup(connectionLookup, edgeLookup, edges);\n        set({ edges });\n    },\n    setDefaultNodesAndEdges: (nodes, edges) => {\n        if (nodes) {\n            const { setNodes } = get();\n            setNodes(nodes);\n            set({ hasDefaultNodes: true });\n        }\n        if (edges) {\n            const { setEdges } = get();\n            setEdges(edges);\n            set({ hasDefaultEdges: true });\n        }\n    },\n    // Every node gets registerd at a ResizeObserver. Whenever a node\n    // changes its dimensions, this function is called to measure the\n    // new dimensions and update the nodes.\n    updateNodeInternals: (updates, params = { triggerFitView: true }) => {\n        const { triggerNodeChanges, nodeLookup, parentLookup, fitViewOnInit, fitViewDone, fitViewOnInitOptions, domNode, nodeOrigin, nodeExtent, debug, fitViewSync, } = get();\n        const { changes, updatedInternals } = updateNodeInternals(updates, nodeLookup, parentLookup, domNode, nodeOrigin, nodeExtent);\n        if (!updatedInternals) {\n            return;\n        }\n        updateAbsolutePositions(nodeLookup, parentLookup, { nodeOrigin, nodeExtent });\n        if (params.triggerFitView) {\n            // we call fitView once initially after all dimensions are set\n            let nextFitViewDone = fitViewDone;\n            if (!fitViewDone && fitViewOnInit) {\n                nextFitViewDone = fitViewSync({\n                    ...fitViewOnInitOptions,\n                    nodes: fitViewOnInitOptions?.nodes,\n                });\n            }\n            // here we are cirmumventing the onNodesChange handler\n            // in order to be able to display nodes even if the user\n            // has not provided an onNodesChange handler.\n            // Nodes are only rendered if they have a width and height\n            // attribute which they get from this handler.\n            set({ fitViewDone: nextFitViewDone });\n        }\n        else {\n            // we always want to trigger useStore calls whenever updateNodeInternals is called\n            set({});\n        }\n        if (changes?.length > 0) {\n            if (debug) {\n                console.log('React Flow: trigger node changes', changes);\n            }\n            triggerNodeChanges?.(changes);\n        }\n    },\n    updateNodePositions: (nodeDragItems, dragging = false) => {\n        const parentExpandChildren = [];\n        const changes = [];\n        for (const [id, dragItem] of nodeDragItems) {\n            const expandParent = !!(dragItem?.expandParent && dragItem?.parentId && dragItem?.position);\n            const change = {\n                id,\n                type: 'position',\n                position: expandParent\n                    ? {\n                        x: Math.max(0, dragItem.position.x),\n                        y: Math.max(0, dragItem.position.y),\n                    }\n                    : dragItem.position,\n                dragging,\n            };\n            if (expandParent) {\n                parentExpandChildren.push({\n                    id,\n                    parentId: dragItem.parentId,\n                    rect: {\n                        ...dragItem.internals.positionAbsolute,\n                        width: dragItem.measured.width,\n                        height: dragItem.measured.height,\n                    },\n                });\n            }\n            changes.push(change);\n        }\n        if (parentExpandChildren.length > 0) {\n            const { nodeLookup, parentLookup, nodeOrigin } = get();\n            const parentExpandChanges = handleExpandParent(parentExpandChildren, nodeLookup, parentLookup, nodeOrigin);\n            changes.push(...parentExpandChanges);\n        }\n        get().triggerNodeChanges(changes);\n    },\n    triggerNodeChanges: (changes) => {\n        const { onNodesChange, setNodes, nodes, hasDefaultNodes, debug } = get();\n        if (changes?.length) {\n            if (hasDefaultNodes) {\n                const updatedNodes = applyNodeChanges(changes, nodes);\n                setNodes(updatedNodes);\n            }\n            if (debug) {\n                console.log('React Flow: trigger node changes', changes);\n            }\n            onNodesChange?.(changes);\n        }\n    },\n    triggerEdgeChanges: (changes) => {\n        const { onEdgesChange, setEdges, edges, hasDefaultEdges, debug } = get();\n        if (changes?.length) {\n            if (hasDefaultEdges) {\n                const updatedEdges = applyEdgeChanges(changes, edges);\n                setEdges(updatedEdges);\n            }\n            if (debug) {\n                console.log('React Flow: trigger edge changes', changes);\n            }\n            onEdgesChange?.(changes);\n        }\n    },\n    addSelectedNodes: (selectedNodeIds) => {\n        const { multiSelectionActive, edgeLookup, nodeLookup, triggerNodeChanges, triggerEdgeChanges } = get();\n        if (multiSelectionActive) {\n            const nodeChanges = selectedNodeIds.map((nodeId) => createSelectionChange(nodeId, true));\n            triggerNodeChanges(nodeChanges);\n            return;\n        }\n        triggerNodeChanges(getSelectionChanges(nodeLookup, new Set([...selectedNodeIds]), true));\n        triggerEdgeChanges(getSelectionChanges(edgeLookup));\n    },\n    addSelectedEdges: (selectedEdgeIds) => {\n        const { multiSelectionActive, edgeLookup, nodeLookup, triggerNodeChanges, triggerEdgeChanges } = get();\n        if (multiSelectionActive) {\n            const changedEdges = selectedEdgeIds.map((edgeId) => createSelectionChange(edgeId, true));\n            triggerEdgeChanges(changedEdges);\n            return;\n        }\n        triggerEdgeChanges(getSelectionChanges(edgeLookup, new Set([...selectedEdgeIds])));\n        triggerNodeChanges(getSelectionChanges(nodeLookup, new Set(), true));\n    },\n    unselectNodesAndEdges: ({ nodes, edges } = {}) => {\n        const { edges: storeEdges, nodes: storeNodes, nodeLookup, triggerNodeChanges, triggerEdgeChanges } = get();\n        const nodesToUnselect = nodes ? nodes : storeNodes;\n        const edgesToUnselect = edges ? edges : storeEdges;\n        const nodeChanges = nodesToUnselect.map((n) => {\n            const internalNode = nodeLookup.get(n.id);\n            if (internalNode) {\n                // we need to unselect the internal node that was selected previously before we\n                // send the change to the user to prevent it to be selected while dragging the new node\n                internalNode.selected = false;\n            }\n            return createSelectionChange(n.id, false);\n        });\n        const edgeChanges = edgesToUnselect.map((edge) => createSelectionChange(edge.id, false));\n        triggerNodeChanges(nodeChanges);\n        triggerEdgeChanges(edgeChanges);\n    },\n    setMinZoom: (minZoom) => {\n        const { panZoom, maxZoom } = get();\n        panZoom?.setScaleExtent([minZoom, maxZoom]);\n        set({ minZoom });\n    },\n    setMaxZoom: (maxZoom) => {\n        const { panZoom, minZoom } = get();\n        panZoom?.setScaleExtent([minZoom, maxZoom]);\n        set({ maxZoom });\n    },\n    setTranslateExtent: (translateExtent) => {\n        get().panZoom?.setTranslateExtent(translateExtent);\n        set({ translateExtent });\n    },\n    setPaneClickDistance: (clickDistance) => {\n        get().panZoom?.setClickDistance(clickDistance);\n    },\n    resetSelectedElements: () => {\n        const { edges, nodes, triggerNodeChanges, triggerEdgeChanges } = get();\n        const nodeChanges = nodes.reduce((res, node) => (node.selected ? [...res, createSelectionChange(node.id, false)] : res), []);\n        const edgeChanges = edges.reduce((res, edge) => (edge.selected ? [...res, createSelectionChange(edge.id, false)] : res), []);\n        triggerNodeChanges(nodeChanges);\n        triggerEdgeChanges(edgeChanges);\n    },\n    setNodeExtent: (nextNodeExtent) => {\n        const { nodes, nodeLookup, parentLookup, nodeOrigin, elevateNodesOnSelect, nodeExtent } = get();\n        if (nextNodeExtent[0][0] === nodeExtent[0][0] &&\n            nextNodeExtent[0][1] === nodeExtent[0][1] &&\n            nextNodeExtent[1][0] === nodeExtent[1][0] &&\n            nextNodeExtent[1][1] === nodeExtent[1][1]) {\n            return;\n        }\n        adoptUserNodes(nodes, nodeLookup, parentLookup, {\n            nodeOrigin,\n            nodeExtent: nextNodeExtent,\n            elevateNodesOnSelect,\n            checkEquality: false,\n        });\n        set({ nodeExtent: nextNodeExtent });\n    },\n    panBy: (delta) => {\n        const { transform, width, height, panZoom, translateExtent } = get();\n        return panBy({ delta, panZoom, transform, translateExtent, width, height });\n    },\n    fitView: (options) => {\n        const { panZoom, width, height, minZoom, maxZoom, nodeLookup } = get();\n        if (!panZoom) {\n            return Promise.resolve(false);\n        }\n        const fitViewNodes = getFitViewNodes(nodeLookup, options);\n        return fitView({\n            nodes: fitViewNodes,\n            width,\n            height,\n            panZoom,\n            minZoom,\n            maxZoom,\n        }, options);\n    },\n    // we can't call an asnychronous function in updateNodeInternals\n    // for that we created this sync version of fitView\n    fitViewSync: (options) => {\n        const { panZoom, width, height, minZoom, maxZoom, nodeLookup } = get();\n        if (!panZoom) {\n            return false;\n        }\n        const fitViewNodes = getFitViewNodes(nodeLookup, options);\n        fitView({\n            nodes: fitViewNodes,\n            width,\n            height,\n            panZoom,\n            minZoom,\n            maxZoom,\n        }, options);\n        return fitViewNodes.size > 0;\n    },\n    cancelConnection: () => {\n        set({\n            connection: { ...initialConnection },\n        });\n    },\n    updateConnection: (connection) => {\n        set({ connection });\n    },\n    reset: () => set({ ...getInitialState() }),\n}), Object.is);\n\nfunction ReactFlowProvider({ initialNodes: nodes, initialEdges: edges, defaultNodes, defaultEdges, initialWidth: width, initialHeight: height, fitView, nodeOrigin, nodeExtent, children, }) {\n    const [store] = useState(() => createStore({\n        nodes,\n        edges,\n        defaultNodes,\n        defaultEdges,\n        width,\n        height,\n        fitView,\n        nodeOrigin,\n        nodeExtent,\n    }));\n    return (jsx(Provider$1, { value: store, children: jsx(BatchProvider, { children: children }) }));\n}\n\nfunction Wrapper({ children, nodes, edges, defaultNodes, defaultEdges, width, height, fitView, nodeOrigin, nodeExtent, }) {\n    const isWrapped = useContext(StoreContext);\n    if (isWrapped) {\n        // we need to wrap it with a fragment because it's not allowed for children to be a ReactNode\n        // https://github.com/DefinitelyTyped/DefinitelyTyped/issues/18051\n        return jsx(Fragment, { children: children });\n    }\n    return (jsx(ReactFlowProvider, { initialNodes: nodes, initialEdges: edges, defaultNodes: defaultNodes, defaultEdges: defaultEdges, initialWidth: width, initialHeight: height, fitView: fitView, nodeOrigin: nodeOrigin, nodeExtent: nodeExtent, children: children }));\n}\n\nconst wrapperStyle = {\n    width: '100%',\n    height: '100%',\n    overflow: 'hidden',\n    position: 'relative',\n    zIndex: 0,\n};\nfunction ReactFlow({ nodes, edges, defaultNodes, defaultEdges, className, nodeTypes, edgeTypes, onNodeClick, onEdgeClick, onInit, onMove, onMoveStart, onMoveEnd, onConnect, onConnectStart, onConnectEnd, onClickConnectStart, onClickConnectEnd, onNodeMouseEnter, onNodeMouseMove, onNodeMouseLeave, onNodeContextMenu, onNodeDoubleClick, onNodeDragStart, onNodeDrag, onNodeDragStop, onNodesDelete, onEdgesDelete, onDelete, onSelectionChange, onSelectionDragStart, onSelectionDrag, onSelectionDragStop, onSelectionContextMenu, onSelectionStart, onSelectionEnd, onBeforeDelete, connectionMode, connectionLineType = ConnectionLineType.Bezier, connectionLineStyle, connectionLineComponent, connectionLineContainerStyle, deleteKeyCode = 'Backspace', selectionKeyCode = 'Shift', selectionOnDrag = false, selectionMode = SelectionMode.Full, panActivationKeyCode = 'Space', multiSelectionKeyCode = isMacOs() ? 'Meta' : 'Control', zoomActivationKeyCode = isMacOs() ? 'Meta' : 'Control', snapToGrid, snapGrid, onlyRenderVisibleElements = false, selectNodesOnDrag, nodesDraggable, nodesConnectable, nodesFocusable, nodeOrigin = defaultNodeOrigin, edgesFocusable, edgesReconnectable, elementsSelectable = true, defaultViewport: defaultViewport$1 = defaultViewport, minZoom = 0.5, maxZoom = 2, translateExtent = infiniteExtent, preventScrolling = true, nodeExtent, defaultMarkerColor = '#b1b1b7', zoomOnScroll = true, zoomOnPinch = true, panOnScroll = false, panOnScrollSpeed = 0.5, panOnScrollMode = PanOnScrollMode.Free, zoomOnDoubleClick = true, panOnDrag = true, onPaneClick, onPaneMouseEnter, onPaneMouseMove, onPaneMouseLeave, onPaneScroll, onPaneContextMenu, paneClickDistance = 0, nodeClickDistance = 0, children, onReconnect, onReconnectStart, onReconnectEnd, onEdgeContextMenu, onEdgeDoubleClick, onEdgeMouseEnter, onEdgeMouseMove, onEdgeMouseLeave, reconnectRadius = 10, onNodesChange, onEdgesChange, noDragClassName = 'nodrag', noWheelClassName = 'nowheel', noPanClassName = 'nopan', fitView, fitViewOptions, connectOnClick, attributionPosition, proOptions, defaultEdgeOptions, elevateNodesOnSelect, elevateEdgesOnSelect, disableKeyboardA11y = false, autoPanOnConnect, autoPanOnNodeDrag, autoPanSpeed, connectionRadius, isValidConnection, onError, style, id, nodeDragThreshold, viewport, onViewportChange, width, height, colorMode = 'light', debug, ...rest }, ref) {\n    const rfId = id || '1';\n    const colorModeClassName = useColorModeClass(colorMode);\n    return (jsx(\"div\", { \"data-testid\": \"rf__wrapper\", ...rest, style: { ...style, ...wrapperStyle }, ref: ref, className: cc(['react-flow', className, colorModeClassName]), id: id, children: jsxs(Wrapper, { nodes: nodes, edges: edges, width: width, height: height, fitView: fitView, nodeOrigin: nodeOrigin, nodeExtent: nodeExtent, children: [jsx(GraphView, { onInit: onInit, onNodeClick: onNodeClick, onEdgeClick: onEdgeClick, onNodeMouseEnter: onNodeMouseEnter, onNodeMouseMove: onNodeMouseMove, onNodeMouseLeave: onNodeMouseLeave, onNodeContextMenu: onNodeContextMenu, onNodeDoubleClick: onNodeDoubleClick, nodeTypes: nodeTypes, edgeTypes: edgeTypes, connectionLineType: connectionLineType, connectionLineStyle: connectionLineStyle, connectionLineComponent: connectionLineComponent, connectionLineContainerStyle: connectionLineContainerStyle, selectionKeyCode: selectionKeyCode, selectionOnDrag: selectionOnDrag, selectionMode: selectionMode, deleteKeyCode: deleteKeyCode, multiSelectionKeyCode: multiSelectionKeyCode, panActivationKeyCode: panActivationKeyCode, zoomActivationKeyCode: zoomActivationKeyCode, onlyRenderVisibleElements: onlyRenderVisibleElements, defaultViewport: defaultViewport$1, translateExtent: translateExtent, minZoom: minZoom, maxZoom: maxZoom, preventScrolling: preventScrolling, zoomOnScroll: zoomOnScroll, zoomOnPinch: zoomOnPinch, zoomOnDoubleClick: zoomOnDoubleClick, panOnScroll: panOnScroll, panOnScrollSpeed: panOnScrollSpeed, panOnScrollMode: panOnScrollMode, panOnDrag: panOnDrag, onPaneClick: onPaneClick, onPaneMouseEnter: onPaneMouseEnter, onPaneMouseMove: onPaneMouseMove, onPaneMouseLeave: onPaneMouseLeave, onPaneScroll: onPaneScroll, onPaneContextMenu: onPaneContextMenu, paneClickDistance: paneClickDistance, nodeClickDistance: nodeClickDistance, onSelectionContextMenu: onSelectionContextMenu, onSelectionStart: onSelectionStart, onSelectionEnd: onSelectionEnd, onReconnect: onReconnect, onReconnectStart: onReconnectStart, onReconnectEnd: onReconnectEnd, onEdgeContextMenu: onEdgeContextMenu, onEdgeDoubleClick: onEdgeDoubleClick, onEdgeMouseEnter: onEdgeMouseEnter, onEdgeMouseMove: onEdgeMouseMove, onEdgeMouseLeave: onEdgeMouseLeave, reconnectRadius: reconnectRadius, defaultMarkerColor: defaultMarkerColor, noDragClassName: noDragClassName, noWheelClassName: noWheelClassName, noPanClassName: noPanClassName, rfId: rfId, disableKeyboardA11y: disableKeyboardA11y, nodeExtent: nodeExtent, viewport: viewport, onViewportChange: onViewportChange }), jsx(StoreUpdater, { nodes: nodes, edges: edges, defaultNodes: defaultNodes, defaultEdges: defaultEdges, onConnect: onConnect, onConnectStart: onConnectStart, onConnectEnd: onConnectEnd, onClickConnectStart: onClickConnectStart, onClickConnectEnd: onClickConnectEnd, nodesDraggable: nodesDraggable, nodesConnectable: nodesConnectable, nodesFocusable: nodesFocusable, edgesFocusable: edgesFocusable, edgesReconnectable: edgesReconnectable, elementsSelectable: elementsSelectable, elevateNodesOnSelect: elevateNodesOnSelect, elevateEdgesOnSelect: elevateEdgesOnSelect, minZoom: minZoom, maxZoom: maxZoom, nodeExtent: nodeExtent, onNodesChange: onNodesChange, onEdgesChange: onEdgesChange, snapToGrid: snapToGrid, snapGrid: snapGrid, connectionMode: connectionMode, translateExtent: translateExtent, connectOnClick: connectOnClick, defaultEdgeOptions: defaultEdgeOptions, fitView: fitView, fitViewOptions: fitViewOptions, onNodesDelete: onNodesDelete, onEdgesDelete: onEdgesDelete, onDelete: onDelete, onNodeDragStart: onNodeDragStart, onNodeDrag: onNodeDrag, onNodeDragStop: onNodeDragStop, onSelectionDrag: onSelectionDrag, onSelectionDragStart: onSelectionDragStart, onSelectionDragStop: onSelectionDragStop, onMove: onMove, onMoveStart: onMoveStart, onMoveEnd: onMoveEnd, noPanClassName: noPanClassName, nodeOrigin: nodeOrigin, rfId: rfId, autoPanOnConnect: autoPanOnConnect, autoPanOnNodeDrag: autoPanOnNodeDrag, autoPanSpeed: autoPanSpeed, onError: onError, connectionRadius: connectionRadius, isValidConnection: isValidConnection, selectNodesOnDrag: selectNodesOnDrag, nodeDragThreshold: nodeDragThreshold, onBeforeDelete: onBeforeDelete, paneClickDistance: paneClickDistance, debug: debug }), jsx(SelectionListener, { onSelectionChange: onSelectionChange }), children, jsx(Attribution, { proOptions: proOptions, position: attributionPosition }), jsx(A11yDescriptions, { rfId: rfId, disableKeyboardA11y: disableKeyboardA11y })] }) }));\n}\nvar index = fixedForwardRef(ReactFlow);\n\nconst selector$6 = (s) => s.domNode?.querySelector('.react-flow__edgelabel-renderer');\nfunction EdgeLabelRenderer({ children }) {\n    const edgeLabelRenderer = useStore(selector$6);\n    if (!edgeLabelRenderer) {\n        return null;\n    }\n    return createPortal(children, edgeLabelRenderer);\n}\n\nconst selector$5 = (s) => s.domNode?.querySelector('.react-flow__viewport-portal');\nfunction ViewportPortal({ children }) {\n    const viewPortalDiv = useStore(selector$5);\n    if (!viewPortalDiv) {\n        return null;\n    }\n    return createPortal(children, viewPortalDiv);\n}\n\n/**\n * Hook for updating node internals.\n *\n * @public\n * @returns function for updating node internals\n */\nfunction useUpdateNodeInternals() {\n    const store = useStoreApi();\n    return useCallback((id) => {\n        const { domNode, updateNodeInternals } = store.getState();\n        const updateIds = Array.isArray(id) ? id : [id];\n        const updates = new Map();\n        updateIds.forEach((updateId) => {\n            const nodeElement = domNode?.querySelector(`.react-flow__node[data-id=\"${updateId}\"]`);\n            if (nodeElement) {\n                updates.set(updateId, { id: updateId, nodeElement, force: true });\n            }\n        });\n        requestAnimationFrame(() => updateNodeInternals(updates, { triggerFitView: false }));\n    }, []);\n}\n\nconst nodesSelector = (state) => state.nodes;\n/**\n * Hook for getting the current nodes from the store.\n *\n * @public\n * @returns An array of nodes\n */\nfunction useNodes() {\n    const nodes = useStore(nodesSelector, shallow);\n    return nodes;\n}\n\nconst edgesSelector = (state) => state.edges;\n/**\n * Hook for getting the current edges from the store.\n *\n * @public\n * @returns An array of edges\n */\nfunction useEdges() {\n    const edges = useStore(edgesSelector, shallow);\n    return edges;\n}\n\nconst viewportSelector = (state) => ({\n    x: state.transform[0],\n    y: state.transform[1],\n    zoom: state.transform[2],\n});\n/**\n * Hook for getting the current viewport from the store.\n *\n * @public\n * @returns The current viewport\n */\nfunction useViewport() {\n    const viewport = useStore(viewportSelector, shallow);\n    return viewport;\n}\n\n/**\n * Hook for managing the state of nodes - should only be used for prototyping / simple use cases.\n *\n * @public\n * @param initialNodes\n * @returns an array [nodes, setNodes, onNodesChange]\n */\nfunction useNodesState(initialNodes) {\n    const [nodes, setNodes] = useState(initialNodes);\n    const onNodesChange = useCallback((changes) => setNodes((nds) => applyNodeChanges(changes, nds)), []);\n    return [nodes, setNodes, onNodesChange];\n}\n/**\n * Hook for managing the state of edges - should only be used for prototyping / simple use cases.\n *\n * @public\n * @param initialEdges\n * @returns an array [edges, setEdges, onEdgesChange]\n */\nfunction useEdgesState(initialEdges) {\n    const [edges, setEdges] = useState(initialEdges);\n    const onEdgesChange = useCallback((changes) => setEdges((eds) => applyEdgeChanges(changes, eds)), []);\n    return [edges, setEdges, onEdgesChange];\n}\n\n/**\n * Hook for registering an onViewportChange handler.\n *\n * @public\n * @param params.onStart - gets called when the viewport starts changing\n * @param params.onChange - gets called when the viewport changes\n * @param params.onEnd - gets called when the viewport stops changing\n */\nfunction useOnViewportChange({ onStart, onChange, onEnd }) {\n    const store = useStoreApi();\n    useEffect(() => {\n        store.setState({ onViewportChangeStart: onStart });\n    }, [onStart]);\n    useEffect(() => {\n        store.setState({ onViewportChange: onChange });\n    }, [onChange]);\n    useEffect(() => {\n        store.setState({ onViewportChangeEnd: onEnd });\n    }, [onEnd]);\n}\n\n/**\n * Hook for registering an onSelectionChange handler.\n *\n * @public\n * @param params.onChange - The handler to register\n */\nfunction useOnSelectionChange({ onChange }) {\n    const store = useStoreApi();\n    useEffect(() => {\n        const nextOnSelectionChangeHandlers = [...store.getState().onSelectionChangeHandlers, onChange];\n        store.setState({ onSelectionChangeHandlers: nextOnSelectionChangeHandlers });\n        return () => {\n            const nextHandlers = store.getState().onSelectionChangeHandlers.filter((fn) => fn !== onChange);\n            store.setState({ onSelectionChangeHandlers: nextHandlers });\n        };\n    }, [onChange]);\n}\n\nconst selector$4 = (options) => (s) => {\n    if (s.nodeLookup.size === 0) {\n        return false;\n    }\n    for (const [, { hidden, internals }] of s.nodeLookup) {\n        if (options.includeHiddenNodes || !hidden) {\n            if (internals.handleBounds === undefined || !nodeHasDimensions(internals.userNode)) {\n                return false;\n            }\n        }\n    }\n    return true;\n};\nconst defaultOptions = {\n    includeHiddenNodes: false,\n};\n/**\n * Hook which returns true when all nodes are initialized.\n *\n * @public\n * @param options.includeHiddenNodes - defaults to false\n * @returns boolean indicating whether all nodes are initialized\n */\nfunction useNodesInitialized(options = defaultOptions) {\n    const initialized = useStore(selector$4(options));\n    return initialized;\n}\n\n/**\n * Hook to check if a <Handle /> is connected to another <Handle /> and get the connections.\n *\n * @public\n * @param param.type - handle type 'source' or 'target'\n * @param param.nodeId - node id - if not provided, the node id from the NodeIdContext is used\n * @param param.id - the handle id (this is only needed if the node has multiple handles of the same type)\n * @param param.onConnect - gets called when a connection is established\n * @param param.onDisconnect - gets called when a connection is removed\n * @returns an array with handle connections\n */\nfunction useHandleConnections({ type, id = null, nodeId, onConnect, onDisconnect, }) {\n    const _nodeId = useNodeId();\n    const currentNodeId = nodeId ?? _nodeId;\n    const prevConnections = useRef(null);\n    const connections = useStore((state) => state.connectionLookup.get(`${currentNodeId}-${type}-${id}`), areConnectionMapsEqual);\n    useEffect(() => {\n        // @todo dicuss if onConnect/onDisconnect should be called when the component mounts/unmounts\n        if (prevConnections.current && prevConnections.current !== connections) {\n            const _connections = connections ?? new Map();\n            handleConnectionChange(prevConnections.current, _connections, onDisconnect);\n            handleConnectionChange(_connections, prevConnections.current, onConnect);\n        }\n        prevConnections.current = connections ?? new Map();\n    }, [connections, onConnect, onDisconnect]);\n    return useMemo(() => Array.from(connections?.values() ?? []), [connections]);\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction useNodesData(nodeIds) {\n    const nodesData = useStore(useCallback((s) => {\n        const data = [];\n        const isArrayOfIds = Array.isArray(nodeIds);\n        const _nodeIds = isArrayOfIds ? nodeIds : [nodeIds];\n        for (const nodeId of _nodeIds) {\n            const node = s.nodeLookup.get(nodeId);\n            if (node) {\n                data.push({\n                    id: node.id,\n                    type: node.type,\n                    data: node.data,\n                });\n            }\n        }\n        return isArrayOfIds ? data : data[0] ?? null;\n    }, [nodeIds]), shallowNodeData);\n    return nodesData;\n}\n\n/**\n * Hook for getting an internal node by id\n *\n * @public\n * @param id - id of the node\n * @returns array with visible node ids\n */\nfunction useInternalNode(id) {\n    const node = useStore(useCallback((s) => s.nodeLookup.get(id), [id]), shallow);\n    return node;\n}\n\nfunction LinePattern({ dimensions, lineWidth, variant, className }) {\n    return (jsx(\"path\", { strokeWidth: lineWidth, d: `M${dimensions[0] / 2} 0 V${dimensions[1]} M0 ${dimensions[1] / 2} H${dimensions[0]}`, className: cc(['react-flow__background-pattern', variant, className]) }));\n}\nfunction DotPattern({ radius, className }) {\n    return (jsx(\"circle\", { cx: radius, cy: radius, r: radius, className: cc(['react-flow__background-pattern', 'dots', className]) }));\n}\n\nvar BackgroundVariant;\n(function (BackgroundVariant) {\n    BackgroundVariant[\"Lines\"] = \"lines\";\n    BackgroundVariant[\"Dots\"] = \"dots\";\n    BackgroundVariant[\"Cross\"] = \"cross\";\n})(BackgroundVariant || (BackgroundVariant = {}));\n\nconst defaultSize = {\n    [BackgroundVariant.Dots]: 1,\n    [BackgroundVariant.Lines]: 1,\n    [BackgroundVariant.Cross]: 6,\n};\nconst selector$3 = (s) => ({ transform: s.transform, patternId: `pattern-${s.rfId}` });\nfunction BackgroundComponent({ id, variant = BackgroundVariant.Dots, \n// only used for dots and cross\ngap = 20, \n// only used for lines and cross\nsize, lineWidth = 1, offset = 0, color, bgColor, style, className, patternClassName, }) {\n    const ref = useRef(null);\n    const { transform, patternId } = useStore(selector$3, shallow);\n    const patternSize = size || defaultSize[variant];\n    const isDots = variant === BackgroundVariant.Dots;\n    const isCross = variant === BackgroundVariant.Cross;\n    const gapXY = Array.isArray(gap) ? gap : [gap, gap];\n    const scaledGap = [gapXY[0] * transform[2] || 1, gapXY[1] * transform[2] || 1];\n    const scaledSize = patternSize * transform[2];\n    const offsetXY = Array.isArray(offset) ? offset : [offset, offset];\n    const patternDimensions = isCross ? [scaledSize, scaledSize] : scaledGap;\n    const scaledOffset = [\n        offsetXY[0] * transform[2] || 1 + patternDimensions[0] / 2,\n        offsetXY[1] * transform[2] || 1 + patternDimensions[1] / 2,\n    ];\n    const _patternId = `${patternId}${id ? id : ''}`;\n    return (jsxs(\"svg\", { className: cc(['react-flow__background', className]), style: {\n            ...style,\n            ...containerStyle,\n            '--xy-background-color-props': bgColor,\n            '--xy-background-pattern-color-props': color,\n        }, ref: ref, \"data-testid\": \"rf__background\", children: [jsx(\"pattern\", { id: _patternId, x: transform[0] % scaledGap[0], y: transform[1] % scaledGap[1], width: scaledGap[0], height: scaledGap[1], patternUnits: \"userSpaceOnUse\", patternTransform: `translate(-${scaledOffset[0]},-${scaledOffset[1]})`, children: isDots ? (jsx(DotPattern, { radius: scaledSize / 2, className: patternClassName })) : (jsx(LinePattern, { dimensions: patternDimensions, lineWidth: lineWidth, variant: variant, className: patternClassName })) }), jsx(\"rect\", { x: \"0\", y: \"0\", width: \"100%\", height: \"100%\", fill: `url(#${_patternId})` })] }));\n}\nBackgroundComponent.displayName = 'Background';\nconst Background = memo(BackgroundComponent);\n\nfunction PlusIcon() {\n    return (jsx(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 32 32\", children: jsx(\"path\", { d: \"M32 18.133H18.133V32h-4.266V18.133H0v-4.266h13.867V0h4.266v13.867H32z\" }) }));\n}\n\nfunction MinusIcon() {\n    return (jsx(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 32 5\", children: jsx(\"path\", { d: \"M0 0h32v4.2H0z\" }) }));\n}\n\nfunction FitViewIcon() {\n    return (jsx(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 32 30\", children: jsx(\"path\", { d: \"M3.692 4.63c0-.53.4-.938.939-.938h5.215V0H4.708C2.13 0 0 2.054 0 4.63v5.216h3.692V4.631zM27.354 0h-5.2v3.692h5.17c.53 0 .984.4.984.939v5.215H32V4.631A4.624 4.624 0 0027.354 0zm.954 24.83c0 .532-.4.94-.939.94h-5.215v3.768h5.215c2.577 0 4.631-2.13 4.631-4.707v-5.139h-3.692v5.139zm-23.677.94c-.531 0-.939-.4-.939-.94v-5.138H0v5.139c0 2.577 2.13 4.707 4.708 4.707h5.138V25.77H4.631z\" }) }));\n}\n\nfunction LockIcon() {\n    return (jsx(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 25 32\", children: jsx(\"path\", { d: \"M21.333 10.667H19.81V7.619C19.81 3.429 16.38 0 12.19 0 8 0 4.571 3.429 4.571 7.619v3.048H3.048A3.056 3.056 0 000 13.714v15.238A3.056 3.056 0 003.048 32h18.285a3.056 3.056 0 003.048-3.048V13.714a3.056 3.056 0 00-3.048-3.047zM12.19 24.533a3.056 3.056 0 01-3.047-3.047 3.056 3.056 0 013.047-3.048 3.056 3.056 0 013.048 3.048 3.056 3.056 0 01-3.048 3.047zm4.724-13.866H7.467V7.619c0-2.59 2.133-4.724 4.723-4.724 2.591 0 4.724 2.133 4.724 4.724v3.048z\" }) }));\n}\n\nfunction UnlockIcon() {\n    return (jsx(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 25 32\", children: jsx(\"path\", { d: \"M21.333 10.667H19.81V7.619C19.81 3.429 16.38 0 12.19 0c-4.114 1.828-1.37 2.133.305 2.438 1.676.305 4.42 2.59 4.42 5.181v3.048H3.047A3.056 3.056 0 000 13.714v15.238A3.056 3.056 0 003.048 32h18.285a3.056 3.056 0 003.048-3.048V13.714a3.056 3.056 0 00-3.048-3.047zM12.19 24.533a3.056 3.056 0 01-3.047-3.047 3.056 3.056 0 013.047-3.048 3.056 3.056 0 013.048 3.048 3.056 3.056 0 01-3.048 3.047z\" }) }));\n}\n\nfunction ControlButton({ children, className, ...rest }) {\n    return (jsx(\"button\", { type: \"button\", className: cc(['react-flow__controls-button', className]), ...rest, children: children }));\n}\n\nconst selector$2 = (s) => ({\n    isInteractive: s.nodesDraggable || s.nodesConnectable || s.elementsSelectable,\n    minZoomReached: s.transform[2] <= s.minZoom,\n    maxZoomReached: s.transform[2] >= s.maxZoom,\n});\nfunction ControlsComponent({ style, showZoom = true, showFitView = true, showInteractive = true, fitViewOptions, onZoomIn, onZoomOut, onFitView, onInteractiveChange, className, children, position = 'bottom-left', orientation = 'vertical', 'aria-label': ariaLabel = 'React Flow controls', }) {\n    const store = useStoreApi();\n    const { isInteractive, minZoomReached, maxZoomReached } = useStore(selector$2, shallow);\n    const { zoomIn, zoomOut, fitView } = useReactFlow();\n    const onZoomInHandler = () => {\n        zoomIn();\n        onZoomIn?.();\n    };\n    const onZoomOutHandler = () => {\n        zoomOut();\n        onZoomOut?.();\n    };\n    const onFitViewHandler = () => {\n        fitView(fitViewOptions);\n        onFitView?.();\n    };\n    const onToggleInteractivity = () => {\n        store.setState({\n            nodesDraggable: !isInteractive,\n            nodesConnectable: !isInteractive,\n            elementsSelectable: !isInteractive,\n        });\n        onInteractiveChange?.(!isInteractive);\n    };\n    const orientationClass = orientation === 'horizontal' ? 'horizontal' : 'vertical';\n    return (jsxs(Panel, { className: cc(['react-flow__controls', orientationClass, className]), position: position, style: style, \"data-testid\": \"rf__controls\", \"aria-label\": ariaLabel, children: [showZoom && (jsxs(Fragment, { children: [jsx(ControlButton, { onClick: onZoomInHandler, className: \"react-flow__controls-zoomin\", title: \"zoom in\", \"aria-label\": \"zoom in\", disabled: maxZoomReached, children: jsx(PlusIcon, {}) }), jsx(ControlButton, { onClick: onZoomOutHandler, className: \"react-flow__controls-zoomout\", title: \"zoom out\", \"aria-label\": \"zoom out\", disabled: minZoomReached, children: jsx(MinusIcon, {}) })] })), showFitView && (jsx(ControlButton, { className: \"react-flow__controls-fitview\", onClick: onFitViewHandler, title: \"fit view\", \"aria-label\": \"fit view\", children: jsx(FitViewIcon, {}) })), showInteractive && (jsx(ControlButton, { className: \"react-flow__controls-interactive\", onClick: onToggleInteractivity, title: \"toggle interactivity\", \"aria-label\": \"toggle interactivity\", children: isInteractive ? jsx(UnlockIcon, {}) : jsx(LockIcon, {}) })), children] }));\n}\nControlsComponent.displayName = 'Controls';\nconst Controls = memo(ControlsComponent);\n\nfunction MiniMapNodeComponent({ id, x, y, width, height, style, color, strokeColor, strokeWidth, className, borderRadius, shapeRendering, selected, onClick, }) {\n    const { background, backgroundColor } = style || {};\n    const fill = (color || background || backgroundColor);\n    return (jsx(\"rect\", { className: cc(['react-flow__minimap-node', { selected }, className]), x: x, y: y, rx: borderRadius, ry: borderRadius, width: width, height: height, style: {\n            fill,\n            stroke: strokeColor,\n            strokeWidth,\n        }, shapeRendering: shapeRendering, onClick: onClick ? (event) => onClick(event, id) : undefined }));\n}\nconst MiniMapNode = memo(MiniMapNodeComponent);\n\nconst selectorNodeIds = (s) => s.nodes.map((node) => node.id);\nconst getAttrFunction = (func) => func instanceof Function ? func : () => func;\nfunction MiniMapNodes({ nodeStrokeColor, nodeColor, nodeClassName = '', nodeBorderRadius = 5, nodeStrokeWidth, \n// We need to rename the prop to be `CapitalCase` so that JSX will render it as\n// a component properly.\nnodeComponent: NodeComponent = MiniMapNode, onClick, }) {\n    const nodeIds = useStore(selectorNodeIds, shallow);\n    const nodeColorFunc = getAttrFunction(nodeColor);\n    const nodeStrokeColorFunc = getAttrFunction(nodeStrokeColor);\n    const nodeClassNameFunc = getAttrFunction(nodeClassName);\n    const shapeRendering = typeof window === 'undefined' || !!window.chrome ? 'crispEdges' : 'geometricPrecision';\n    return (jsx(Fragment, { children: nodeIds.map((nodeId) => (\n        // The split of responsibilities between MiniMapNodes and\n        // NodeComponentWrapper may appear weird. However, it’s designed to\n        // minimize the cost of updates when individual nodes change.\n        //\n        // For more details, see a similar commit in `NodeRenderer/index.tsx`.\n        jsx(NodeComponentWrapper, { id: nodeId, nodeColorFunc: nodeColorFunc, nodeStrokeColorFunc: nodeStrokeColorFunc, nodeClassNameFunc: nodeClassNameFunc, nodeBorderRadius: nodeBorderRadius, nodeStrokeWidth: nodeStrokeWidth, NodeComponent: NodeComponent, onClick: onClick, shapeRendering: shapeRendering }, nodeId))) }));\n}\nfunction NodeComponentWrapperInner({ id, nodeColorFunc, nodeStrokeColorFunc, nodeClassNameFunc, nodeBorderRadius, nodeStrokeWidth, shapeRendering, NodeComponent, onClick, }) {\n    const { node, x, y, width, height } = useStore((s) => {\n        const node = s.nodeLookup.get(id);\n        const { x, y } = node.internals.positionAbsolute;\n        const { width, height } = getNodeDimensions(node);\n        return {\n            node,\n            x,\n            y,\n            width,\n            height,\n        };\n    }, shallow);\n    if (!node || node.hidden || !nodeHasDimensions(node)) {\n        return null;\n    }\n    return (jsx(NodeComponent, { x: x, y: y, width: width, height: height, style: node.style, selected: !!node.selected, className: nodeClassNameFunc(node), color: nodeColorFunc(node), borderRadius: nodeBorderRadius, strokeColor: nodeStrokeColorFunc(node), strokeWidth: nodeStrokeWidth, shapeRendering: shapeRendering, onClick: onClick, id: node.id }));\n}\nconst NodeComponentWrapper = memo(NodeComponentWrapperInner);\nvar MiniMapNodes$1 = memo(MiniMapNodes);\n\nconst defaultWidth = 200;\nconst defaultHeight = 150;\nconst selector$1 = (s) => {\n    const viewBB = {\n        x: -s.transform[0] / s.transform[2],\n        y: -s.transform[1] / s.transform[2],\n        width: s.width / s.transform[2],\n        height: s.height / s.transform[2],\n    };\n    return {\n        viewBB,\n        boundingRect: s.nodeLookup.size > 0 ? getBoundsOfRects(getInternalNodesBounds(s.nodeLookup), viewBB) : viewBB,\n        rfId: s.rfId,\n        panZoom: s.panZoom,\n        translateExtent: s.translateExtent,\n        flowWidth: s.width,\n        flowHeight: s.height,\n    };\n};\nconst ARIA_LABEL_KEY = 'react-flow__minimap-desc';\nfunction MiniMapComponent({ style, className, nodeStrokeColor, nodeColor, nodeClassName = '', nodeBorderRadius = 5, nodeStrokeWidth, \n// We need to rename the prop to be `CapitalCase` so that JSX will render it as\n// a component properly.\nnodeComponent, bgColor, maskColor, maskStrokeColor, maskStrokeWidth, position = 'bottom-right', onClick, onNodeClick, pannable = false, zoomable = false, ariaLabel = 'React Flow mini map', inversePan, zoomStep = 10, offsetScale = 5, }) {\n    const store = useStoreApi();\n    const svg = useRef(null);\n    const { boundingRect, viewBB, rfId, panZoom, translateExtent, flowWidth, flowHeight } = useStore(selector$1, shallow);\n    const elementWidth = style?.width ?? defaultWidth;\n    const elementHeight = style?.height ?? defaultHeight;\n    const scaledWidth = boundingRect.width / elementWidth;\n    const scaledHeight = boundingRect.height / elementHeight;\n    const viewScale = Math.max(scaledWidth, scaledHeight);\n    const viewWidth = viewScale * elementWidth;\n    const viewHeight = viewScale * elementHeight;\n    const offset = offsetScale * viewScale;\n    const x = boundingRect.x - (viewWidth - boundingRect.width) / 2 - offset;\n    const y = boundingRect.y - (viewHeight - boundingRect.height) / 2 - offset;\n    const width = viewWidth + offset * 2;\n    const height = viewHeight + offset * 2;\n    const labelledBy = `${ARIA_LABEL_KEY}-${rfId}`;\n    const viewScaleRef = useRef(0);\n    const minimapInstance = useRef();\n    viewScaleRef.current = viewScale;\n    useEffect(() => {\n        if (svg.current && panZoom) {\n            minimapInstance.current = XYMinimap({\n                domNode: svg.current,\n                panZoom,\n                getTransform: () => store.getState().transform,\n                getViewScale: () => viewScaleRef.current,\n            });\n            return () => {\n                minimapInstance.current?.destroy();\n            };\n        }\n    }, [panZoom]);\n    useEffect(() => {\n        minimapInstance.current?.update({\n            translateExtent,\n            width: flowWidth,\n            height: flowHeight,\n            inversePan,\n            pannable,\n            zoomStep,\n            zoomable,\n        });\n    }, [pannable, zoomable, inversePan, zoomStep, translateExtent, flowWidth, flowHeight]);\n    const onSvgClick = onClick\n        ? (event) => {\n            const [x, y] = minimapInstance.current?.pointer(event) || [0, 0];\n            onClick(event, { x, y });\n        }\n        : undefined;\n    const onSvgNodeClick = onNodeClick\n        ? useCallback((event, nodeId) => {\n            const node = store.getState().nodeLookup.get(nodeId);\n            onNodeClick(event, node);\n        }, [])\n        : undefined;\n    return (jsx(Panel, { position: position, style: {\n            ...style,\n            '--xy-minimap-background-color-props': typeof bgColor === 'string' ? bgColor : undefined,\n            '--xy-minimap-mask-background-color-props': typeof maskColor === 'string' ? maskColor : undefined,\n            '--xy-minimap-mask-stroke-color-props': typeof maskStrokeColor === 'string' ? maskStrokeColor : undefined,\n            '--xy-minimap-mask-stroke-width-props': typeof maskStrokeWidth === 'number' ? maskStrokeWidth * viewScale : undefined,\n            '--xy-minimap-node-background-color-props': typeof nodeColor === 'string' ? nodeColor : undefined,\n            '--xy-minimap-node-stroke-color-props': typeof nodeStrokeColor === 'string' ? nodeStrokeColor : undefined,\n            '--xy-minimap-node-stroke-width-props': typeof nodeStrokeWidth === 'string' ? nodeStrokeWidth : undefined,\n        }, className: cc(['react-flow__minimap', className]), \"data-testid\": \"rf__minimap\", children: jsxs(\"svg\", { width: elementWidth, height: elementHeight, viewBox: `${x} ${y} ${width} ${height}`, className: \"react-flow__minimap-svg\", role: \"img\", \"aria-labelledby\": labelledBy, ref: svg, onClick: onSvgClick, children: [ariaLabel && jsx(\"title\", { id: labelledBy, children: ariaLabel }), jsx(MiniMapNodes$1, { onClick: onSvgNodeClick, nodeColor: nodeColor, nodeStrokeColor: nodeStrokeColor, nodeBorderRadius: nodeBorderRadius, nodeClassName: nodeClassName, nodeStrokeWidth: nodeStrokeWidth, nodeComponent: nodeComponent }), jsx(\"path\", { className: \"react-flow__minimap-mask\", d: `M${x - offset},${y - offset}h${width + offset * 2}v${height + offset * 2}h${-width - offset * 2}z\n        M${viewBB.x},${viewBB.y}h${viewBB.width}v${viewBB.height}h${-viewBB.width}z`, fillRule: \"evenodd\", pointerEvents: \"none\" })] }) }));\n}\nMiniMapComponent.displayName = 'MiniMap';\nconst MiniMap = memo(MiniMapComponent);\n\nfunction ResizeControl({ nodeId, position, variant = ResizeControlVariant.Handle, className, style = {}, children, color, minWidth = 10, minHeight = 10, maxWidth = Number.MAX_VALUE, maxHeight = Number.MAX_VALUE, keepAspectRatio = false, shouldResize, onResizeStart, onResize, onResizeEnd, }) {\n    const contextNodeId = useNodeId();\n    const id = typeof nodeId === 'string' ? nodeId : contextNodeId;\n    const store = useStoreApi();\n    const resizeControlRef = useRef(null);\n    const defaultPosition = variant === ResizeControlVariant.Line ? 'right' : 'bottom-right';\n    const controlPosition = position ?? defaultPosition;\n    const resizer = useRef(null);\n    useEffect(() => {\n        if (!resizeControlRef.current || !id) {\n            return;\n        }\n        if (!resizer.current) {\n            resizer.current = XYResizer({\n                domNode: resizeControlRef.current,\n                nodeId: id,\n                getStoreItems: () => {\n                    const { nodeLookup, transform, snapGrid, snapToGrid, nodeOrigin, domNode } = store.getState();\n                    return {\n                        nodeLookup,\n                        transform,\n                        snapGrid,\n                        snapToGrid,\n                        nodeOrigin,\n                        paneDomNode: domNode,\n                    };\n                },\n                onChange: (change, childChanges) => {\n                    const { triggerNodeChanges, nodeLookup, parentLookup, nodeOrigin } = store.getState();\n                    const changes = [];\n                    const nextPosition = { x: change.x, y: change.y };\n                    const node = nodeLookup.get(id);\n                    if (node && node.expandParent && node.parentId) {\n                        const origin = node.origin ?? nodeOrigin;\n                        const width = change.width ?? node.measured.width;\n                        const height = change.height ?? node.measured.height;\n                        const child = {\n                            id: node.id,\n                            parentId: node.parentId,\n                            rect: {\n                                width,\n                                height,\n                                ...evaluateAbsolutePosition({\n                                    x: change.x ?? node.position.x,\n                                    y: change.y ?? node.position.y,\n                                }, { width, height }, node.parentId, nodeLookup, origin),\n                            },\n                        };\n                        const parentExpandChanges = handleExpandParent([child], nodeLookup, parentLookup, nodeOrigin);\n                        changes.push(...parentExpandChanges);\n                        // when the parent was expanded by the child node, its position will be clamped at\n                        // 0,0 when node origin is 0,0 and to width, height if it's 1,1\n                        nextPosition.x = change.x ? Math.max(origin[0] * width, change.x) : undefined;\n                        nextPosition.y = change.y ? Math.max(origin[1] * height, change.y) : undefined;\n                    }\n                    if (nextPosition.x !== undefined && nextPosition.y !== undefined) {\n                        const positionChange = {\n                            id,\n                            type: 'position',\n                            position: { ...nextPosition },\n                        };\n                        changes.push(positionChange);\n                    }\n                    if (change.width !== undefined && change.height !== undefined) {\n                        const dimensionChange = {\n                            id,\n                            type: 'dimensions',\n                            resizing: true,\n                            setAttributes: true,\n                            dimensions: {\n                                width: change.width,\n                                height: change.height,\n                            },\n                        };\n                        changes.push(dimensionChange);\n                    }\n                    for (const childChange of childChanges) {\n                        const positionChange = {\n                            ...childChange,\n                            type: 'position',\n                        };\n                        changes.push(positionChange);\n                    }\n                    triggerNodeChanges(changes);\n                },\n                onEnd: () => {\n                    const dimensionChange = {\n                        id: id,\n                        type: 'dimensions',\n                        resizing: false,\n                    };\n                    store.getState().triggerNodeChanges([dimensionChange]);\n                },\n            });\n        }\n        resizer.current.update({\n            controlPosition,\n            boundaries: {\n                minWidth,\n                minHeight,\n                maxWidth,\n                maxHeight,\n            },\n            keepAspectRatio,\n            onResizeStart,\n            onResize,\n            onResizeEnd,\n            shouldResize,\n        });\n        return () => {\n            resizer.current?.destroy();\n        };\n    }, [\n        controlPosition,\n        minWidth,\n        minHeight,\n        maxWidth,\n        maxHeight,\n        keepAspectRatio,\n        onResizeStart,\n        onResize,\n        onResizeEnd,\n        shouldResize,\n    ]);\n    const positionClassNames = controlPosition.split('-');\n    const colorStyleProp = variant === ResizeControlVariant.Line ? 'borderColor' : 'backgroundColor';\n    const controlStyle = color ? { ...style, [colorStyleProp]: color } : style;\n    return (jsx(\"div\", { className: cc(['react-flow__resize-control', 'nodrag', ...positionClassNames, variant, className]), ref: resizeControlRef, style: controlStyle, children: children }));\n}\nconst NodeResizeControl = memo(ResizeControl);\n\nfunction NodeResizer({ nodeId, isVisible = true, handleClassName, handleStyle, lineClassName, lineStyle, color, minWidth = 10, minHeight = 10, maxWidth = Number.MAX_VALUE, maxHeight = Number.MAX_VALUE, keepAspectRatio = false, shouldResize, onResizeStart, onResize, onResizeEnd, }) {\n    if (!isVisible) {\n        return null;\n    }\n    return (jsxs(Fragment, { children: [XY_RESIZER_LINE_POSITIONS.map((position) => (jsx(NodeResizeControl, { className: lineClassName, style: lineStyle, nodeId: nodeId, position: position, variant: ResizeControlVariant.Line, color: color, minWidth: minWidth, minHeight: minHeight, maxWidth: maxWidth, maxHeight: maxHeight, onResizeStart: onResizeStart, keepAspectRatio: keepAspectRatio, shouldResize: shouldResize, onResize: onResize, onResizeEnd: onResizeEnd }, position))), XY_RESIZER_HANDLE_POSITIONS.map((position) => (jsx(NodeResizeControl, { className: handleClassName, style: handleStyle, nodeId: nodeId, position: position, color: color, minWidth: minWidth, minHeight: minHeight, maxWidth: maxWidth, maxHeight: maxHeight, onResizeStart: onResizeStart, keepAspectRatio: keepAspectRatio, shouldResize: shouldResize, onResize: onResize, onResizeEnd: onResizeEnd }, position)))] }));\n}\n\nconst selector = (state) => state.domNode?.querySelector('.react-flow__renderer');\nfunction NodeToolbarPortal({ children }) {\n    const wrapperRef = useStore(selector);\n    if (!wrapperRef) {\n        return null;\n    }\n    return createPortal(children, wrapperRef);\n}\n\nconst nodeEqualityFn = (a, b) => a?.internals.positionAbsolute.x !== b?.internals.positionAbsolute.x ||\n    a?.internals.positionAbsolute.y !== b?.internals.positionAbsolute.y ||\n    a?.measured.width !== b?.measured.width ||\n    a?.measured.height !== b?.measured.height ||\n    a?.selected !== b?.selected ||\n    a?.internals.z !== b?.internals.z;\nconst nodesEqualityFn = (a, b) => {\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const [key, node] of a) {\n        if (nodeEqualityFn(node, b.get(key))) {\n            return false;\n        }\n    }\n    return true;\n};\nconst storeSelector = (state) => ({\n    x: state.transform[0],\n    y: state.transform[1],\n    zoom: state.transform[2],\n    selectedNodesCount: state.nodes.filter((node) => node.selected).length,\n});\nfunction NodeToolbar({ nodeId, children, className, style, isVisible, position = Position.Top, offset = 10, align = 'center', ...rest }) {\n    const contextNodeId = useNodeId();\n    const nodesSelector = useCallback((state) => {\n        const nodeIds = Array.isArray(nodeId) ? nodeId : [nodeId || contextNodeId || ''];\n        const internalNodes = nodeIds.reduce((res, id) => {\n            const node = state.nodeLookup.get(id);\n            if (node) {\n                res.set(node.id, node);\n            }\n            return res;\n        }, new Map());\n        return internalNodes;\n    }, [nodeId, contextNodeId]);\n    const nodes = useStore(nodesSelector, nodesEqualityFn);\n    const { x, y, zoom, selectedNodesCount } = useStore(storeSelector, shallow);\n    // if isVisible is not set, we show the toolbar only if its node is selected and no other node is selected\n    const isActive = typeof isVisible === 'boolean'\n        ? isVisible\n        : nodes.size === 1 && nodes.values().next().value.selected && selectedNodesCount === 1;\n    if (!isActive || !nodes.size) {\n        return null;\n    }\n    const nodeRect = getInternalNodesBounds(nodes);\n    const nodesArray = Array.from(nodes.values());\n    const zIndex = Math.max(...nodesArray.map((node) => node.internals.z + 1));\n    const wrapperStyle = {\n        position: 'absolute',\n        transform: getNodeToolbarTransform(nodeRect, { x, y, zoom }, position, offset, align),\n        zIndex,\n        ...style,\n    };\n    return (jsx(NodeToolbarPortal, { children: jsx(\"div\", { style: wrapperStyle, className: cc(['react-flow__node-toolbar', className]), ...rest, \"data-id\": nodesArray.reduce((acc, node) => `${acc}${node.id} `, '').trim(), children: children }) }));\n}\n\nexport { Background, BackgroundVariant, BaseEdge, BezierEdge, ControlButton, Controls, EdgeLabelRenderer, EdgeText, Handle, MiniMap, NodeResizeControl, NodeResizer, NodeToolbar, Panel, index as ReactFlow, ReactFlowProvider, SimpleBezierEdge, SmoothStepEdge, StepEdge, StraightEdge, ViewportPortal, applyEdgeChanges, applyNodeChanges, getSimpleBezierPath, isEdge, isNode, useConnection, useEdges, useEdgesState, useHandleConnections, useInternalNode, useKeyPress, useNodeId, useNodes, useNodesData, useNodesInitialized, useNodesState, useOnSelectionChange, useOnViewportChange, useReactFlow, useStore, useStoreApi, useUpdateNodeInternals, useViewport };\n"],"names":["cc","names","out","Array","isArray","tmp","i","length","k","errorMessages","error001","error002","error003","nodeType","error004","error005","error006","error007","id","error009","type","error008","handleType","sourceHandle","targetHandle","error010","error011","edgeType","error012","error013","lib","infiniteExtent","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","elementSelectionKeys","ConnectionMode","PanOnScrollMode","SelectionMode","initialConnection","inProgress","isValid","from","fromHandle","fromPosition","fromNode","to","toHandle","toPosition","toNode","ConnectionLineType","MarkerType","Position","oppositePosition","Left","Right","Top","Bottom","getConnectionStatus","isEdgeBase","element","isInternalNodeBase","getNodePositionWithOrigin","node","nodeOrigin","width","height","getNodeDimensions","origin","offsetX","offsetY","x","position","y","getNodesBounds","nodes","params","nodeLookup","undefined","box","reduce","currBox","nodeOrId","isId","currentNode","get","nodeBox","nodeToBox","x2","y2","getBoundsOfBoxes","Infinity","boxToRect","getInternalNodesBounds","size","forEach","filter","getNodesInside","rect","tx","ty","tScale","partially","excludeNonSelectableNodes","paneRect","pointToRendererPoint","visibleNodes","values","measured","selectable","hidden","initialWidth","initialHeight","overlappingArea","getOverlappingArea","nodeToRect","area","partiallyVisible","internals","handleBounds","dragging","push","getConnectedEdges","edges","nodeIds","Set","add","edge","has","source","target","getFitViewNodes","options","fitViewNodes","Map","optionNodeIds","map","n","includeHiddenNodes","set","async","fitView","panZoom","minZoom","maxZoom","Promise","resolve","bounds","viewport","getViewportForBounds","padding","setViewport","duration","calculateNodePosition","nodeId","nextPosition","nodeExtent","onError","parentNode","parentId","parentX","parentY","positionAbsolute","extent","expandParent","isCoordinateExtent","parentWidth","parentHeight","clampPosition","clamp","val","min","max","Math","dimensions","clampPositionToParent","childPosition","childDimensions","parent","calcAutoPanVelocity","value","abs","calcAutoPan","pos","speed","distance","box1","box2","rectToBox","getBoundsOfRects","rect1","rect2","rectA","rectB","xOverlap","yOverlap","ceil","isRectObject","obj","isNumeric","isNaN","isFinite","devWarn","message","snapPosition","snapGrid","round","snapToGrid","rendererPointToPoint","xZoom","yZoom","zoom","clampedZoom","isMacOs","navigator","userAgent","indexOf","evaluateAbsolutePosition","getPointerPosition","event","transform","containerBounds","getEventPosition","pointerPos","left","top","xSnapped","ySnapped","getDimensions","offsetWidth","offsetHeight","getHostForElement","getRootNode","window","document","inputTags","isInputDOMNode","composedPath","includes","nodeName","hasAttribute","closest","isMouseEvent","isMouse","evtX","clientX","touches","evtY","clientY","getHandleBounds","nodeElement","nodeBounds","handles","querySelectorAll","handle","getBoundingClientRect","getAttribute","getBezierEdgeCenter","sourceX","sourceY","targetX","targetY","sourceControlX","sourceControlY","targetControlX","targetControlY","centerX","centerY","calculateControlOffset","curvature","sqrt","getControlWithCurvature","x1","y1","c","getBezierPath","sourcePosition","targetPosition","labelX","labelY","getEdgeCenter","xOffset","yOffset","isEdgeVisible","sourceNode","targetNode","edgeBox","viewRect","getEdgeId","getStraightPath","handleDirections","getDirection","a","b","pow","getSmoothStepPath","borderRadius","offset","points","center","sourceDir","targetDir","sourceGapped","targetGapped","dir","dirAccessor","currDir","sourceGapOffset","targetGapOffset","defaultCenterX","defaultCenterY","defaultOffsetX","defaultOffsetY","verticalSplit","horizontalSplit","sourceTarget","targetSource","diff","gapOffset","dirAccessorOpposite","isSameDir","sourceGtTargetOppo","sourceLtTargetOppo","sourceGapPoint","targetGapPoint","getPoints","res","p","segment","bendSize","xDir","getBend","isNodeInitialized","toHandleBounds","getHandlePosition","fallbackPosition","getHandle$1","handleId","find","d","getMarkerId","marker","Object","keys","sort","key","join","getNodeToolbarTransform","nodeRect","align","alignmentOffset","shift","defaultOptions","elevateNodesOnSelect","defaults","adoptUserNodesDefaultOptions","checkEquality","mergeObjects","base","incoming","result","adoptUserNodes","parentLookup","_options","tmpLookup","selectedNodeZ","clear","userNode","internalNode","positionWithOrigin","clampedPosition","z","calculateZ","updateChildNode","console","warn","childNodes","updateParentLookup","childNode","absolutePosition","childZ","parentZ","calculateChildXYZ","positionChanged","zIndex","selected","handleExpandParent","children","changes","parentExpansions","child","parentRect","expandedRect","xChange","yChange","newWidth","newHeight","widthChange","heightChange","some","setAttributes","updateConnectionLookup","connectionLookup","edgeLookup","sourceKey","targetKey","prevSource","prevTarget","connection","edgeId","isParentSelected","hasSelector","selector","domNode","current","matches","parentElement","getEventHandlerParams","dragItems","nodesFromDragItems","dragItem","XYDrag","onNodeMouseDown","getStoreItems","onDragStart","onDrag","onDragStop","lastPos","autoPanId","autoPanStarted","mousePosition","dragStarted","d3Selection","abortDrag","update","noDragClassName","handleSelector","isSelectable","nodeClickDistance","updateNodes","dragEvent","onNodeDrag","onSelectionDrag","updateNodePositions","hasChange","nodesBox","adjustedNodeExtent","currentNodes","autoPan","panBy","autoPanSpeed","xMovement","yMovement","requestAnimationFrame","startDrag","multiSelectionActive","nodesDraggable","selectNodesOnDrag","onNodeDragStart","onSelectionDragStart","unselectNodesAndEdges","sourceEvent","mousePos","draggable","getDragItems","d3DragInstance","clickDistance","on","nodeDragThreshold","autoPanOnNodeDrag","cancelAnimationFrame","onNodeDragStop","onSelectionDragStop","button","call","destroy","ADDITIONAL_DISTANCE","getClosestHandle","connectionRadius","closestHandles","minDistance","closeNodes","getNodesWithinDistance","allHandles","oppositeHandleType","getHandle","connectionMode","withAbsolutePosition","h","getHandleType","edgeUpdaterType","handleDomNode","classList","contains","alwaysValid","isValidHandle","fromNodeId","fromHandleId","fromType","doc","flowId","isValidConnection","isTarget","querySelector","handleBelow","elementFromPoint","handleToCheck","handleNodeId","connectable","connectableEnd","Strict","XYHandle","onPointerDown","autoPanOnConnect","cancelConnection","onConnectStart","onConnect","onConnectEnd","onReconnectEnd","updateConnection","getTransform","getFromHandle","closestHandle","clickedHandle","fromHandleInternal","fromNodeInternal","newConnection","previousConnection","onPointerMove","onPointerUp","isInsideConnectionRadius","isHandleValid","isConnectionValid","connectionState","finalConnectionState","removeEventListener","addEventListener","viewChanged","prevViewport","eventViewport","transformToViewport","viewportToTransform","translate","scale","isWrappedWithClass","className","isRightClickPan","panOnDrag","usedButton","getD3Transition","selection","onEnd","hasDuration","transition","wheelDelta","factor","ctrlKey","deltaY","deltaMode","XYPanZoom","paneClickDistance","translateExtent","onPanZoom","onPanZoomStart","onPanZoomEnd","onDraggingChange","zoomPanValues","isZoomingOrPanning","usedRightMouseButton","mouseButton","timerId","panScrollTimeout","isPanScrolling","bbox","d3ZoomInstance","scaleExtent","setViewportConstrained","d3ZoomHandler","d3DblClickZoomHandler","setTransform","nextTransform","contrainedTransform","constrain","noWheelClassName","noPanClassName","onPaneContextMenu","userSelectionActive","panOnScroll","panOnScrollMode","panOnScrollSpeed","preventScrolling","zoomOnPinch","zoomOnScroll","zoomOnDoubleClick","zoomActivationKeyPressed","onTransformChange","wheelHandler","d3Zoom","preventDefault","stopImmediatePropagation","currentZoom","property","point","pinchDelta","scaleTo","deltaNormalize","deltaX","Vertical","Horizontal","shiftKey","translateBy","internal","nextViewport","clearTimeout","setTimeout","createPanOnScrollHandler","this","createZoomOnScrollHandler","passive","startHandler","createPanZoomStartHandler","panZoomHandler","sync","createPanZoomHandler","panZoomEndHandler","createPanZoomEndHandler","zoomScroll","pinchZoom","buttonAllowed","createFilter","getViewport","scaleBy","setScaleExtent","setTranslateExtent","syncViewport","currentTransform","setClickDistance","validDistance","ResizeControlVariant","getLowerExtentClamp","lowerExtent","lowerBound","getUpperExtentClamp","upperExtent","upperBound","getSizeClamp","minSize","maxSize","xor","initPrevValues","initStartValues","pointerX","pointerY","aspectRatio","nodeToChildExtent","originOffsetX","originOffsetY","XYResizer","onChange","controlPosition","boundaries","keepAspectRatio","onResizeStart","onResize","onResizeEnd","shouldResize","prevValues","startValues","controlDirection","isHorizontal","isVertical","affectsX","affectsY","getControlDirection","parentExtent","childExtent","dragHandler","paneDomNode","nodeToParentExtent","childId","storeNodeOrigin","pointerPosition","childChanges","prevX","prevY","prevWidth","prevHeight","change","isDiagonal","minWidth","maxWidth","minHeight","maxHeight","startX","startY","startWidth","startHeight","distX","floor","distY","clampX","clampY","xExtentClamp","yExtentClamp","aspectHeightClamp","aspectExtentClamp","aspectWidthClamp","getDimensionsAfterResize","isWidthChange","isHeightChange","isXPosChange","isYPosChange","xLimit","yLimit","direction","deltaWidth","deltaHeight","getResizeDirection","nextValues","callResize","useDebugValue","useSyncExternalStoreWithSelector","identity","arg","useStoreWithEqualityFn","api","equalityFn","slice","subscribe","getState","getServerState","getInitialState","createWithEqualityFnImpl","createState","defaultEqualityFn","useBoundStoreWithEqualityFn","assign","shallow$1","objA","objB","is","keysA","keyA","prototype","hasOwnProperty","StoreContext","createContext","Provider$1","Provider","zustandErrorMessage","useStore","store","useContext","Error","useStoreApi","useMemo","setState","style","display","ariaLiveStyle","margin","border","overflow","clip","clipPath","ARIA_NODE_DESC_KEY","ARIA_EDGE_DESC_KEY","ARIA_LIVE_MESSAGE","selector$o","s","ariaLiveMessage","AriaLiveMessage","rfId","jsx","A11yDescriptions","disableKeyboardA11y","jsxs","Fragment","selector$n","Panel","forwardRef","rest","ref","pointerEvents","positionClasses","split","Attribution","proOptions","hideAttribution","href","rel","selector$m","selectedNodes","selectedEdges","selectId","areEqual","SelectionListenerInner","onSelectionChange","useEffect","onSelectionChangeHandlers","fn","changeSelector","SelectionListener","storeHasSelectionChangeHandlers","defaultNodeOrigin","defaultViewport","fieldsToTrack","selector$l","setNodes","setEdges","setMinZoom","setMaxZoom","setNodeExtent","reset","setDefaultNodesAndEdges","setPaneClickDistance","elementsSelectable","StoreUpdater","props","defaultNodes","defaultEdges","previousFields","useRef","fieldName","fieldValue","fitViewOnInit","fitViewOnInitOptions","getMediaQuery","matchMedia","defaultDoc","useKeyPress","keyCode","actInsideInputWithModifier","keyPressed","setKeyPressed","useState","modifierPressed","pressedKeys","keyCodes","keysToWatch","kc","replace","keysFlat","item","concat","downHandler","metaKey","keyOrCode","useKeyOrCode","code","isMatchingKey","upHandler","delete","resetHandler","isUp","every","eventCode","useViewportHelper","zoomIn","zoomOut","zoomTo","zoomLevel","getZoom","tX","tY","tZoom","setCenter","nextZoom","fitBounds","screenToFlowPosition","clientPosition","domX","domY","correctedPosition","flowToScreenPosition","flowPosition","rendererPosition","applyChanges","elements","updatedElements","changesMap","addItemChanges","elementChanges","updatedElement","applyChange","index","splice","resizing","applyNodeChanges","applyEdgeChanges","createSelectionChange","getSelectionChanges","items","selectedIds","mutateItem","willBeSelected","getElementsDiffChanges","lookup","itemsLookup","entries","lookupItem","storeItem","elementToRemoveChange","isNode","isNodeBase","isEdge","fixedForwardRef","render","useIsomorphicLayoutEffect","useLayoutEffect","useQueue","runQueue","serial","setSerial","BigInt","queue","cb","createQueue","queueItems","BatchContext","BatchProvider","nodeQueue","useCallback","hasDefaultNodes","onNodesChange","next","payload","edgeQueue","hasDefaultEdges","onEdgesChange","selector$k","useReactFlow","viewportHelper","batchContext","useBatchContext","viewportInitialized","generalHelper","getInternalNode","getNodeRect","nodeToUse","nodeWithPosition","updateNode","nodeUpdate","prevNodes","nextNode","updateEdge","edgeUpdate","prevEdges","nextEdge","getNodes","getNode","getEdges","e","getEdge","addNodes","newNodes","addEdges","newEdges","toObject","deleteElements","nodesToRemove","edgesToRemove","onNodesDelete","onEdgesDelete","triggerNodeChanges","triggerEdgeChanges","onDelete","onBeforeDelete","matchingNodes","matchingEdges","deletable","isIncluded","parentHit","edgeIds","deletableEdges","onBeforeDeleteResult","getElementsToRemove","hasMatchingEdges","hasMatchingNodes","edgeChanges","nodeChanges","deletedNodes","deletedEdges","getIntersectingNodes","nodeOrRect","isRect","hasNodesOption","currNodeRect","isNodeIntersecting","updateNodeData","dataUpdate","nextData","data","updateEdgeData","getHandleConnections","deleteKeyOptions","win$1","containerStyle","selector$j","ZoomPane","Free","zoomActivationKeyCode","onViewportChange","isControlledViewport","zoomPane","updateDimensions","resizeObserver","ResizeObserver","observe","unobserve","useResizeHandler","paneDragging","vp","onViewportChangeStart","onMoveStart","onMove","onViewportChangeEnd","onMoveEnd","selector$i","userSelectionRect","UserSelection","wrapHandler","handler","containerRef","selector$h","Pane","isSelecting","selectionKeyPressed","selectionMode","Full","selectionOnDrag","onSelectionStart","onSelectionEnd","onPaneClick","onPaneScroll","onPaneMouseEnter","onPaneMouseMove","onPaneMouseLeave","container","prevSelectedNodesCount","prevSelectedEdgesCount","edgeIdLookup","hasActiveSelection","selectionInProgress","selectionStarted","onClick","resetSelectedElements","nodesSelectionActive","onWheel","onContextMenu","onPointerEnter","setPointerCapture","pointerId","nativeEvent","mouseX","mouseY","nextUserSelectRect","Partial","selectedEdgeIds","selectedNodeIds","selectedNode","releasePointerCapture","onPointerLeave","handleNodeClick","unselect","nodeRef","addSelectedNodes","blur","useDrag","disabled","setDragging","xyDrag","selectedAndDraggable","useMoveSelectedNodes","nodeUpdates","isSelected","xVelo","yVelo","xDiff","yDiff","NodeIdContext","Consumer","useNodeId","selector$g","connectOnClick","Handle","memo","isConnectable","isConnectableStart","isConnectableEnd","onMouseDown","onTouchStart","connectingFrom","connectingTo","clickConnecting","isPossibleEndHandle","connectionInProcess","valid","state","connectionClickStartHandle","clickHandle","connectingSelector","onConnectExtended","defaultEdgeOptions","onConnectAction","edgeParams","el","connectionExists","addEdge","isMouseTriggered","currentStore","connectablestart","connectableend","clickconnecting","connectingfrom","connectingto","connectionindicator","onClickConnectStart","onClickConnectEnd","isValidConnectionStore","isValidConnectionHandler","connectionClone","structuredClone","arrowKeyDiffs","ArrowUp","ArrowDown","ArrowLeft","ArrowRight","builtinNodeTypes","input","label","default","output","group","selector$f","transformString","NodesSelection","onSelectionContextMenu","moveSelectedNodes","focus","preventScroll","tabIndex","onKeyDown","win","selector$e","FlowRendererComponent","deleteKeyCode","selectionKeyCode","multiSelectionKeyCode","panActivationKeyCode","_panOnScroll","_panOnDrag","panActivationKeyPressed","_selectionOnDrag","deleteKeyPressed","multiSelectionKeyPressed","useGlobalKeyHandler","displayName","FlowRenderer","selector$d","onlyRenderVisible","selector$c","updateNodeInternals","NodeWrapper","onMouseEnter","onMouseMove","onMouseLeave","onDoubleClick","nodesConnectable","nodesFocusable","nodeTypes","isParent","NodeComponent","isDraggable","isFocusable","focusable","hasDimensions","observedNode","prevSourcePosition","prevTargetPosition","prevType","isInitialized","typeChanged","sourcePosChanged","targetPosChanged","force","useNodeObserver","dragHandle","nodeDimensions","inlineDimensions","getNodeInlineStyleDimensions","hasPointerEvents","onMouseEnterHandler","onMouseMoveHandler","onMouseLeaveHandler","onContextMenuHandler","onDoubleClickHandler","visibility","toLowerCase","role","ariaLabel","positionAbsoluteX","positionAbsoluteY","selector$b","NodeRendererComponent","onlyRenderVisibleElements","updates","entry","disconnect","useResizeObserver","onNodeClick","onNodeMouseEnter","onNodeMouseMove","onNodeMouseLeave","onNodeContextMenu","onNodeDoubleClick","NodeRenderer","MarkerSymbols","Arrow","color","strokeWidth","stroke","strokeLinecap","strokeLinejoin","fill","ArrowClosed","Marker","markerUnits","orient","Symbol","useMarkerSymbol","markerWidth","markerHeight","viewBox","refX","refY","MarkerDefinitions","defaultColor","markers","defaultMarkerStart","defaultMarkerEnd","ids","markerStart","markerEnd","markerId","localeCompare","createMarkerIds","MarkerDefinitions$1","EdgeTextComponent","labelStyle","labelShowBg","labelBgStyle","labelBgPadding","labelBgBorderRadius","edgeTextBbox","setEdgeTextBbox","edgeTextClasses","edgeTextRef","textBbox","getBBox","rx","ry","dy","EdgeText","BaseEdge","path","interactionWidth","strokeOpacity","getControl","getSimpleBezierPath","createSimpleBezierEdge","_id","isInternal","SimpleBezierEdge","SimpleBezierEdgeInternal","createSmoothStepEdge","pathOptions","SmoothStepEdge","SmoothStepEdgeInternal","createStepEdge","StepEdge","StepEdgeInternal","createStraightEdge","StraightEdge","StraightEdgeInternal","createBezierEdge","BezierEdge","BezierEdgeInternal","builtinEdgeTypes","straight","step","smoothstep","simplebezier","nullPosition","shiftX","shiftY","EdgeUpdaterClassName","EdgeAnchor","radius","onMouseOut","cx","cy","r","EdgeUpdateAnchors","isReconnectable","reconnectRadius","onReconnect","onReconnectStart","setReconnecting","setUpdateHover","handleEdgeUpdater","oppositeHandle","evt","onReconnectMouseEnter","onReconnectMouseOut","EdgeWrapper","edgesFocusable","edgesReconnectable","edgeTypes","EdgeComponent","reconnectable","edgeRef","updateHover","reconnecting","edgePosition","sourceHandleBounds","targetHandleBounds","getEdgePosition","elevateOnSelect","edgeOrConnectedNodeSelected","selectedZIndex","getElevatedEdgeZIndex","elevateEdgesOnSelect","markerStartUrl","markerEndUrl","onEdgeDoubleClick","onEdgeContextMenu","onEdgeMouseEnter","onEdgeMouseMove","onEdgeMouseLeave","animated","inactive","updating","addSelectedEdges","sourceHandleId","targetHandleId","selector$a","EdgeRendererComponent","defaultMarkerColor","onEdgeClick","visibleEdgeIds","EdgeRenderer","selector$9","Viewport","selector$8","storeSelector$1","useConnection","connectionSelector","combinedSelector","getSelector","selector$7","ConnectionLineWrapper","component","ConnectionLine","CustomComponent","Bezier","connectionLineType","connectionLineStyle","fromX","fromY","toX","toY","connectionStatus","pathParams","SimpleBezier","Step","SmoothStep","emptyTypes","useNodeOrEdgeTypesWarning","nodeOrEdgeTypes","GraphViewComponent","onInit","connectionLineComponent","connectionLineContainerStyle","rfInstance","useOnInitHandler","useViewportSync","GraphView","storeEdges","storeNodes","storeNodeExtent","fitViewDone","debug","createStore","fitView$1","createWithEqualityFn","triggerFitView","fitViewSync","updatedInternals","viewportNode","getComputedStyle","m22","DOMMatrixReadOnly","parentExpandChildren","dimensionChanged","parentExpandChanges","updateAbsolutePositions","nextFitViewDone","log","nodeDragItems","edgesToUnselect","nextNodeExtent","delta","transformChanged","ReactFlowProvider","initialNodes","initialEdges","Wrapper","wrapperStyle","defaultViewport$1","fitViewOptions","attributionPosition","colorMode","colorModeClassName","colorModeClass","setColorModeClass","mediaQuery","updateColorModeClass","useColorModeClass","LinePattern","lineWidth","variant","DotPattern","BackgroundVariant","defaultSize","Dots","Lines","Cross","selector$3","patternId","BackgroundComponent","gap","bgColor","patternClassName","patternSize","isDots","isCross","gapXY","scaledGap","scaledSize","offsetXY","patternDimensions","scaledOffset","_patternId","patternUnits","patternTransform","Background","PlusIcon","xmlns","MinusIcon","FitViewIcon","LockIcon","UnlockIcon","ControlButton","selector$2","isInteractive","minZoomReached","maxZoomReached","ControlsComponent","showZoom","showFitView","showInteractive","onZoomIn","onZoomOut","onFitView","onInteractiveChange","orientation","orientationClass","title","Controls","MiniMapNode","strokeColor","shapeRendering","background","backgroundColor","selectorNodeIds","getAttrFunction","func","Function","NodeComponentWrapper","nodeColorFunc","nodeStrokeColorFunc","nodeClassNameFunc","nodeBorderRadius","nodeStrokeWidth","MiniMapNodes$1","nodeStrokeColor","nodeColor","nodeClassName","nodeComponent","chrome","selector$1","viewBB","boundingRect","flowWidth","flowHeight","MiniMapComponent","maskColor","maskStrokeColor","maskStrokeWidth","pannable","zoomable","inversePan","zoomStep","offsetScale","svg","elementWidth","elementHeight","scaledWidth","scaledHeight","viewScale","viewWidth","viewHeight","labelledBy","viewScaleRef","minimapInstance","getViewScale","panStart","zoomAndPanHandler","panCurrent","panDelta","moveScale","pointer","XYMinimap","onSvgClick","onSvgNodeClick","fillRule","MAX_VALUE","contextNodeId","resizeControlRef","defaultPosition","Line","resizer","positionChange","dimensionChange","childChange","positionClassNames","colorStyleProp","controlStyle","NodeToolbarPortal","wrapperRef","createPortal","nodeEqualityFn","nodesEqualityFn","storeSelector","selectedNodesCount","NodeToolbar","isVisible","nodesArray","acc","trim"],"sourceRoot":""}