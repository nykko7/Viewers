"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[8228],{48228:(e,t,r)=>{r.r(t),r.d(t,{default:()=>y});var i=r(86326),a=r(97598),s=r.n(a),n=r(58851),o=r(55172),c=r(55530),l=r.n(c);const p=e=>{const{list:t,itemGenerator:r}=e;if(t)return t.map((t=>{if(!t)return;const i=t.generator||r;if(!i)throw new Error(`No generator for ${t}`);return i({...e,item:t})}))};r(14867),r(81985);const d=(({topLeft:e=[],topRight:t=[],bottomLeft:r=[],bottomRight:a=[],itemGenerator:s=(()=>{})})=>n=>{const o="absolute pointer-events-none microscopy-viewport-overlay";return i.createElement(i.Fragment,null,e&&e.length>0&&i.createElement("div",{"data-cy":"viewport-overlay-top-left",className:l()(o,"top-viewport left-viewport text-primary-light")},p({...n,list:e,itemGenerator:s})),t&&t.length>0&&i.createElement("div",{"data-cy":"viewport-overlay-top-right",className:l()(o,"top-viewport right-viewport-scrollbar text-primary-light")},p({...n,list:t,itemGenerator:s})),a&&a.length>0&&i.createElement("div",{"data-cy":"viewport-overlay-bottom-right",className:l()(o,"bottom-viewport right-viewport-scrollbar text-primary-light")},p({...n,list:a,itemGenerator:s})),r&&r.length>0&&i.createElement("div",{"data-cy":"viewport-overlay-bottom-left",className:l()(o,"bottom-viewport left-viewport text-primary-light")},p({...n,list:r,itemGenerator:s})))})({});var m=r(29463);var v=r(5842);class h extends i.Component{constructor(e){super(e),this.state={error:null,isLoaded:!1},this.microscopyService=void 0,this.viewer=null,this.managedViewer=null,this.container=i.createRef(),this.overlayElement=i.createRef(),this.setViewportActiveHandler=()=>{const{setViewportActive:e,viewportId:t,activeViewportId:r}=this.props;t!==r&&e(t)};const{microscopyService:t}=this.props.servicesManager.services;this.microscopyService=t}getNearbyROI(e,t=!0){const r=Object.getOwnPropertySymbols(this.viewer),i=r.find((e=>"drawingSource"===e.description)),a=r.find((e=>"pyramid"===e.description)),s=r.find((e=>"map"===e.description)),n=r.find((e=>"affine"===e.description)),o=this.viewer[i].getClosestFeatureToCoordinate(this.viewer[s].getEventCoordinate(e));if(!o)return null;const c=this.viewer._getROIFromFeature(o,this.viewer[a].metadata,this.viewer[n]);return c&&t&&this.microscopyService.selectAnnotation(c),c}async installOpenLayersRenderer(e,t){this.microscopyService.clearAnnotations();let r=t;"SR"===t.Modality&&(r=t.getSourceDisplaySet()),console.log("Loading viewer metadata",r),await(async r=>{const i=await this.microscopyService.importDicomMicroscopyViewer(),{viewer:a,metadata:s}=i,n=a.VolumeImageViewer,c=function({extensionManager:e,servicesManager:t}){const r=window.config.dataSources.find((t=>t.sourceName===e.activeDataSource)),{userAuthenticationService:i}=t.services,{wadoRoot:a,staticWado:s,singlepart:n}=r.configuration,c={url:a||"/dicomlocal",staticWado:s,singlepart:n,headers:i.getAuthorizationHeader(),errorInterceptor:m.r_.getHTTPErrorHandler()},l=new o.StaticWadoClient(c);return l.wadoURL=c.url,"dicomlocal"===e.activeDataSource&&(l.retrieveInstanceFrames=async e=>{if(!("studyInstanceUID"in e))throw new Error("Study Instance UID is required for retrieval of instance frames");if(!("seriesInstanceUID"in e))throw new Error("Series Instance UID is required for retrieval of instance frames");if(!("sopInstanceUID"in e))throw new Error("SOP Instance UID is required for retrieval of instance frames");if(!("frameNumbers"in e))throw new Error("frame numbers are required for retrieval of instance frames");console.log(`retrieve frames ${e.frameNumbers.toString()} of instance ${e.sopInstanceUID}`);const t=m.H8.getInstance(e.studyInstanceUID,e.seriesInstanceUID,e.sopInstanceUID);return(Array.isArray(e.frameNumbers)?e.frameNumbers:e.frameNumbers.split(",")).map((e=>Array.isArray(t.PixelData)?t.PixelData[+e-1]:t.PixelData))}),l}({extensionManager:this.props.extensionManager,servicesManager:this.props.servicesManager}),l=[];r.forEach((e=>{e.ImageType="string"==typeof e.ImageType?e.ImageType.split("\\"):e.ImageType;const t=(0,o.cleanDenaturalizedDataset)(v.Ay.data.DicomMetaDictionary.denaturalizeDataset(e),{StudyInstanceUID:e.StudyInstanceUID,SeriesInstanceUID:e.SeriesInstanceUID,dataSourceConfig:this.props.dataSource.getConfig()});t["00480105"]||(t["00480105"]={vr:"SQ",Value:[{"00480106":{vr:"SH",Value:["1"]}}]});const r=new s.VLWholeSlideMicroscopyImage({metadata:t}),i=r.ImageType[2];"VOLUME"!==i&&"THUMBNAIL"!==i||l.push(r)}));const p={client:c,metadata:l,retrieveRendered:!1,controls:["overview","position"]};this.viewer=new n(p),this.overlayElement&&this.overlayElement.current&&this.viewer.addViewportOverlay&&this.viewer.addViewportOverlay({element:this.overlayElement.current,coordinates:[0,0],navigate:!0,className:"OpenLayersOverlay"}),this.viewer.render({container:e});const{StudyInstanceUID:d,SeriesInstanceUID:h}=t;this.managedViewer=this.microscopyService.addViewer(this.viewer,this.props.viewportId,e,d,h),this.managedViewer.addContextMenuCallback((e=>{}))})(r.others),"SR"===t.Modality&&t.load(r)}componentDidMount(){const{displaySets:e,viewportOptions:t}=this.props,r=e[0];this.installOpenLayersRenderer(this.container.current,r).then((()=>{this.setState({isLoaded:!0})}))}componentDidUpdate(e,t,r){if(this.managedViewer&&e.displaySets!==this.props.displaySets){const{displaySets:e}=this.props,t=e[0];if(this.microscopyService.clearAnnotations(),"SR"===t.Modality){const e=t.getSourceDisplaySet();t.load(e)}}}componentWillUnmount(){this.microscopyService.removeViewer(this.viewer)}render(){const e={width:"100%",height:"100%"},t=this.props.displaySets[0],r=t.firstInstance||t.instance;return i.createElement("div",{className:"DicomMicroscopyViewer",style:e,onClick:this.setViewportActiveHandler},i.createElement("div",{style:{...e,display:"none"}},i.createElement("div",{style:{...e},ref:this.overlayElement},i.createElement("div",{style:{position:"relative",height:"100%",width:"100%"}},t&&r.imageId&&i.createElement(d,{displaySet:t,instance:t.instance,metadata:t.metadata})))),this.state.error?i.createElement("h2",null,JSON.stringify(this.state.error)):i.createElement("div",{style:e,ref:e=>{this.container.current=e,this.props.resizeRef.current=e}}),this.state.isLoaded?null:i.createElement(n.Jx,{className:"h-full w-full bg-black"}))}}h.propTypes={viewportData:s().object,activeViewportId:s().string,setViewportActive:s().func,displaySets:s().array,viewportId:s().string,viewportLabel:s().string,dataSource:s().object,viewportOptions:s().object,displaySetOptions:s().array,servicesManager:s().object,extensionManager:s().object,commandsManager:s().object,resizeRef:s().oneOfType([s().func,s().shape({current:s().any})])};const y=h}}]);
//# sourceMappingURL=8228.bundle.cf66576507e12939d599.js.map